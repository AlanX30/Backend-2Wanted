{"version":3,"sources":["context.js","hooks/useFormValues.js","hooks/useComponentVisible.js","Components/Modal.js","urlServer.js","Components/JoinModal.js","hooks/useUserData.js","Components/InvitationModal.js","Components/Navbar.js","Components/Layout.js","Components/Blank.js","Components/HomeDescription.js","Pages/Home.js","Components/MiniModal.js","Components/childModal.js","Components/inviteModal.js","Components/Tree.js","Pages/Room.js","hooks/useChildsData.js","Components/NavbarLogin.js","Pages/Signup.js","Pages/Balance.js","Pages/Administracion.js","Pages/Profile.js","App.js","index.js","Images/arbol.svg","Images/logo.svg","Images/2WANTED.svg","Images/abajo.svg","Images/ANDROID.png","Images/IOS.png","Images/esfinge.svg"],"names":["Context","createContext","children","useState","window","sessionStorage","getItem","isAuth","setIsAuth","value","toggleAuth","token","setItem","logout","removeItem","Provider","Consumer","useFormValues","setValue","onChange","e","target","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","current","contains","useEffect","document","addEventListener","removeEventListener","Modal","props","isOpen","ReactDOM","createPortal","className","onClick","onClose","getElementById","url","withRouter","joinLoading","setJoinLoading","radio1","setRadio1","radio2","setRadio2","parentInput","setParentInput","handleRadio1","handleRadio2","joinData","number","parentUser","price","random","salaName","a","preventDefault","axios","data","method","headers","authorization","then","res","error","Swal","fire","icon","title","text","history","push","id","catch","err","salaId","_id","name","Intl","NumberFormat","format","onSubmit","type","checked","placeholder","disabled","role","useUserData","update","userData","setUserData","loadingUserData","setLoadingUserData","response","getUserData","invitation","invitationData","invitationLoading","setInvitationLoading","parentUsername","host","message","countUserData","setCountUserData","filterSala","setFilterSala","dropdownFilter","modal2Open","setModal2Open","searchLoading","setSearchLoading","room1","formatNumber","onOpen2Modal","searchRoom1","iconNone","setIconNone","toggle1","toggle3","invitations","setInvitations","notifications","setNotifications","totalPages","setTotalPages","modalOpen","setModalOpen","setInvitationData","countPages","setCountPages","count","setCount","cuenta","socket","io","userName","emit","on","page","countNotification","concat","useContext","pay","deposit","setDeposit","buttonPay","setButtonPay","urlPay","setUrlPay","onPay","to","src","logo","alt","logoletra","size","ArbolImg","creator","length","map","onOpenModal","wallet","href","rel","Layout","Fragment","Blank","HomeDescription","reg_whiteSpace","actives_560","setActives_560","listRooms","setListRooms","countActives","setCountActives","activesData","setActivesData","activesLoading","setActivesLoading","total","newSalaData","users","user","parentId","undefined","space","childsId","childId1","childId2","roomValid","setRoomValid","priceValid","setPriceValid","createLoading","setCreateLoading","test","parseFloat","console","log","width","height","frameBorder","allow","allowFullScreen","Home","MiniModal","ChildModal","InviteModal","inviteLoading","setInviteLoading","newUser","msg_valid","setMsg_valid","Tree","arbolData","userModal","setUserModal","dataModal","setDataModal","parent","lineDropDown","setLineDropdown","loading","abajo","Room","loadingRoom","setLoadingRoom","setParent","inBalance","setInBalance","match","params","dataRoom","setDataRoom","loadingToBalance","setLoadingToBalance","username","searchRoom","setArbolData","loadingChildsData","setLoadingChildsData","childsData","useChildsData","acum3","acum4","i","divide","tAcum","toBalance","msg","email","password","form","loginLoading","setLoginLoading","post","autoComplete","Signup","reg_password","dni","confirm_password","bank","titular","password_valid","setPassword_valid","userValid","setUserValid","signupLoading","setSignupLoading","android","ios","IMG","required","suggested","Balance","valueFecha1","setValueFecha1","valueFecha2","setValueFecha2","viewDates","setViewDates","setLoading","balance","setBalance","countLastestPages","setCountLastestPages","activeDate","setActiveDate","handleDate","splitDate","split","fechaInicial","Date","splitDate2","fechaFinal","getFechaInicial","getFechaFinal","date","getDate","getMonth","getFullYear","getHours","getMinutes","won","salaPrice","Administracion","Profile","reg_numbers","newPassword","confirmNewPassword","newEmail","confirmNewEmail","newPasswordError","setNewPasswordError","newEmailError","setNewEmailError","passwordLoading","setPasswordLoading","emailLoading","setEmailLoading","buttonPerfil","setButtonPerfil","buttonDebito","setButtonDebito","setType","Bank","setBank","typeCount","setTypeCount","numeroCuenta","editBankValues","tipo","banco","tipoCuenta","editBankLoading","setEditBankLoading","dni_valid","setDni_valid","numeroCuenta_valid","setNumeroCuenta_valid","tipo_valid","setTipo_valid","bank_valid","setBank_valid","tipoCuenta_valid","setTipoCuenta_valid","editBank","setEditBank","cancelEditBank","setCancelEditBank","item","TypeCount","App","exact","path","component","render","module","exports"],"mappings":"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","file":"static/js/main.7ca2966e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const Context = createContext()\r\n\r\nconst Provider = ({ children }) => {\r\n\r\n  const [isAuth, setIsAuth] = useState(window.sessionStorage.getItem('token'))\r\n\r\n  const value = {\r\n    isAuth,\r\n    toggleAuth: (token) => {\r\n      setIsAuth(true)\r\n      window.sessionStorage.setItem('token', token)\r\n    },\r\n    logout: () => { \r\n      setIsAuth(false)\r\n      window.sessionStorage.removeItem('token') \r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={value}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default { Provider, Consumer: Context.Consumer }\r\n","import { useState } from 'react'\r\n\r\nexport const useFormValues = () => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (e) => setValue(e.target.value)\r\n\r\n  return { value, onChange }\r\n}\r\n","import { useState, useEffect, useRef } from \"react\"\r\n\r\nexport function useComponentVisible(initialIsVisible) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n    document.addEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n      document.removeEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./Styles/Modal.css\"\r\n\r\nfunction Modal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default Modal","export const url = 'http://localhost:8080'\r\n\r\n/* http://localhost:8080 */","import React ,{ useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport './Styles/JoinModal.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Modal from './Modal'\r\nimport axios from 'axios'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\n\r\nconst JoinModal = (props) => {\r\n\r\n    const [joinLoading, setJoinLoading] = useState(false)\r\n    const [radio1, setRadio1] = useState(true)\r\n    const [radio2, setRadio2] = useState(false)\r\n    const [parentInput, setParentInput] = useState(true)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    function handleRadio1(){\r\n        setRadio1(true)\r\n        setRadio2(false)\r\n        setParentInput(true)\r\n    }\r\n    function handleRadio2(){\r\n        setRadio1(false)\r\n        setRadio2(true)\r\n        setParentInput(false)\r\n    }\r\n\r\n    /* ----------------------------------------------------API---------------------------------------------------- */\r\n\r\n    const parentUser = useFormValues()\r\n\r\n    let joinData\r\n    let price = 0\r\n    let random = radio2 ? true : false\r\n    let salaName = ''\r\n\r\n    if(props.data){\r\n        joinData = {\r\n            salaId: props.data._id,\r\n            parentUser: `@${parentUser.value}`,\r\n            random: random\r\n        }\r\n        price = props.data.price\r\n        salaName = props.data.name\r\n    }\r\n \r\n    async function handleSubmit( e ){\r\n        e.preventDefault()\r\n\r\n        setJoinLoading(true)\r\n\r\n        await axios({\r\n            data: joinData,\r\n            method: 'post',\r\n            url: url+'/api/newUserInSala',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setJoinLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                props.history.push(`/sala/${res.data.id}`)\r\n                props.onClose()\r\n            }\r\n        }).catch(err => {\r\n            setJoinLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n     /* ----------------------------------------------------API---------------------------------------------------- */\r\n\r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <div className='join-modal'>\r\n                <h2>Estas Seguro?</h2>\r\n                <p>Nombre de sala: <span>{salaName}</span></p>\r\n                <p>Valor: <span>${formatNumber(price)}</span></p>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio1} onChange={handleRadio1} />\r\n                            <label onClick={handleRadio1}>Elegir usuario padre</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio2} onChange={handleRadio2} />\r\n                            <label onClick={handleRadio2}>Usuario padre aleatorio</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={parentInput ? 'form-group' : 'dNone'}>\r\n                        <p>Ingrese el usuario padre</p>\r\n                        <div className='d-flex'>\r\n                            <div className=\"pre-formS\">\r\n                                <div className=\"input-group-text invite-pre-form\">@</div>\r\n                            </div>\r\n                            <input className='join-input' {...parentUser} placeholder='Usuario' type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={!parentInput ? 'join-nota' : 'dNone'}>\r\n                        <p>\r\n                            <span>Nota:</span> \"Sera agregado como referido de algun usuario aleatorio con espacio disponible en esta sala.\"\r\n                        </p>\r\n                    </div>\r\n                    <button disabled={joinLoading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                        <div className={joinLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <p  className={joinLoading ? 'dNone' : ''}>Confirmar</p>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(JoinModal)","import { useState, useEffect } from 'react'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\n\r\nexport const useUserData = (update) => {\r\n    \r\n    const token = window.sessionStorage.getItem('token')\r\n    \r\n    const [userData, setUserData] = useState({})\r\n    const [loadingUserData, setLoadingUserData] = useState(false)\r\n    \r\n    useEffect(() => { \r\n\r\n        setLoadingUserData(true)\r\n\r\n        async function getUserData(){\r\n\r\n        if(token){\r\n            const response = await axios({\r\n                method: 'get',\r\n                url: url+'/api/me',\r\n                headers: {\r\n                    authorization: token\r\n                    }\r\n            })\r\n            if(response.data){\r\n                setUserData(response.data)\r\n                setLoadingUserData(false)\r\n            }\r\n        } \r\n    }\r\n    getUserData()\r\n    }, [token, update])\r\n  \r\n\r\n    return { userData, loadingUserData }\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Swal from 'sweetalert2'\r\nimport { withRouter } from 'react-router-dom'\r\nimport './Styles/InvitationModal.css'\r\nimport Modal from \"./Modal\"\r\nimport axios from 'axios'\r\nimport { url } from '../urlServer'\r\n\r\nconst InvitationModal = (props) => {\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    const invitation = props.invitationData\r\n\r\n    const [invitationLoading, setInvitationLoading] = useState(false)\r\n\r\n    let joinData\r\n\r\n    if(invitation){\r\n        joinData = {\r\n            salaId: invitation.salaId,\r\n            parentUser: invitation.parentUsername\r\n        }\r\n    }\r\n\r\n    async function handleClick( e ){\r\n        e.preventDefault()\r\n\r\n        setInvitationLoading(true)\r\n\r\n        await axios({\r\n            data: joinData,\r\n            method: 'post',\r\n            url: url+'/api/newUserInSala',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setInvitationLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                props.onClose()\r\n                props.history.push(`/sala/${res.data.id}`)\r\n            }\r\n        }).catch(err => {\r\n            setInvitationLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Are you sure?</h3>\r\n\r\n            {\r\n                invitation && <div className='invitationModal'>\r\n                    <p>Invitado por: <span>{invitation.host}</span></p>\r\n                    <p>Nombre de sala: <span>{invitation.salaName}</span></p>\r\n                    <p>Valor: <span>${formatNumber(invitation.price)}</span></p>\r\n                    <p>Usuario padre: <span>{invitation.parentUsername}</span></p>\r\n                    <p>Mensaje: <span>{invitation.message ? invitation.message : 'Ninguno' }</span></p>\r\n                    <button disabled={invitationLoading ? true : false} className='btn btn-dark btn-block invitation-button' onClick={handleClick}>\r\n                        <div className={invitationLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <p  className={invitationLoading ? 'dNone' : ''}>Unirse</p>\r\n                    </button>\r\n                </div>\r\n            }\r\n           \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(InvitationModal)","import React, { useContext, useState, useEffect } from 'react'\r\nimport io from 'socket.io-client'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport Swal from 'sweetalert2'\r\nimport logo from '../Images/logo.svg'\r\nimport './Styles/Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport { useComponentVisible } from '../hooks/useComponentVisible'\r\nimport { FcOk, FcHighPriority } from 'react-icons/fc'\r\nimport { IoMdSettings, IoIosContact } from 'react-icons/io'\r\nimport { MdRefresh, MdAccountCircle, MdAccountBalanceWallet,  MdInfo, MdSearch, MdNotificationsNone, MdFileUpload, MdFileDownload, MdKeyboardReturn,MdHelpOutline, MdChromeReaderMode, MdExitToApp } from \"react-icons/md\";\r\nimport  JoinModal  from './JoinModal'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport  InvitationModal  from './InvitationModal'\r\nimport axios from 'axios'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n    const [countUserData, setCountUserData] = useState(0)\r\n    \r\n    const { userData, loadingUserData } = useUserData(countUserData) \r\n    const [filterSala, setFilterSala] = useState(false)\r\n    const dropdownFilter = useComponentVisible(false);\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [searchLoading, setSearchLoading] = useState(false)\r\n    const room1 = useFormValues()\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n\r\n    function onOpen2Modal(price){\r\n        setModal2Open(true)\r\n    }\r\n    async function searchRoom1( e ){\r\n        e.preventDefault()\r\n\r\n        setSearchLoading(true)\r\n\r\n        dropdownFilter.setIsComponentVisible(true)\r\n\r\n            try{\r\n                const response = await axios({\r\n                    data: { name: room1.value },\r\n                    method: 'post',\r\n                    url: url+'/api/search/sala',\r\n                    headers: {\r\n                        authorization: token\r\n                    }\r\n                })\r\n\r\n                setSearchLoading(false)\r\n                setFilterSala(response.data)\r\n\r\n            }catch(error){\r\n                setSearchLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            }\r\n    }\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n\r\n    const token = window.sessionStorage.getItem('token')\r\n\r\n    const toggle1 = useComponentVisible(false);\r\n    const toggle3 = useComponentVisible(false);\r\n\r\n    const [invitations, setInvitations] = useState([])\r\n    let [notifications, setNotifications] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [invitationData, setInvitationData] = useState(null)\r\n    let [countPages, setCountPages] = useState(1)\r\n    let [count, setCount] = useState(0) \r\n    let cuenta = 0\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    function onOpenModal(invitationData){\r\n        setModalOpen(true)\r\n        setInvitationData(invitationData)\r\n    }\r\n\r\n    const socket = io(url)\r\n \r\n    if(userData.userName){\r\n        socket.emit('user_online', userData.userName)\r\n    }\r\n    \r\n    socket.on('new_message', () => {\r\n        cuenta = cuenta + 1 \r\n        setCount(cuenta) \r\n    })\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n        if(count > 0){\r\n            setCountPages(1)\r\n        }\r\n        \r\n        axios({\r\n            method: 'post',\r\n            data: {page: countPages},\r\n            url: url+'/api/invitations',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then(res => {\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                if(countPages === 1 || count > 0){\r\n                    setNotifications(res.data.countNotification)\r\n                    setTotalPages(res.data.totalPages)\r\n                    setInvitations(res.data.invitations)\r\n                    setCount(0)\r\n                }else{\r\n                    setInvitations( invitations => invitations.concat(res.data.invitations) )\r\n                    setNotifications(res.data.countNotification)\r\n                    setTotalPages(res.data.totalPages)\r\n                }\r\n            }\r\n        }).catch( error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n\r\n    },[token, countPages, count])\r\n    \r\n    function notificationButton() {\r\n        \r\n        toggle1.setIsComponentVisible(true)\r\n\r\n        if(notifications > 0) {\r\n            axios({\r\n                method: 'post',\r\n                url: url+'/api/invitations-reset',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            })\r\n    \r\n            setNotifications(0)\r\n        }\r\n    }   \r\n    \r\n    const { logout } = useContext(Context)\r\n    \r\n    function handleLogout() {\r\n        props.history.push('/')\r\n        logout()\r\n    }\r\n\r\n    //-------------Pagos--------------------------------------------------------//\r\n\r\n    const pay = useFormValues()\r\n\r\n    const [deposit, setDeposit] = useState(false)\r\n    const [buttonPay, setButtonPay] = useState(false)\r\n    const [urlPay, setUrlPay] = useState('')\r\n\r\n    const onPay = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        await axios({\r\n            method: 'post',\r\n            data: { price: pay.value },\r\n            url: url+'/api/payments',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then(res => {\r\n            setUrlPay(res.data)\r\n            setButtonPay(true)\r\n        })\r\n    }\r\n\r\n    //-------------Pagos--------------------------------------------------------//\r\n\r\n    return(\r\n        <>\r\n        <nav>\r\n{/* ------------------------------------Section-Logos---------------------------------------------------------------------- */}       \r\n            <div className={!iconNone ? \"section-logos\" : 'dNone'}>\r\n                <Link className=\"Link\" to=\"/home\">< img className='logo1' src={logo} alt='logo-img' /> <img className='logo2' src={logoletra} alt=\"logoletra\"/> </Link>\r\n            </div>\r\n{/* ------------------------------------/Section-Logos---------------------------------------------------------------------- */}       \r\n{/* ------------------------------------Section-Searcher hidden---------------------------------------------------------------------- */}      \r\n\r\n            <div className=\"section-searcher-hidden\">\r\n                <button onClick={()=> setIconNone(true)} className={!iconNone ? 'icon-navbar' : 'dNone'}><MdSearch size='23' /></button>\r\n                \r\n                <div className={iconNone  ? 'searcher-hidden' : 'dNone'}>\r\n                    <form onSubmit={searchRoom1} >\r\n                        <button onClick={()=> setIconNone(false)} type='button' className='icon-navbar'><MdKeyboardReturn size='23' /></button>\r\n                        <input {...room1} type='text' placeholder='Nombre de sala' />\r\n                        <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n{/* ------------------------------------/Section-Searcher hidden---------------------------------------------------------------------- */}            \r\n{/* ------------------------------------Section-Searcher---------------------------------------------------------------------- */}            \r\n            <div className=\"section-searcher\">\r\n\r\n                <form onSubmit={searchRoom1} >\r\n                    <div>\r\n                        <input {...room1} type='text' placeholder='Nombre de sala'/>\r\n                    </div>\r\n                    <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n                </form>\r\n                \r\n                <div ref={dropdownFilter.ref} className={dropdownFilter.isComponentVisible ? 'dropdown-menu-navbar-filter isActive' : 'dNone'}>\r\n                    { \r\n\r\n                        searchLoading ? <div className= \"spinner-border text-danger\" role=\"status\">\r\n                             <span className=\"sr-only\">Loading...</span>\r\n                        </div> : \r\n                            \r\n                        filterSala.data ?\r\n\r\n                        <div>\r\n                            \r\n                        <div className={dropdownFilter.isComponentVisible ? 'filter-sala' : 'dNone'}>            \r\n                                <div onClick={onOpen2Modal} className=' filter-sala-wrap'>\r\n                                    <img src={ArbolImg} className='' alt=\"...\" />\r\n                                    <div className='filter-sala-description'>\r\n                                        <p> Nombre de sala:  <span> {filterSala.data.name}</span>  </p>\r\n                                        <p> Creador:  <span> {filterSala.data.creator}</span>  </p>\r\n                                        <p> Valor:  <span> ${formatNumber(filterSala.data.price)}</span>  </p>\r\n                                    </div>\r\n                                </div>\r\n                            <button onClick={onOpen2Modal} className=''>Unirse</button>\r\n                        </div> \r\n                        <p className='aviso-filtro'><MdInfo />  Recuerda respetar mayusculas y minusculas</p>\r\n                        </div> : <div className='no-spaces'>{filterSala.error}! <p className='aviso-filtro'><MdInfo />   Recuerda respetar mayusculas y minusculas</p></div>\r\n                    } \r\n                </div>\r\n\r\n            </div>\r\n{/* ------------------------------------/Section-Searcher---------------------------------------------------------------------- */}       \r\n{/* ------------------------------------Section-NavIcons---------------------------------------------------------------------- */}       \r\n            <div className={!iconNone ? 'section-navIcons' : 'dNone'}>\r\n\r\n                <div className='button-nav-1'>\r\n                    <button className='icon-navbar' onClick={notificationButton}>\r\n                        <div className={notifications > 0 ? 'notification' : 'dNone'}>{notifications}</div>\r\n                        <MdNotificationsNone size='23' />\r\n                    </button>\r\n                    <div ref={toggle1.ref} className={toggle1.isComponentVisible ? 'dropdown-menu-navbar1 isActive' : 'dropdown-menu-navbar1'}>\r\n                        {\r\n                            invitations.length === 0 && <p className='no-spaces'>No hay notificationes</p>\r\n                        }\r\n                        {\r\n                            invitations.map(invitation => {\r\n                                return (\r\n                                    <li className={toggle1.isComponentVisible ? 'invitations-li isActive' : 'invitations-li'} key={invitation._id}>\r\n                                        <button className='' onClick={()=> onOpenModal(invitation)}>\r\n                                                <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                                <div className='invitation-description'>\r\n                                                    <p>Invitado por: <span> {invitation.host}</span></p>\r\n                                                    <p>Nombre de sala: <span> {invitation.salaName}</span></p>\r\n                                                    <p>valor: <span> ${formatNumber(invitation.price)}</span></p>\r\n                                                </div>\r\n                                        </button>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                        <button className={totalPages > countPages ? 'button-more-notifications' : 'dNone'} onClick={()=>{setCountPages(countPages + 1)}}>Ver mas ▼</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='button-nav-2'>\r\n\r\n                    <button onClick={()=>toggle3.setIsComponentVisible(true)} className='icon-navbar'>\r\n                        <MdAccountCircle size='23' />\r\n                    </button>\r\n\r\n                    <div ref={toggle3.ref} className={toggle3.isComponentVisible ? 'dropdown-menu-navbar2 isActive' : 'dropdown-menu-navbar2'}>\r\n                        <div onClick={()=>toggle3.setIsComponentVisible(false)} className='button-close-nav'>X</div>\r\n                        <div  className=\"item-menu-right user\">\r\n                            < IoIosContact size='46'/>    <p> {userData.userName}</p>\r\n                        </div>\r\n                        <div className='item-menu-right-wallet-container'>\r\n                            <div><MdAccountBalanceWallet />&nbsp;Billetera</div>\r\n                            <p className='balance-refresh-container'>< MdRefresh size='35' className={loadingUserData ? 'refresh-balance-loading ' : 'refresh-balance'} onClick={()=> setCountUserData(countUserData + 1)} />  ${formatNumber(userData.wallet)}</p>\r\n                        </div>\r\n                        <div className='item-menu-right-cashier'>\r\n                            <div onClick={()=> setDeposit(true)} to='/wallet' className='button-deposit'><MdFileUpload />Depositar</div>\r\n                            <div to='/wallet' className='button-withdraw'><MdFileDownload />Retirar</div>\r\n                        </div>\r\n                        <div className={deposit ? \"item-menu-right payments\" : \"dNone\"}>\r\n                             <form className={buttonPay ? 'dNone' : ''} onSubmit={onPay}>\r\n                                 <input className='pl-2' type=\"text\" {...pay} placeholder='$'/>\r\n                                 <button type='submit'>Continuar</button>\r\n                             </form>\r\n                             <div className={buttonPay ? 'button-pay' : 'dNone'} >\r\n                                <div onClick={()=> {\r\n                                    setButtonPay(false) \r\n                                    setDeposit(false)\r\n                                    }} className='cancel-pay'><FcHighPriority />&nbsp;Cancelar</div>\r\n                                <a className='Link' href={urlPay} rel=\"noopener noreferrer\" target='_blank'><FcOk />&nbsp;Confirmar pago por &nbsp; ${pay.value}</a>\r\n                             </div>\r\n                        </div>\r\n                        <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/balance/' className=\"item-menu-right\">\r\n                            <MdChromeReaderMode /><p>&nbsp;Historial de balance</p> \r\n                        </Link>\r\n                        <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/profile/' className=\"item-menu-right\" >\r\n                           < IoMdSettings /><p>&nbsp;Configuracion de usuario</p> \r\n                        </Link>\r\n                        <div className=\"item-menu-right\">\r\n                           <MdHelpOutline /><p>&nbsp;Ayuda</p> \r\n                        </div>\r\n                        <div onClick={handleLogout} className=\"item-menu-right\">\r\n                           <MdExitToApp /><p>&nbsp;Cerrar Sesion</p>  \r\n                        </div>\r\n                    </div> \r\n                </div>          \r\n\r\n            </div>\r\n{/* ------------------------------------/Section-NavIcons--------------------------------------------------------------------- */}       \r\n        </nav>\r\n        <JoinModal token={token} data={filterSala.data} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n        <InvitationModal token={token} invitationData={invitationData} isOpen={modalOpen} onClose={onCloseModal} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n\r\n\r\n","import React from \"react\"\r\nimport  Navbar  from \"./Navbar\"\r\n\r\nfunction Layout (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {props.children}\r\n            <Navbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {useEffect} from 'react'\r\n\r\nexport const Blank = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.history.push('/')\r\n    }, [props])\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport {MdHome, MdList, MdInfo} from \"react-icons/md\"\r\nimport './Styles/HomeDescription.css'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { url } from '../urlServer'\r\n\r\nexport const HomeDescription = (props) => {\r\n\r\n    const reg_whiteSpace = /^$|\\s+/\r\n    const token = window.sessionStorage.getItem('token')\r\n    const  {userData}  = useUserData()\r\n    const [actives_560, setActives_560] = useState(false)\r\n    const [listRooms, setListRooms] = useState([])\r\n    let [countActives, setCountActives] = useState(1) \r\n    const [activesData, setActivesData] = useState({})\r\n    const [activesLoading, setActivesLoading] = useState(false)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n        useEffect(() => { \r\n            if(token){\r\n                setActivesLoading(true)\r\n                axios({\r\n                    method: 'post',\r\n                    data: {page: countActives},\r\n                    url: url+'/api/search/listSalas',\r\n                    headers: {\r\n                        authorization: token\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setActivesLoading(false)\r\n                    if(res.data.error) {\r\n                        return Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: res.data.error,\r\n                        })\r\n                    }else{\r\n                        setActivesLoading(false)\r\n                        setListRooms(res.data.data)\r\n                        const data = {total: res.data.total} \r\n                        setActivesData(data)\r\n                    }\r\n                }).catch( err => {\r\n                    setActivesLoading(false)\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: err,\r\n                    })\r\n                })\r\n    \r\n            } \r\n        }, [token, countActives])\r\n\r\n    const name = useFormValues()\r\n    const price = useFormValues()\r\n    \r\n    const newSalaData = {\r\n        users: [\r\n            {\r\n                user: userData.userName,\r\n                parentId: undefined,\r\n                space: 'true',\r\n                childsId: {\r\n                    childId1: '',\r\n                    childId2: '',\r\n                }\r\n            }\r\n        ],\r\n        name: name.value,\r\n        price: price.value,\r\n        creator: userData.userName\r\n    }\r\n  \r\n    const [roomValid, setRoomValid] = useState(true)\r\n    const [priceValid, setPriceValid] = useState(true)\r\n    const [createLoading, setCreateLoading] = useState(false)\r\n\r\n    async function newSala( e ){\r\n        e.preventDefault()\r\n\r\n        if( reg_whiteSpace.test(name.value) || name.value.length < 4 || name.value.length > 15){\r\n            return setRoomValid(false)\r\n        }else { setRoomValid(true)}\r\n        if(parseFloat(price.value) < 5000 || price.value ===  '' ){\r\n            return setPriceValid(false)\r\n        }else{ setPriceValid(true) }\r\n\r\n        setCreateLoading(true)\r\n\r\n            await axios({\r\n                data: newSalaData,\r\n                method: 'post',\r\n                url: url+'/api/new/sala',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            }).then(res => {\r\n                setCreateLoading(false)\r\n                if (res.data.error) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    props.props.history.push(`/sala/${res.data.id}`)}\r\n            }).catch(err => {\r\n                setCreateLoading(false)\r\n                console.log(err)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n    }\r\n    \r\n    return(\r\n        <div className='home-container'>\r\n\r\n            <div className={actives_560 ? 'home-left' : 'home-left home-left-560'}>\r\n\r\n\r\n                <div className='actives-rooms'>\r\n                    <h3>Tus Salas</h3>\r\n                    <div className={activesData.total === 1 ? 'dNone' : 'pagination'}>\r\n                        <button disabled={countActives === 1 ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives -= 1) } ><AiOutlineCaretLeft size='30'/></button> \r\n                            <p><span>{countActives}</span> - {activesData.total}</p> \r\n                        <button disabled={countActives === activesData.total ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives += 1) }><AiOutlineCaretRight size='30' /></button>\r\n                    </div>\r\n                    {\r\n                    activesLoading ? \r\n                        <div className=' text-center'>\r\n                            <div className=\"spinner-border spiner-actives text-danger\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div> : \r\n                        <div>\r\n                            {\r\n                                listRooms.length === 0 ? <p className='no-salas-actives'>No hay salas creadas!</p>  :\r\n\r\n                                <div>\r\n                                    \r\n                                    <ul>\r\n                                        {\r\n                                            listRooms.map((data) => {\r\n                                                return (\r\n                                                    <li className='actives-li' key={data._id}>\r\n                                                        <Link to={`/sala/${data._id}`} className='actives-links Link'>\r\n                                                            <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                                            <div className='actives-description'>\r\n                                                                <p>Nombre de sala: <span>{data.name}</span></p>\r\n                                                                <p>Valor: <span>${formatNumber(data.price)}</span></p>\r\n                                                                <p>Creador: <span>{data.creator}</span></p>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    </li>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul>        \r\n                                </div>\r\n                            }\r\n                        </div> \r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className={!actives_560 ? 'home-right' : 'home-right home-right-560'}>\r\n\r\n                <div className=\"create-custom\">\r\n                    <div className='create-form-container'>\r\n                        <h3>Crear Sala</h3>    \r\n                        <form onSubmit={newSala} >\r\n                            <div className={roomValid ? 'mb-3' : 'mb-2'}>\r\n                                <div className='d-flex'>\r\n                                    <div>\r\n                                        <div className=\"input-group-text input-guide\">< MdHome /></div>\r\n                                    </div>\r\n                                    <input type='text' {...name} placeholder='Nombre de sala' />\r\n                                </div>\r\n                                <label className={!roomValid ? 'new-room-valid' : 'dNone'}><MdInfo />Minimo 4 caracteres, maximo 15, no debe haber espacios</label>\r\n                            </div>\r\n                            <div className={priceValid ? 'mb-3' : 'mb-2'}>\r\n                                <div className='d-flex'>\r\n                                    <div>\r\n                                        <div className=\"input-group-text input-guide\">$</div>\r\n                                    </div>\r\n                                    <input  placeholder='Valor' type='text' {...price} />\r\n                                </div>\r\n                                <label className={!priceValid ? 'new-room-valid' : 'dNone'}><MdInfo />Valor Minimo de Sala $5.000 COP</label>\r\n                            </div>\r\n                            <button disabled={createLoading ? true : false}>\r\n                                <div className={!createLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                                <p className={!createLoading ? 'dNone' : ''}>Crear</p>\r\n                            </button>\r\n                        </form>   \r\n                    </div>       \r\n                </div>\r\n                <div className='section-video'>\r\n                    <div className='youtube-container'>\r\n                        <h3>Instrucciones</h3>\r\n                        <div className='youtube-wrap'>\r\n                            <iframe className='youtube-video' width=\"560\" height=\"315\" title='Instrucciones' src=\"https://www.youtube.com/embed/kIBaxpNuGBs\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='navigation-container'>\r\n                <button onClick={()=> setActives_560(false) } className={!actives_560 ? 'navigation-button navigation-left' : 'navigation-button left-button' }><MdHome size='35' /></button>  \r\n                <button onClick={()=> setActives_560(true) } className={actives_560 ? 'navigation-button navigation-right' : 'navigation-button' }><MdList size='35' /></button>  \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { HomeDescription } from '../Components/HomeDescription'\r\n\r\nexport const Home = (props) => {\r\n\r\n    return(\r\n        <>\r\n        <HomeDescription props={props} />\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport './Styles/MiniModal.css'\r\n\r\nfunction MiniModal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"MiniModal\">\r\n                <div className=\"MiniModal__container\">\r\n                    <button onClick={props.onClose} className=\"MiniModal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default MiniModal","import React from 'react'\r\nimport MiniModal from './MiniModal'\r\n\r\nexport const ChildModal = (props) =>{\r\n    return (\r\n        <MiniModal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <h3>User:</h3>\r\n            <br/>\r\n            <h4>{props.user}</h4>\r\n        </MiniModal>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Modal from \"./Modal\"\r\nimport Swal from 'sweetalert2'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { MdInfo } from \"react-icons/md\"\r\nimport axios from 'axios'\r\nimport './Styles/Invite.css'\r\nimport { url } from '../urlServer'\r\n\r\nexport const InviteModal = (props) => {\r\n    \r\n    const user = useFormValues()\r\n    const message = useFormValues()\r\n\r\n    const [inviteLoading, setInviteLoading] = useState(false)\r\n\r\n    let data\r\n\r\n    if(props.data){\r\n        data = {\r\n            newUser: `@${user.value}`, parentUsername: props.data.parentUsername,\r\n            message: message.value, salaId: props.data.salaId,\r\n            price: props.data.price, salaName: props.data.salaName, host: props.data.host\r\n        }\r\n    }\r\n\r\n    const [msg_valid, setMsg_valid] = useState(true)\r\n\r\n    async function handleSubmit( e ){\r\n        e.preventDefault()\r\n\r\n        if(message.value.length > 50){\r\n            return setMsg_valid(false)\r\n        }else{setMsg_valid(true)}\r\n\r\n        setInviteLoading(true)\r\n        \r\n        await axios({\r\n            data: data,\r\n            method: 'post',\r\n            url: url+'/api/new-invitation',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setInviteLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Invitacion enviada',\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setInviteLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n        props.onClose() \r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Invitar Usuario</h3>\r\n            <form className='invite-form' onSubmit={handleSubmit}>\r\n                <div className='d-flex'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">@</div>\r\n                    </div>\r\n                    <input {...user} type=\"text\" placeholder='Usuario'/>\r\n                </div>\r\n                <div className=\"form-group mt-4 mb-4\">\r\n                    <input {...message} type=\"text\" placeholder='Mensaje Opcional'/>\r\n                    <label className={msg_valid ? 'dNone' : 'warning-invite'}><MdInfo />&nbsp;Maximo 50 caracteres</label>\r\n                </div>\r\n                <button disabled={inviteLoading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                    <div className={inviteLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={inviteLoading ? 'dNone' : ''}>Invitar</p>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport abajo from '../Images/abajo.svg'\r\nimport './Styles/Tree.css'\r\nimport { ChildModal } from './childModal'\r\nimport { InviteModal } from './inviteModal'\r\n\r\nexport const Tree = (props) => {\r\n\r\n    const arbolData = props.arbolData\r\n    /* ---------------------------------------------------Modales------------------------- */\r\n    \r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [userModal, setUserModal] = useState(null)\r\n    const [dataModal, setDataModal] = useState(null)\r\n\r\n    \r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    function onOpenModal(user){\r\n        setModalOpen(true)\r\n        setUserModal(user)\r\n    }\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n    \r\n    function onOpen2Modal(parent){\r\n        const data = {\r\n            parentUsername: parent, salaId: props.salaId, price: props.price, salaName: props.salaName, host: props.userName\r\n        }\r\n        setModal2Open(true)\r\n        setDataModal(data)\r\n    }\r\n    \r\n    /* ---------------------------------------------------lineDropdown------------------------- */\r\n\r\n    const [lineDropDown, setLineDropdown] = useState(false)\r\n\r\n    /* ---------------------------------------------------lineDropdown------------------------- */\r\n  \r\n    if(props.loading){\r\n        return <div className=\"spinner-border tree-spinner text-danger\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='tree-wrap'>\r\n                <div className='nivel'>\r\n                    <div className='child'></div>\r\n                </div>\r\n                <p className='level-text'>Nivel 1</p>\r\n                <div className='nivel'>\r\n                    <button onClick={arbolData[0] ? ()=> onOpenModal(arbolData[0]) : ()=> onOpen2Modal(props.userName)} className={arbolData[0] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[1] ? ()=> onOpenModal(arbolData[1]) : ()=> onOpen2Modal(props.userName)} className={arbolData[1] ? 'child' : 'noChild'}>+</button>\r\n                </div>\r\n                <p className='level-text'>Nivel 2</p>\r\n                <div className='nivel'>\r\n                    <button onClick={arbolData[2] ? ()=> onOpenModal(arbolData[2]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[2] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[3] ? ()=> onOpenModal(arbolData[3]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[3] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[4] ? ()=> onOpenModal(arbolData[4]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[4] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[5] ? ()=> onOpenModal(arbolData[5]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[5] ? 'child' : 'noChild'}>+</button>\r\n                </div>\r\n                <p className='level-text'>Nivel 3 &nbsp; <span>${formatNumber(props.price / 2)} c/u</span></p>\r\n                <div className='nivel'>\r\n                    <button onClick={arbolData[6] ? ()=> onOpenModal(arbolData[6]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[6] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[7] ? ()=> onOpenModal(arbolData[7]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[7] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[8] ? ()=> onOpenModal(arbolData[8]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[8] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[9] ? ()=> onOpenModal(arbolData[9]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[9] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[10] ? ()=> onOpenModal(arbolData[10]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[10] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[11] ? ()=> onOpenModal(arbolData[11]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[11] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[12] ? ()=> onOpenModal(arbolData[12]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[12] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[13] ? ()=> onOpenModal(arbolData[13]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[13] ? 'child' : 'noChild'}>+</button>\r\n                </div>\r\n                <p className='level-text'>Nivel 4 &nbsp; <span>${formatNumber(props.price / 4)} c/u</span></p>\r\n                <div className='nivel displayNone1'>\r\n                    <button onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>+</button>\r\n                    <button onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>+</button>\r\n                </div>\r\n                <button className='btn-lineDropDown' onClick={()=> setLineDropdown(!lineDropDown)}> <img src={abajo} alt=\"abajo\"/> </button>\r\n                <div className={lineDropDown ? 'nivel2' : 'vNone'}>\r\n                    <div className='lineDropDown-separator'>\r\n                        <div className=\"linePar-container\">\r\n                            <p>1</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"linePar-container\">\r\n                            <p>2</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"linePar-container\">\r\n                            <p>3</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"linePar-container\">\r\n                            <p>4</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>           \r\n                    </div>\r\n                    <div className='lineDropDown-separator'>\r\n                        <div className=\"linePar-container\">\r\n                            <p>5</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"linePar-container\">\r\n                            <p>6</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"linePar-container\">\r\n                            <p>7</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"linePar-container\">\r\n                            <p>8</p>\r\n                            <div className=\"linePar\">\r\n                                <button onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>+</button>\r\n                                <button onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>+</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ChildModal user={userModal} isOpen={modalOpen} onClose={onCloseModal}/>\r\n            <InviteModal token={props.token} data={dataModal} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n        </>\r\n    )\r\n    \r\n}","import React, { useState, useEffect } from 'react'\r\nimport './Styles/Room.css'\r\nimport Swal from 'sweetalert2'\r\nimport { Tree } from '../Components/Tree'\r\nimport { useChildsData }  from '../hooks/useChildsData'\r\nimport { MdAccountBalanceWallet } from \"react-icons/md\";\r\nimport { useUserData }  from '../hooks/useUserData'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\n\r\nexport const Room = (props) => {\r\n\r\n    const [loadingRoom, setLoadingRoom] = useState(true)\r\n    const [parent, setParent] = useState('')\r\n    const [inBalance, setInBalance] = useState(0)\r\n    const token = window.sessionStorage.getItem('token')\r\n    const salaId = props.match.params.salaId\r\n    const [dataRoom, setDataRoom] = useState(false)\r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const [loadingToBalance, setLoadingToBalance] = useState(false)\r\n    \r\n    const { userData: {userName} } = useUserData()\r\n    \r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        async function searchRoom(){\r\n            try {\r\n                if(userName){\r\n                    const response = await axios({\r\n                        data: { salaId: salaId, username: userName },\r\n                        method: 'post',\r\n                        url: url+'/api/search/sala',\r\n                        headers: {\r\n                            authorization: token\r\n                        }\r\n                    })\r\n                if(response.data.error){\r\n                    const error = response.data.error.name === 'CastError' ? 'Esta Sala no existe' : response.data.error.name\r\n                    setLoadingRoom(false)\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: error,\r\n                    })\r\n                }else{\r\n                    setInBalance(response.data.inBalance)\r\n                    setLoadingRoom(false)\r\n                    setParent(response.data.parentId)\r\n                    setDataRoom(response.data.data)  \r\n                }\r\n            }\r\n                }catch(error){\r\n                    setLoadingRoom(false)\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: error,\r\n                    })\r\n            }\r\n        }\r\n        searchRoom()\r\n\r\n    },[userName, salaId, token, countUserData])\r\n\r\n    const { arbolData, loadingChildsData } = useChildsData(salaId, userName)\r\n    \r\n    const price = dataRoom ? dataRoom.price : 0\r\n\r\n    let acum3 = 0\r\n    let acum4 = 0   \r\n\r\n    for(let i = 6; i<=13; i++) {\r\n        let divide = price/2   \r\n        if(arbolData[i]){\r\n            acum3 = acum3 + divide\r\n        }\r\n    }\r\n    for(let i = 14; i<=29; i++){\r\n        let divide = price/4  \r\n        if(arbolData[i]){\r\n            acum4 = acum4 + divide\r\n        }\r\n    }\r\n\r\n    const tAcum = acum3 + acum4\r\n\r\n    async function handleToBalance(){\r\n        setLoadingToBalance(true)\r\n        await axios({\r\n            method: 'post',\r\n            data: {user: userName, toBalance: 'true'},\r\n            url: `${url}/api/in-sala?id=${salaId}`,\r\n            headers: {\r\n                 authorization: token\r\n            }\r\n        }).then(res => {\r\n            setCountUserData(countUserData + 1)\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: res.data.msg,\r\n            })\r\n            setLoadingToBalance(false)\r\n        }).catch(error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n            setLoadingToBalance(false)\r\n        })\r\n    }\r\n    \r\n    if(loadingRoom || loadingChildsData){\r\n        return <div className='loading-room'>\r\n            <div className=\"spinner-border spiner-room text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    if(!dataRoom){\r\n        return <div></div>\r\n    }\r\n    \r\n    return (\r\n        <div className='room'>\r\n            <div>\r\n                <div className='arbol-container'>\r\n                    <Tree loading={loadingChildsData} token={token} userName={userName} salaName={dataRoom.name} price={dataRoom.price} salaId={dataRoom._id} arbolData={arbolData} />\r\n                </div>\r\n            </div>    \r\n            <div>\r\n                <div className='room-details'>\r\n                    <p>Nombre de sala:</p>\r\n                    <span>{dataRoom.name}</span>\r\n                    <p>Valor de sala:</p>\r\n                    <span>${formatNumber(dataRoom.price)}</span>\r\n                    <p>Tu usuario padre:</p>\r\n                    <span>{parent}</span>\r\n                    <p>Creador:</p>\r\n                    <span>{dataRoom.creator}</span>\r\n                    <p>Acumulado en nivel 3:</p>\r\n                    <span>${formatNumber(acum3)}</span>\r\n                    <p>Acumulado en nivel 4:</p>\r\n                    <span>${formatNumber(acum4)}</span>\r\n                    <p>Total acumulado:</p>\r\n                    <span>${formatNumber(tAcum)}</span>                   \r\n                    <p>Acumulado retirado:</p>\r\n                    <span>${formatNumber(inBalance)}</span>\r\n                    <button disabled={tAcum > inBalance ? false : true} onClick={handleToBalance}>\r\n                        <div className={!loadingToBalance ? '' : 'dNone'}>\r\n                            <p>Retirar a billetera</p>\r\n                            <label>${tAcum > inBalance ? formatNumber(tAcum - inBalance) : 0} ➜ <MdAccountBalanceWallet /></label>\r\n                        </div>\r\n                        <div className={loadingToBalance ? \"spinner-toBalance spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\n\r\nexport const useChildsData = (salaId, userName) => {\r\n\r\n    const token = window.sessionStorage.getItem('token')\r\n\r\n    const [arbolData, setArbolData] = useState([])\r\n\r\n    const [loadingChildsData, setLoadingChildsData] = useState(true)\r\n            \r\n    useEffect(()=>{\r\n\r\n        setLoadingChildsData(true)\r\n\r\n        async function childsData(){\r\n\r\n            const response = await axios({\r\n                method: 'post',\r\n                data: {user: userName},\r\n                url: `${url}/api/in-sala?id=${salaId}`,\r\n                headers: {\r\n                     authorization: token\r\n                }\r\n            })       \r\n            \r\n            const data = await response.data\r\n\r\n            await setArbolData(data)\r\n\r\n            setLoadingChildsData(false)\r\n\r\n        }  \r\n        childsData()\r\n    },[salaId, userName, token])\r\n\r\n    return {arbolData, loadingChildsData}\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport logo from '../Images/logo.svg'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { url } from '../urlServer'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport axios from 'axios'\r\nimport './Styles/NavbarLogin.css'\r\n\r\n const NavbarLogin = (props) => {\r\n\r\n    const email = useFormValues()\r\n    const password = useFormValues()\r\n\r\n    const form = {\r\n        email: email.value,\r\n        password: password.value\r\n    }\r\n\r\n    const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        setLoginLoading(true)\r\n        axios.post(url+'/api/users/signin', form)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                setLoginLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                props.toggleAuth(res.data.token)\r\n                props.history.push(`/home`)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setLoginLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar-arbol-login\">\r\n                <Link className=\"logo\" to=\"/\"><img className='login-logo1' src={logo} alt='logo-img' /><img className='login-logo2' src={logoletra} alt=\"logoletra\"/></Link>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group login-inputs\">\r\n                            <input autoComplete=\"on\" type=\"email\" className='form-control' {...email} placeholder='Email'/>\r\n                        </div>\r\n                        <div className=\"form-group login-inputs\">\r\n                            <input autoComplete='on' className=\"form-control\" type=\"password\" {...password} placeholder=\"Contraseña\"/>\r\n                            <a href='https://www.youtube.com/' target='_blank' rel=\"noopener noreferrer\">Olvidaste tu cuenta?</a>\r\n                        </div>\r\n                        <button disabled={loginLoading ? true : false} type='submit' className=\"login-button\">\r\n                            <div className={loginLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        <p className={loginLoading ? 'dNone' : ''}>Entrar</p>\r\n                        </button>\r\n                    </form>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavbarLogin)","import React, { useContext, useState } from 'react'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport Swal from 'sweetalert2'\r\nimport NavbarLogin from '../Components/NavbarLogin'\r\nimport { MdCreditCard, MdInfo, MdLockOutline, MdMail } from \"react-icons/md\";\r\nimport { Context } from '../context'\r\nimport axios from 'axios'\r\nimport android from '../Images/ANDROID.png'\r\nimport ios from '../Images/IOS.png'\r\nimport IMG from '../Images/esfinge.svg'\r\nimport './Styles/Signup.css'\r\nimport { url } from '../urlServer'\r\n\r\nexport const Signup = (props) => {\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const { toggleAuth } = useContext(Context)\r\n\r\n    const userName = useFormValues()\r\n    const email = useFormValues()\r\n    const dni = useFormValues()\r\n    const password = useFormValues()\r\n    const confirm_password = useFormValues()\r\n\r\n    const form = {\r\n        userName: `@${userName.value}`,\r\n        email: email.value,\r\n        dni: dni.value,\r\n        password: password.value,\r\n        confirm_password: confirm_password.value,\r\n        bank: {\r\n            titular: ''\r\n        }\r\n    }\r\n\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    \r\n    const [userValid, setUserValid] = useState(true)\r\n    const [signupLoading, setSignupLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        \r\n        if(userName.value.length < 4 || userName.value.length > 16){\r\n            return setUserValid(false)\r\n        }else{setUserValid(true)}\r\n        if(reg_whiteSpace.test(userName.value)) {\r\n           return setUserValid(false)\r\n        }else{setUserValid(true)}\r\n        if(!reg_password.test(password.value)){\r\n           return setPassword_valid(false)\r\n        }else{setPassword_valid(true)}\r\n\r\n        setSignupLoading(true)\r\n\r\n        axios.post( url+'/api/users/signup', form)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                setSignupLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                toggleAuth(res.data.token)\r\n                props.history.push(`/home`)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setSignupLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    \r\n    }\r\n        \r\n    return(\r\n        <>   \r\n\r\n        <NavbarLogin toggleAuth={toggleAuth} />\r\n\r\n        <div className='signup-container'>\r\n\r\n            <div className='signup-left'>\r\n\r\n                <div className='apps-button'>\r\n                    <div>\r\n                        <img className='android-button' alt='android' src={android} />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <img className='ios-button' alt='ios' src={ios} />\r\n                    </div>\r\n                </div>\r\n\r\n                <img className='logo-signup-p' src={IMG} alt=\"\"/>\r\n\r\n            </div>\r\n\r\n             <div className='signup-right'>\r\n                <div className='card-signup'>\r\n                            <h3 className=\"text-center text-white card-header pl-4\">\r\n                                Registrarse\r\n                            </h3>\r\n                            <div className=\"card-body form-body\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\">@</div>\r\n                                            </div>\r\n                                            <input type=\"text\" id=\"inlineFormInputGroupUsername2\" className='form-control' {...userName} placeholder='Nombre de usuario' required/>\r\n                                        </div>\r\n                                        <label className={!userValid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Minimo 8 caracteres, Maximo 16, sin espacios</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdMail /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"email\" className='form-control' {...email} placeholder='Email' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdCreditCard /></div>\r\n                                            </div>\r\n                                            <input type=\"text\" className='form-control' {...dni} placeholder='CC, DNI ETC...' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\"  className='form-control' {...password} placeholder='Contraseña' required/>\r\n                                        </div>\r\n                                        <label className={!password_valid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Debe contener mayuscula, minuscula y numero, minimo 8 caracteres</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                    <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\" suggested=\"new-password\" className='form-control' {...confirm_password} placeholder='Confirmar contraseña' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button disabled={signupLoading ? true : false} type='submit' className='button-signup'>\r\n                                        <div className={signupLoading ? \"spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={signupLoading ? 'dNone' : ''}>Registrarse</p>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        </div>    \r\n\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport axios from 'axios'\r\nimport { RiArrowDownSLine } from \"react-icons/ri\"\r\nimport { MdChromeReaderMode } from \"react-icons/md\"\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport './Styles/Balance.css'\r\nimport { url } from '../urlServer'\r\n\r\nexport const Balance = () => {\r\n\r\n    const token = window.sessionStorage.getItem('token')\r\n\r\n    const { userData } = useUserData()\r\n\r\n    const [valueFecha1, setValueFecha1] = useState('') \r\n    const [valueFecha2, setValueFecha2] = useState('') \r\n\r\n    const [viewDates, setViewDates] = useState(false)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    \r\n    const [ balance, setBalance ] = useState([])\r\n\r\n    const [countPages, setCountPages] = useState(1)\r\n    \r\n    const [totalPages, setTotalPages] = useState(1)\r\n    \r\n    const [countLastestPages, setCountLastestPages] = useState(1)\r\n    \r\n\r\n    useEffect(() => { \r\n        \r\n        setLoading(true)\r\n            \r\n        axios({\r\n            method: 'post',\r\n            data: {page: countPages},\r\n            url: url+'/api/userbalance',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setTotalPages(res.data.totalPages)\r\n                setBalance(res.data.data)\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }, [token, countLastestPages])\r\n\r\n    const [activeDate, setActiveDate] = useState(false)\r\n\r\n    function handleDate(e){\r\n\r\n        if(e){\r\n            e.preventDefault()\r\n        }\r\n\r\n        setLoading(true)\r\n        \r\n        const splitDate = valueFecha1.split('-')\r\n\r\n        const fechaInicial = new Date(splitDate[0], splitDate[1]-1, splitDate[2])\r\n\r\n        const splitDate2 = valueFecha2.split('-')\r\n\r\n        const fechaFinal = new Date(splitDate2[0], splitDate2[1]-1, splitDate2[2], 24, 0, 0)\r\n\r\n        if(!activeDate) {\r\n            setCountPages(1)\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { getFechaInicial: fechaInicial, getFechaFinal: fechaFinal, page: countPages},\r\n            url: url+'/api/userbalance',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then(res => {\r\n            setActiveDate(true)\r\n            setBalance(res.data.data)\r\n            setTotalPages(res.data.totalPages)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return <div className='balance-container'>\r\n\r\n        <div className='balance-title'>\r\n            <h3><MdChromeReaderMode /> Historial de balance</h3>\r\n        </div>\r\n        <form className='date-form' onSubmit={handleDate}>\r\n            <div className='wallet-balance'>\r\n                <label>Billetera:</label><span>${formatNumber(userData.wallet)}</span>\r\n            </div>\r\n            <p onClick={()=>setViewDates(!viewDates)}>Busqueda por Fecha</p>\r\n            <div onClick={()=>setViewDates(!viewDates)} className='flecha-busqueda-balance'>< RiArrowDownSLine /></div>\r\n            <p className={viewDates ? '' : 'none-balance'}>Desde </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha1(e.target.value)}/>\r\n            <p className={viewDates ? '' : 'none-balance'}>Hasta </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha2(e.target.value)}/>\r\n            <button className={viewDates ? '' : 'none-balance'}>Buscar</button>\r\n        </form>\r\n\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n\r\n        {\r\n            loading ? <div>\r\n                <div className=\"spinner-balance spinner-border text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            </div> :\r\n            balance.length <= 0 ? <div>\r\n                <h3 className='no-events-balance'>No hay eventos</h3>\r\n            </div> :\r\n            <div className='balance-list'>\r\n            {\r\n                balance.map((balance)=> {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Recibido en sala:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Billetera:</p>\r\n                                <p>${formatNumber(balance.wallet)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ ${formatNumber(balance.won)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Pago de sala:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Billetera:</p>\r\n                                <p>${formatNumber(balance.wallet)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- ${formatNumber(balance.salaPrice)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'deposit' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <p>Deposito</p>\r\n                        </li> :\r\n                        balance.type === 'withdraw' && <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <p>Retiro</p>\r\n                        </li>\r\n                    )   \r\n                })\r\n            }\r\n            </div>\r\n        }\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance-down'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\n\r\nexport const Administracion = () => {\r\n    return <div>\r\n        <form>\r\n            <input type=\"password\" />   \r\n            <button>Ir</button>\r\n        </form>\r\n    </div>\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { IoMdSettings, IoIosContact, IoIosCloseCircle } from 'react-icons/io'\r\nimport { MdInfo, MdAddCircle, MdAccountBalanceWallet, MdCreate, MdMail, MdLockOutline } from \"react-icons/md\"\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/Profile.css'\r\n\r\nexport const Profile = () => {\r\n    \r\n    const token = window.sessionStorage.getItem('token')\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const reg_numbers = /^([0-9])*$/\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n    const { userData } = useUserData(count)\r\n\r\n    console.log(userData)\r\n    \r\n    const password = useFormValues()\r\n    const newPassword = useFormValues()\r\n    const confirmNewPassword = useFormValues()\r\n    const email = useFormValues()\r\n    const newEmail = useFormValues()\r\n    const confirmNewEmail = useFormValues()\r\n\r\n    const [newPasswordError, setNewPasswordError] = useState(false)\r\n    const [newEmailError, setNewEmailError] = useState(false)\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    const [passwordLoading, setPasswordLoading] = useState(false)\r\n\r\n    function updatePassword(e){\r\n        e.preventDefault()  \r\n\r\n        if(!reg_password.test(newPassword.value)){\r\n            return setPassword_valid(false)\r\n         }else{setPassword_valid(true)}\r\n\r\n        if(newPassword.value === confirmNewPassword.value){\r\n\r\n            setPasswordLoading(true)\r\n\r\n            axios({\r\n                method: 'post',\r\n                data: { password: password.value, newPassword: newPassword.value },\r\n                url: url+'/edit/passwordemail',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            }).then( res => {\r\n                setPasswordLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: res.data.msg,\r\n                    })\r\n                }\r\n            }).catch( error => {\r\n                setPasswordLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n        }else{return setNewPasswordError(true)}\r\n\r\n    }\r\n\r\n    const [emailLoading, setEmailLoading] = useState(false)\r\n\r\n    function updateEmail(e){\r\n        e.preventDefault()\r\n\r\n        if(newEmail.value === confirmNewEmail.value){\r\n\r\n            setEmailLoading(true)\r\n\r\n            axios({\r\n                method: 'post',\r\n                data: { newEmail: newEmail.value, email: email.value },\r\n                url: url+'/edit/passwordemail',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            }).then( res => {\r\n                setEmailLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: res.data.msg,\r\n                    })\r\n                }\r\n            }).catch( error => {\r\n                setEmailLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n            \r\n        }else{return  setNewEmailError(true)}\r\n\r\n    }\r\n\r\n    const [buttonPerfil, setButtonPerfil] = useState(true)\r\n    const [buttonDebito, setButtonDebito] = useState(false)\r\n\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    const [type, setType] = useState('')\r\n\r\n    const optionTypes = [\r\n        { value: 'CC' },\r\n        { value: 'NIT' },\r\n        { value: 'CE' }\r\n    ]\r\n\r\n    const handleSelectType = (e) => {\r\n        const type = e.target.value\r\n        setType(type)\r\n    }\r\n\r\n    const [Bank, setBank] = useState('')\r\n\r\n    const optionBanks = [\r\n        { value: 'Davivienda' },\r\n        { value: 'Bancolombia' },\r\n        { value: 'Nequi' },\r\n        { value: 'Citibank' },\r\n        { value: 'Banco Caja Social' },\r\n        { value: 'Banco Compartir S.A.' },\r\n        { value: 'AV Villas' },\r\n        { value: 'BBVA Colombia' },\r\n        { value: 'Banco Agrario' },\r\n        { value: 'Banco Popular' },\r\n        { value: 'Banco Finandina' },\r\n        { value: 'Banco Cooperativo Coopcentral' },\r\n        { value: 'Banco Mundo Mujer' },\r\n        { value: 'Banco de Bogotá' },\r\n        { value: 'Banco de Occidente' },\r\n        { value: 'Banco Falabella' },\r\n        { value: 'Banco ITAU' },\r\n        { value: 'Banco ITAU antes CorpBanca' },\r\n        { value: 'Banco GNB Sudameris' },\r\n        { value: 'Banco Santander de Negocios' },\r\n        { value: 'Banco Serfinanzas' },\r\n        { value: 'Banco Pichincha' },\r\n        { value: 'RappiPay' },\r\n        { value: 'Banco Procredit' },\r\n        { value: 'Bancoomeva' },\r\n        { value: 'Scotiabank Colpatria' }\r\n    ]\r\n\r\n    const handleSelectBank = (e) => {\r\n        const Bank = e.target.value\r\n        setBank(Bank)\r\n    }\r\n\r\n    const [typeCount, setTypeCount] = useState('')\r\n\r\n    const optionTypeCount = [\r\n        { value: 'Cuenta Nequi' },\r\n        { value: 'Cuenta de Ahorro' },\r\n        { value: 'Cuenta Corriente'}\r\n    ]\r\n\r\n    const handleSelectTypeCount = (e) => {\r\n        const TypeCount = e.target.value\r\n        setTypeCount(TypeCount)\r\n    }\r\n    \r\n    const titular = useFormValues()\r\n    const dni = useFormValues()\r\n    const numeroCuenta = useFormValues()\r\n    \r\n    const editBankValues = {\r\n        titular: titular.value, tipo: type, dni: dni.value, banco: Bank, numeroCuenta: numeroCuenta.value, tipoCuenta: typeCount\r\n    }\r\n\r\n    const [editBankLoading, setEditBankLoading] = useState(false)\r\n    const [dni_valid, setDni_valid] = useState(true)\r\n    const [numeroCuenta_valid, setNumeroCuenta_valid] = useState(true)\r\n    const [tipo_valid, setTipo_valid] = useState(true)\r\n    const [bank_valid, setBank_valid] = useState(true)\r\n    const [tipoCuenta_valid, setTipoCuenta_valid] = useState(true)\r\n\r\n    async function handleEditBank(e) {\r\n        e.preventDefault()\r\n\r\n        if(type === 'Tipo' || type === ''){\r\n            return setTipo_valid(false)\r\n        }else{setTipo_valid(true)}\r\n        if(!reg_numbers.test(dni.value)) {\r\n            return setDni_valid(false)\r\n        }else{setDni_valid(true)}\r\n        if(Bank === 'Seleccionar Banco' || Bank === ''){\r\n            return setBank_valid(false)\r\n        }else{setBank_valid(true)}\r\n        if(!reg_numbers.test(numeroCuenta.value)) {\r\n            return setNumeroCuenta_valid(false)\r\n        }else{setNumeroCuenta_valid(true)}\r\n        if(typeCount === 'Tipo de Cuenta' || typeCount === ''){\r\n            return setTipoCuenta_valid(false)\r\n        }else{setTipoCuenta_valid(true)}\r\n\r\n        setEditBankLoading(true)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            data: editBankValues,\r\n            url: url+'/edit/bankAccount',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then( res => {\r\n            setEditBankLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: res.data.msg,\r\n                })\r\n                setCount(count + 1)\r\n            }\r\n        }).catch( error => {\r\n            setEditBankLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    const [editBank, setEditBank] = useState(false)\r\n\r\n    useEffect(()=>{\r\n\r\n        if(userData.bank){\r\n            if(userData.bank.titular){\r\n                setEditBank(true)\r\n            }\r\n        }  \r\n    }, [userData])\r\n\r\n    function handleRemoveBank(e){\r\n\r\n        e.preventDefault()\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: editBankValues,\r\n            url: url+'/remove/bankAccount',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then( res => {\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: res.data.msg,\r\n                })\r\n                setEditBank(false)\r\n            }\r\n        }).catch( error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    const [cancelEditBank, setCancelEditBank] = useState(false)\r\n\r\n    if(!userData.date) {return 'Loading'}\r\n    \r\n    return  <div className='configurations-container'>\r\n                <div className='profile-title-container'>\r\n                    <h2 className='profile-title'><IoMdSettings />&nbsp;Configuracion de usuario</h2>\r\n                </div>\r\n                <div className='configuration-wrap'>\r\n                    <div className='configuration-buttons'>\r\n                        <div onClick={()=>{setButtonPerfil(true); setButtonDebito(false)}} className={!buttonPerfil ? 'configuration-button' : 'configuration-button active'}>Perfil</div>\r\n                        <div onClick={()=>{setButtonPerfil(false); setButtonDebito(true)}} className={!buttonDebito ? 'configuration-button' : 'configuration-button active'}>Cuenta de retiro</div>\r\n                    </div>\r\n                    <div className='configuration-details'>\r\n                        <div className={buttonPerfil ? 'perfil-configuration-container' : 'dNone'}>\r\n                            <div className='datos-configuration'>\r\n                                <div><IoIosContact size='50' />&nbsp; {userData.userName}</div>\r\n                                <h4>Datos de usuario</h4>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Nombre de usuario: </p>\r\n                                    <p className='datos-description'>{userData.userName}</p>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Email: </p>\r\n                                    <p className='datos-description'>{userData.email}</p>\r\n                                    <a href=\"#changeEmail\">Editar...</a>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Numero de documento: </p>\r\n                                    <p className='datos-description'>{formatNumber(userData.dni)}</p>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Fecha de creacion: </p>\r\n                                    <p className='datos-description'>{`${new Date(userData.date).getDate()}/${new Date(userData.date).getMonth() + 1}/${new Date(userData.date).getFullYear()}`}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='password-configuration'>\r\n                                <h4><MdLockOutline />&nbsp;Cambio de contraseña</h4>\r\n                                <form onSubmit={updatePassword}>\r\n                                    <input {...password} autoComplete='true' required type=\"password\" placeholder='Contraseña actual'/>\r\n                                    <input {...newPassword} autoComplete='true' required type=\"password\" placeholder='Contraseña nueva'/>\r\n                                    <input {...confirmNewPassword} autoComplete='true' required type=\"password\" placeholder='Confirmar contraseña'/>\r\n                                    <p className={newPasswordError ? 'configuration-warning' : 'dNone'}><MdInfo /> La confirmacion no coincide</p>\r\n                                    <p className={!password_valid ? 'configuration-warning' : 'dNone'}><MdInfo />&nbsp;Debe contener mayuscula, minuscula y numero, minimo 8 caracteres</p>\r\n                                    <button disabled={passwordLoading ? true : false}>\r\n                                        <div className={passwordLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={passwordLoading ? 'dNone' : '' }> Actualizar Contraseña </p>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            <div className='email-configuration'>\r\n                                <h4><MdMail />&nbsp;Cambio de Email</h4>\r\n                                <form onSubmit={updateEmail}>\r\n                                    <input id='changeEmail' autoComplete='true' {...email} required type=\"email\" placeholder='Email actual'/>\r\n                                    <input {...newEmail} autoComplete='true' required type=\"email\" placeholder='Email nuevo'/>\r\n                                    <input {...confirmNewEmail} autoComplete='true' required type=\"email\" placeholder='Confirmar email'/>\r\n                                    <p className={newEmailError ? 'configuration-warning' : 'dNone'}><MdInfo /> La confirmacion no coincide</p>\r\n                                    <button disabled={emailLoading ? true : false}>\r\n                                        <div className={emailLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={emailLoading ? 'dNone' : '' }> Actualizar email</p>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            <div className='user-delete-configuration'>\r\n                                <button><IoIosCloseCircle size='40px' />Eliminar usuario</button>\r\n                            </div>\r\n                        </div>\r\n\r\n{/* -------------------------------------------------------------------------------------------------------------  */}\r\n\r\n                        <div className={buttonDebito ? 'debit-configuration-container' : 'dNone'}>\r\n                            {\r\n                            !editBank ?    \r\n                            <div className='debit-configuration-wrap'>\r\n                                <h4>Agregar Cuenta Bancaria</h4>\r\n                                <form onSubmit={handleEditBank}>\r\n                                    <input {...titular} required type=\"text\" placeholder='Nombre y apellido del titular'/>\r\n                                    <div className='d-flex'>\r\n                                        <select required onClick={handleSelectType} className='select-type' name=\"Tipo\">\r\n                                            <option className='optiion-none'>Tipo</option>\r\n                                            {\r\n                                                optionTypes.map((item) => (\r\n                                                    <option key={item.value} value={item.value}>{item.value}</option>\r\n                                                ))\r\n                                            }\r\n                                        </select>\r\n                                        <input {...dni} required type=\"text\" placeholder='Numero de identificacion'/>\r\n                                    </div>\r\n                                    <p className={!tipo_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Selecciona Tipo</p>\r\n                                    <p className={!dni_valid? 'configuration-warning' : 'dNone'}><MdInfo /> Solo Numeros</p>\r\n                                    <select onClick={handleSelectBank} required className='select-type largo' name=\"Banco\">\r\n                                        <option className='optiion-none'>Seleccionar Banco</option>\r\n                                        {\r\n                                            optionBanks.map((item) => (\r\n                                                <option key={item.value} value={item.value}>{item.value}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    <p className={!bank_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Selecciona Banco</p>\r\n                                    <input {...numeroCuenta} required type=\"text\" placeholder='Numero de Cuenta' />\r\n                                    <p className='configuration-warning'><MdInfo />En caso de Nequi colocar numero telefonico</p>\r\n                                    <p className={!numeroCuenta_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Solo Numeros</p>\r\n                                    <select onClick={handleSelectTypeCount} required className='select-type largo' name=\"Tipo de cuenta\">\r\n                                        <option className='optiion-none'>Tipo de Cuenta</option>\r\n                                        {\r\n                                            optionTypeCount.map((item) => (\r\n                                                <option key={item.value} value={item.value}>{item.value}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    <p className={!tipoCuenta_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Selecciona Tipo de cuenta</p>\r\n                                    <button disabled={editBankLoading ? true : false} className='button-aggregate-count'>\r\n                                        <div className={editBankLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={editBankLoading ? 'dNone' : '' }><MdAddCircle />Agregar</p>\r\n                                    </button>\r\n                                    <button disabled={editBankLoading ? true : false} className={cancelEditBank ? 'cancelEditBank' : 'dNone' } onClick={()=>{setEditBank(true); setCancelEditBank(false)}} type='button'><IoIosCloseCircle />Cancelar</button>\r\n                                </form>\r\n                            </div> :\r\n                            <div className='datos-configuration'>\r\n                                <h4><MdAccountBalanceWallet />&nbsp;Cuenta Bancaria</h4>\r\n                                <div>\r\n                                    <div className='datos-description-container'>\r\n                                        <p className='datos-titles'>Titular:</p>\r\n                                        <p className='datos-description'>{userData.bank.titular}</p>\r\n                                    </div>\r\n                                    <div className='datos-description-container'>\r\n                                        <p className='datos-titles'>Numero Identificacion:</p>\r\n                                        <p className='datos-description'>{userData.bank.tipo}.&nbsp; {formatNumber(userData.bank.dni)}</p>\r\n                                    </div>\r\n                                    <div className='datos-description-container'>\r\n                                        <p className='datos-titles'>Banco:</p>\r\n                                        <p className='datos-description'>{userData.bank.banco} - {userData.bank.tipoCuenta}</p>\r\n                                    </div>\r\n                                    <div className='datos-description-container'>\r\n                                        <p className='datos-titles'>Numero de cuenta:</p>\r\n                                        <p className='datos-description'>{userData.bank.numeroCuenta}</p>\r\n                                    </div>\r\n                                    <div className='buttons-delete-bank'>\r\n                                        <button onClick={handleRemoveBank}><IoIosCloseCircle />Eliminar</button>\r\n                                        <button onClick={()=>{setEditBank(false); setCancelEditBank(true) }}><MdCreate />Editar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n}","import React, { useContext } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Layout from './Components/Layout'\r\nimport { Blank } from './Components/Blank'\r\nimport { Home } from './Pages/Home'\r\nimport { Room } from './Pages/Room'\r\nimport { Signup } from './Pages/Signup'\r\nimport { Balance } from './Pages/Balance'\r\nimport { Administracion } from './Pages/Administracion'\r\nimport { Context } from './context'\r\nimport { Profile } from './Pages/Profile';\r\n\r\nfunction App() {\r\n\r\n  const { isAuth } = useContext(Context)\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path ='/' component={Signup}/>\r\n        <Route exact path ='/pending/' component={Blank}/>\r\n        <Route exact path ='/failure/' component={Blank}/>\r\n        <Route exact path ='/adm/' component={ Administracion }/>\r\n        {\r\n          isAuth && \r\n          <Layout>\r\n            <Route exact path ='/profile/' component={Profile}/>\r\n            <Route exact path ='/balance/' component={Balance}/>\r\n            <Route exact path ='/home/' component={Home}/>\r\n            <Route exact path ='/sala/:salaId/' component={Room}/>\r\n          </Layout>\r\n        }\r\n        <Route component={Blank}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Context from './context'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport './GlobalStyles.css'\r\n\r\nReactDOM.render(\r\n  <Context.Provider>\r\n    <App />\r\n  </Context.Provider>,\r\n  document.getElementById('app')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/arbol.accb9f6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.497768ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/2WANTED.5e83a3a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/abajo.412f3289.svg\";","module.exports = __webpack_public_path__ + \"static/media/ANDROID.5778a560.png\";","module.exports = __webpack_public_path__ + \"static/media/IOS.f8d30088.png\";","module.exports = __webpack_public_path__ + \"static/media/esfinge.497768ac.svg\";"],"sourceRoot":""}