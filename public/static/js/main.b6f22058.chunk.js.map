{"version":3,"sources":["urlServer.js","context.js","Images/arbol.svg","hooks/useComponentVisible.js","Components/Modals/Modal.js","hooks/useFormValues.js","Components/Modals/Modal2.js","Components/Modals/PasswordVerificationNewRoom.js","Components/Modals/JoinModal.js","Components/Forms/NavbarForm.js","Images/logo.svg","Images/2WANTED.svg","Components/NavbarLogo.js","Components/Modals/InvitationModal.js","Components/Navbar_navigation1.js","Components/Modals/PasswordVerfication.js","Components/Modals/WithdrawModal.js","Components/Modals/DepositModal.js","Components/Modals/WithdrawToUserModal.js","Components/Navbar_navigation2.js","Components/Navbar.js","Components/Layout.js","Components/Blank.js","Components/Forms/NewSalaForm.js","Components/ListRooms.js","Pages/Home.js","Components/Modals/Withdraw2wantedModal.js","Components/Modals/TatumStatus.js","Components/Modals/ToExcelModal.js","Components/Modals/MailModal.js","Pages/AdminHome.js","hooks/useGeneralBalance.js","Images/abajo.svg","Components/TreeData.js","Components/Modals/MiniModal.js","Components/Modals/childModal.js","Components/Modals/inviteModal.js","Components/Tree.js","Components/RomDetails.js","Pages/Room.js","hooks/useChildsData.js","Components/Modals/EmailVerificationModal2.js","Components/Modals/ForgotPasswordModal.js","Components/NavbarLogin.js","Images/bigLogo.svg","Components/Modals/EmailVerificationModal.js","Pages/Signup.js","Pages/AdminSignin.js","Pages/Balance.js","Pages/UsersInSala.js","Images/help_Create.png","Images/invitation.png","Images/invitation_modal.png","Images/searchRoom.png","Images/searchRoom_modal.png","Images/help_listRooms.png","Images/room1.png","Images/room2.png","Images/room3.png","Images/room4.png","Images/room5.png","Images/room6.png","Images/room7.png","Images/depositImg.png","Images/lateralMenu.png","Images/help_withdraw.png","Images/help_sendToUser.png","Pages/Help.js","Pages/Contact_us.js","Pages/HistoryUsers.js","Pages/ChangePassword.js","Components/Forms/UpdatePasswordForm.js","Components/Forms/UpdateEmailForm.js","Pages/Profile.js","App.js","index.js"],"names":["url","socket","io","Context","createContext","contextExport","Provider","children","useState","Cookies","get","isAuth","setIsAuth","isAdminAuth","setIsAdminAuth","csrfToken","setCsrfToken","useEffect","a","axios","response","data","Swal","fire","icon","title","text","generateCsrf","userData","setUserData","loadingUserData","setLoadingUserData","usdBtc","setUsdBtc","update","setUpdate","method","headers","error","username","remove","then","window","location","replace","getUserData","value","onUpdate","toggleAuth","userName","set","expires","toggleAdminAuth","logout","emit","onLogout","autoLogout","onAutoLogout","Consumer","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","Modal","props","isOpen","ReactDOM","createPortal","className","onClick","onClose","getElementById","useFormValues","setValue","onChange","e","Modal2","PasswordVerificationNewRoom","useContext","createLoading","setCreateLoading","password","payload","onSubmit","preventDefault","res","onClose2","history","push","id","catch","err","type","disabled","role","withRouter","modalOpen","setModalOpen","radio1","setRadio1","radio2","setRadio2","parentInput","setParentInput","handleRadio1","handleRadio2","joinData","parentUser","price","random","salaName","salaId","_id","name","toString","slice","checked","placeholder","NavbarForm","ArbolImg","iconSet","room1","dropdownFilter","iconNone","setIconNone","modal2Open","setModal2Open","searchLoading","setSearchLoading","filterSala","setFilterSala","onOpen2Modal","searchRoom1","salaParams","URLSearchParams","search","size","src","alt","creator","React","memo","NavbarLogo","to","logo","logoletra","invitation","invitationData","parentUsername","host","message","Navbar_navigation1","toggle1","invitations","setInvitations","totalPages","setTotalPages","setInvitationData","countPages","setCountPages","count","setCount","notifications","setNotifications","on","page","countNotification","concat","length","map","onOpenModal","PasswordVerification","loading","setLoading","msg","WithdrawModal","confirm","setConfirm","errorAmount","setErrorAmount","errorBalance","setErrorBalance","errorAdress","setErrorAddress","fee","amount","address","amountNumber","Number","amountWithFee","totalAmount","isNaN","wallet","required","DepositModal","copy","setCopy","addressWallet","onCopy","setTimeout","WithdrawToUserModal","errorUser","setErrorUser","user","Navbar_navigation2","countUserData","setCountUserData","interval","setInterval","pushLogout","clearInterval","modal3Open","setModal3Open","modal4Open","setModal4Open","number","toggle3","Intl","NumberFormat","format","useCallback","state","Helmet","Layout","Fragment","Blank","NewSalaForm","roomValid","setRoomValid","priceValid","setPriceValid","reg_whiteSpace","inUsd","toFixed","newSalaData","test","parseFloat","ListRooms","listRooms","setListRooms","activesData","setActivesData","activesLoading","setActivesLoading","countActives","setCountActives","total","salaPrice","salaCreator","Home","actives_560","setActives_560","MdHome","MdInfo","Withdraw2wantedModal","form","available","used","refresh","TatumStatus","myWallet","balance","accountBalance","availableBalance","ToExcelModal","MailModal","asunto","AdminHome","viewButton","setViewButton","viewList","setViewList","list","setList","general","setGeneral","reload","setReload","totalDeposit","totalDeposits","actualCuenta","actualEnCuenta","totalGanado","totalWon","moneyUsersRooms","userMoneyRooms","totalWallets","totalInWallets","actual2wanted","withdrawUsers","totalEgresoUsers","withdraw2wanted","totalEgreso2wanted","totalRetirado","egresos","generalLoading","verification","verification2","useGeneralBalance","retiradoTotalTotal","balanceTatum","setBalanceTatum","setMyWallet","userTatum","setUserTatum","modal1Open","setModal1Open","setAvailable","setUsed","onTatumDetail","me","totalPages2wantedwithdraws","setTotalPages2wantedwithdraws","page2wantedwithdraws","setPage2wantedwithdraws","withdraw2wantedLoading","setWithdraw2wantedLoading","refresh2wanted","setRefresh2wanted","inicialDate","setInicialDate","finalDate","setFinalDate","userHistory","emailPersonalized","userEmailPersonalized","toAddress","txId","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","TreeData","arbolData","formatNumber","lineDropDown","setLineDropdown","level3","level4","abajo","MiniModal","ChildModal","split","InviteModal","inviteLoading","setInviteLoading","newUser","msg_valid","setMsg_valid","Tree","userModal","setUserModal","dataModal","setDataModal","parent","RomDetails","dataRoom","inBalance","loadingToBalance","setLoadingToBalance","toBalance","acum3","acum4","tAcum","newCash","i","divide","Decimal","div","toNumber","add","sub","Room","match","params","setParent","setInBalance","setDataRoom","loadingDetails","setLoadingDetails","setArbolData","loadingChildsData","setLoadingChildsData","childsData","useChildsData","parentId","searchRoom","EmailVerificationModal2","code","email","handleRefresh","maxLength","ForgotPasswordModal","check","setCheck","setRefresh","setType","loginLoading","setLoginLoading","isVerified","autoComplete","EmailVerificationModal","Signup","conected","sitekey","console","log","reg_password","tokenCaptcha","setTokenCaptcha","captcha","email2","confirm_password","token","validEmail","setValidEmail","password_valid","setPassword_valid","userValid","setUserValid","signupLoading","setSignupLoading","IMG","suggested","onVerify","onExpire","Signin","password2","Balance","valueFecha1","setValueFecha1","valueFecha2","setValueFecha2","viewDates","setViewDates","setBalance","countLastestPages","setCountLastestPages","activeDate","setActiveDate","handleDate","splitDate","fechaInicial","splitDate2","fechaFinal","getFechaInicial","getFechaFinal","won","depositAmount","withdrawAmount","toUser","UsersInSalas","sala","actualPage","setActualPage","Help","href","createImg","invitatonImg","invitationModalImg","searchImg","searchModalImg","help_listRooms","room2","room3","room4","room5","room6","room7","lateralMenu","depositImg","rel","help_withdraw","help_sendToUser","Contact_us","HistoryUsers","modeList","setModeList","responseList","setResponseList","listLoading","setListLoading","fecha1","fecha2","fechaInicio","signature","signatureId","reference","ChangePassword","forgotHash","confirmPassword","UpdatePasswordForm","newPasswordError","setNewPasswordError","passwordLoading","setPasswordLoading","newPassword","confirmNewPassword","UpdateEmailForm","newEmailError","setNewEmailError","newEmail","confirmNewEmail","Profile","App","path","component","exact","render"],"mappings":"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","file":"static/js/main.b6f22058.chunk.js","sourcesContent":["export const url = ''\r\n\r\n/* http://localhost:8080 */","import React, { createContext, useState, useEffect } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\nimport { url } from './urlServer'\r\n\r\nconst socket = io(url)\r\n\r\nexport const Context = createContext()\r\n\r\nconst Provider = ({ children }) => {\r\n  \r\n  const [isAuth, setIsAuth] = useState(Cookies.get('conected'))\r\n  const [isAdminAuth, setIsAdminAuth] = useState(Cookies.get('conectedAdmin'))\r\n  const [csrfToken, setCsrfToken] = useState(null)\r\n\r\n  useEffect(() => {\r\n    async function generateCsrf(){\r\n\r\n      try{\r\n\r\n        const response = await axios.get(url+'/api/csrf')\r\n        setCsrfToken(response.data.csrfToken)\r\n  \r\n      }catch(error){\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    generateCsrf()\r\n\r\n  },[])\r\n\r\n  const [userData, setUserData] = useState({})\r\n  const [loadingUserData, setLoadingUserData] = useState(false)\r\n  const [usdBtc, setUsdBtc] = useState(0)\r\n  const [update, setUpdate] = useState(0)\r\n\r\n  async function onLogout(){\r\n    try {\r\n        const response = await axios({\r\n            method: 'post',\r\n            url: url+'/api/logout',\r\n            headers: { \r\n              'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        if(response.data.error){\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: response.data.error,\r\n          })\r\n        }\r\n    }catch(error){\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function onAutoLogout(){\r\n    try {\r\n\r\n        const response = await axios({\r\n            method: 'post',\r\n            data: {username: Cookies.get('username') },\r\n            url: url+'/api/autologout',\r\n            headers: { \r\n              'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        if(response.data.error){\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: response.data.error,\r\n          })\r\n        }\r\n\r\n        Cookies.remove('username')\r\n\r\n    }catch(error){\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error,\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getUserData(){\r\n\r\n        setLoadingUserData(true)\r\n\r\n        const response = await axios({\r\n          method: 'post',\r\n          url: url+'/api/me',\r\n          headers: { \r\n              'X-CSRF-Token': csrfToken\r\n          }\r\n        })\r\n        if(response.data.error){ \r\n          axios({\r\n            method: 'post',\r\n            url: url+'/api/logout',\r\n            headers: { \r\n              'X-CSRF-Token': csrfToken\r\n            }\r\n          }).then(()=>{\r\n            Cookies.remove('conected') \r\n            Cookies.remove('username')\r\n            window.location.replace('/') \r\n          })\r\n        }\r\n        if(response.data){\r\n            setUserData(response.data.userData)\r\n            setUsdBtc(response.data.usdBtc)\r\n            setLoadingUserData(false)\r\n        }\r\n      }\r\n    \r\n     if(csrfToken && isAuth){getUserData()} \r\n\r\n  },[csrfToken, update, isAuth])\r\n  \r\n  const value = {\r\n    isAuth,\r\n    isAdminAuth,\r\n    csrfToken,\r\n    userData,\r\n    loadingUserData,\r\n    usdBtc,\r\n    onUpdate:(update)=>{setUpdate(update)},\r\n    toggleAuth:(userName)=>{\r\n      setIsAuth(true)\r\n      Cookies.set('username', userName)\r\n      Cookies.set('conected', true, { expires: 0.041660 })\r\n    },\r\n    toggleAdminAuth:()=>{\r\n      setIsAdminAuth(true)\r\n      Cookies.set('conectedAdmin', true, { expires: 0.00694444 })\r\n    },\r\n    logout: () => { \r\n      socket.emit('disconnectClient', Cookies.get('username'))\r\n      onLogout()\r\n      setIsAuth(false)\r\n      Cookies.remove('conected') \r\n      Cookies.remove('username') \r\n    },\r\n    autoLogout: () => { \r\n      socket.emit('disconnectClient', Cookies.get('username'))\r\n      onAutoLogout()\r\n      setIsAuth(false)\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={value}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst contextExport = { Provider, Consumer: Context.Consumer }\r\n\r\nexport default contextExport","export default __webpack_public_path__ + \"static/media/arbol.7dae7409.svg\";","import { useState, useEffect, useRef } from \"react\"\r\n\r\nexport function useComponentVisible(initialIsVisible) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n    document.addEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n      document.removeEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"../Styles/Modal.css\"\r\n\r\nfunction Modal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default Modal","import { useState } from 'react'\r\n\r\nexport const useFormValues = () => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (e) => setValue(e.target.value)\r\n\r\n  return { value, onChange }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"../Styles/Modal.css\"\r\n\r\nfunction Modal2(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal2\"))\r\n    )\r\n}\r\n\r\nexport default Modal2","import React, { useContext, useState } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport {  MdLockOutline } from \"react-icons/md\"\r\nimport { Context } from '../../context'\r\nimport Modal2 from './Modal2'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nconst PasswordVerificationNewRoom = props => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [createLoading, setCreateLoading] = useState(false)\r\n\r\n    const password = useFormValues()\r\n\r\n    const payload = {...props.data, password: password.value}\r\n\r\n    function onConfirm(e){\r\n        e.preventDefault()\r\n        setCreateLoading(true)\r\n        axios({\r\n            data: payload,\r\n            method: 'post',\r\n            url: props.url,\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setCreateLoading(false)\r\n            if (res.data.error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error\r\n                })\r\n            }else{ \r\n                if(props.onClose2){props.onClose2()}\r\n                if(props.onClose){props.onClose()}\r\n                props.history.push(`/sala/${res.data.id}`)\r\n            }\r\n        }).catch(err => {\r\n            setCreateLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <Modal2 isOpen={props.isOpen} onClose={props.onClose}>\r\n        <form onSubmit={onConfirm}>\r\n            <h4>Enter your password</h4>\r\n            <div className='mb-3 mt-1 d-flex'>\r\n                <div className=\"pre-formS\">\r\n                    <div className=\"input-group-text invite-pre-form\"><MdLockOutline /></div>\r\n                </div>\r\n                <input className='join-input' {...password} type=\"password\"/>\r\n            </div>\r\n            <button className='btn btn-dark btn-block invitation-button' disabled={createLoading ? true : false}>\r\n                <div className={createLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p className={createLoading ? 'dNone' : ''}>Confirm!</p>\r\n            </button>\r\n        </form>\r\n    </Modal2>\r\n}\r\n\r\nexport default PasswordVerificationNewRoom","import React ,{ useState } from 'react'\r\nimport '../Styles/JoinModal.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Modal from './Modal'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\nimport PasswordVerificationNewRoom from './PasswordVerificationNewRoom'\r\n\r\nconst JoinModal = props => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [radio1, setRadio1] = useState(false)\r\n    const [radio2, setRadio2] = useState(true)\r\n    const [parentInput, setParentInput] = useState(false)\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    function handleRadio1(){\r\n        setRadio1(true)\r\n        setRadio2(false)\r\n        setParentInput(true)\r\n    }\r\n    function handleRadio2(){\r\n        setRadio1(false)\r\n        setRadio2(true)\r\n        setParentInput(false)\r\n    }\r\n\r\n    const parentUser = useFormValues()\r\n\r\n    let joinData\r\n    let price = 0\r\n    let random = radio2 ? true : false\r\n    let salaName = ''\r\n\r\n    if(props.data){\r\n        joinData = {\r\n            salaId: props.data._id,\r\n            parentUser: `@${parentUser.value}`,\r\n            random: random\r\n        }\r\n        price = props.data.price\r\n        salaName = props.data.name\r\n    }\r\n \r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <div className='join-modal'>\r\n                <h2>Are you sure?</h2>\r\n                <p>Room name: <span>{salaName}</span></p>\r\n                <p>Price: <span>{price.toString().slice(0,9)} BTC</span></p>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio2} onChange={handleRadio2} />\r\n                            <label onClick={handleRadio2}>Random parent user</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio1} onChange={handleRadio1} />\r\n                            <label onClick={handleRadio1}>Choose parent user</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={parentInput ? 'form-group' : 'dNone'}>\r\n                        <p>Put the parent user</p>\r\n                        <div className='d-flex'>\r\n                            <div className=\"pre-formS\">\r\n                                <div className=\"input-group-text invite-pre-form\">@</div>\r\n                            </div>\r\n                            <input className='join-input' {...parentUser} placeholder='User' type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={!parentInput ? 'join-nota' : 'dNone'}>\r\n                        <p>\r\n                            <span>Note:</span> \"You will be added as a referral from some random user with available space in this room.\"\r\n                        </p>\r\n                    </div>\r\n                    <button className='btn btn-dark btn-block invitation-button'>\r\n                        <p>Confirm</p>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <PasswordVerificationNewRoom isOpen={modalOpen} onClose={onCloseModal} onClose2={props.onClose} data={joinData} history={props.history} url={url+'/api/newUserInSala'}/>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(JoinModal)","import React, { useContext, useState, useEffect } from 'react'\r\nimport '../Styles/Navbar.css'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport JoinModal from '../Modals/JoinModal'\r\nimport { Context } from '../../context'\r\nimport { MdInfo, MdSearch, MdKeyboardReturn } from \"react-icons/md\";\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\n\r\nconst NavbarForm = ({ ArbolImg, url, iconSet, useComponentVisible }) => {\r\n\r\n    const room1 = useFormValues()\r\n    const dropdownFilter = useComponentVisible(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [searchLoading, setSearchLoading] = useState(false)\r\n    const [filterSala, setFilterSala] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(iconNone){iconSet(true)}else{iconSet(false)}\r\n    },[iconNone, iconSet])\r\n\r\n    function onOpen2Modal(){\r\n        setModal2Open(true)\r\n    }\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n\r\n    async function searchRoom1( e ){\r\n        if(e){\r\n            e.preventDefault()\r\n        }\r\n\r\n        setSearchLoading(true)\r\n\r\n        dropdownFilter.setIsComponentVisible(true)\r\n\r\n        try{\r\n            const response = await axios({\r\n                data: { name: room1.value },\r\n                method: 'post',\r\n                url: url+'/api/search/sala',\r\n                headers:{ \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n\r\n            setSearchLoading(false)\r\n            setFilterSala(response.data)\r\n\r\n        }catch(error){\r\n            setSearchLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        }\r\n    }\r\n\r\n    const params = new URLSearchParams(window.location.search)\r\n    const salaParams = params.get('add')\r\n\r\n    useEffect(() => {\r\n        if(salaParams && csrfToken){\r\n            setSearchLoading(true)\r\n            axios({\r\n                data: { name: salaParams },\r\n                method: 'post',\r\n                url: url+'/api/search/sala',\r\n                headers:{ \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then(res => {\r\n                setSearchLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setFilterSala(res.data)\r\n                    onOpen2Modal(true)\r\n                }\r\n            })\r\n            .catch( err => {\r\n                setSearchLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }\r\n    },[salaParams, csrfToken, url])\r\n\r\n    return <>\r\n\r\n        {/* ------------------------------------Section-Searcher hidden---------------------------------------------------------------------- */}      \r\n\r\n        <div className=\"section-searcher-hidden\">\r\n            <button onClick={()=> setIconNone(true)} className={!iconNone ? 'icon-navbar' : 'dNone'}><MdSearch size='23' /></button>\r\n                \r\n            <div className={iconNone  ? 'searcher-hidden' : 'dNone'}>\r\n                <form onSubmit={searchRoom1} >\r\n                    <button onClick={()=> setIconNone(false)} type='button' className='icon-navbar'><MdKeyboardReturn size='23' /></button>\r\n                    <input {...room1} type='text' placeholder='Room Name' />\r\n                    <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n                </form>\r\n            </div>\r\n                \r\n        </div>\r\n\r\n{/* ------------------------------------/Section-Searcher hidden---------------------------------------------------------------------- */}\r\n\r\n        <div className=\"section-searcher\">\r\n\r\n            <form onSubmit={searchRoom1} >\r\n                <div>\r\n                    <input {...room1} type='text' placeholder='Room Name'/>\r\n                </div>\r\n                <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n            </form>\r\n            \r\n            <div ref={dropdownFilter.ref} className={dropdownFilter.isComponentVisible ? 'dropdown-menu-navbar-filter isActive' : 'dNone'}>\r\n                { \r\n\r\n                    searchLoading ? <div className= \"spinner-border text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div> : \r\n                        \r\n                    filterSala.data ?\r\n\r\n                    <div>\r\n                        \r\n                    <div className={dropdownFilter.isComponentVisible ? 'filter-sala' : 'dNone'}>            \r\n                            <div onClick={onOpen2Modal} className=' filter-sala-wrap'>\r\n                                <img src={ArbolImg} className='' alt=\"...\" />\r\n                                <div className='filter-sala-description'>\r\n                                    <p> Room Name:  <span> {filterSala.data.name}</span>  </p>\r\n                                    <p> Creator:  <span> {filterSala.data.creator}</span>  </p>\r\n                                    <p> Price:  <span> {filterSala.data.price.toString().slice(0,9)} BTC</span>  </p>\r\n                                </div>\r\n                            </div>\r\n                        <button onClick={onOpen2Modal} className=''>Join</button>\r\n                    </div> \r\n                    <p className='aviso-filtro'><MdInfo />Remember to respect uppercase and lowercase letters</p>\r\n                    </div> : <div className='no-spaces'>{filterSala.error}! <p className='aviso-filtro'><MdInfo />Remember to respect uppercase and lowercase letters</p></div>\r\n                } \r\n            </div>\r\n\r\n        </div>\r\n        <JoinModal data={filterSala.data} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n    </>\r\n}\r\n\r\nexport default React.memo(NavbarForm)","export default __webpack_public_path__ + \"static/media/logo.a414eaaf.svg\";","export default __webpack_public_path__ + \"static/media/2WANTED.a816f074.svg\";","import React from 'react'\r\nimport logo from '../Images/logo.svg'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavbarLogo = ({iconNone}) => {\r\n    return (<div className={!iconNone ? \"section-logos\" : 'dNone'}>\r\n        <Link className=\"Link\" to=\"/home\">< img className='logo1' src={logo} alt='logo-img' /> <img className='logo2' src={logoletra} alt=\"logoletra\"/> </Link>\r\n    </div>)\r\n}\r\n\r\nexport default React.memo(NavbarLogo)","import React,{ useState } from \"react\"\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../Styles/InvitationModal.css'\r\nimport Modal from \"./Modal\"\r\nimport { url } from '../../urlServer'\r\nimport PasswordVerificationNewRoom from './PasswordVerificationNewRoom'\r\n\r\nconst InvitationModal = (props) => {\r\n\r\n    const invitation = props.invitationData\r\n\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n\r\n    let joinData\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    if(invitation){\r\n\r\n        let random = false\r\n\r\n        if(!invitation.parentUsername){ random = true }\r\n\r\n        joinData = {\r\n            salaId: invitation.salaId,\r\n            parentUser: invitation.parentUsername,\r\n            random: random\r\n        }\r\n    }\r\n\r\n    function handleClick( e ){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Are you sure?</h3>\r\n\r\n            {\r\n                invitation && <div className='invitationModal'>\r\n                    <p>Invited by: <span>{invitation.host}</span></p>\r\n                    <p>Room Name: <span>{invitation.salaName}</span></p>\r\n                    <p>Price: <span>{invitation.price.toString().slice(0,9)} BTC</span></p>\r\n                    <p>Parent user: <span>{invitation.parentUsername}</span></p>\r\n                    <p>Message: <span>{invitation.message ? invitation.message : 'Ninguno' }</span></p>\r\n                    <button className='btn btn-dark btn-block invitation-button' onClick={handleClick}>\r\n                        <p>Join</p>\r\n                    </button>\r\n                </div>\r\n            }\r\n        \r\n        <PasswordVerificationNewRoom isOpen={modalOpen} onClose={onCloseModal} onClose2={props.onClose} data={joinData} history={props.history} url={url+'/api/newUserInSala'}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(InvitationModal)","import React, { useEffect, useState, useContext } from 'react'\r\nimport './Styles/Navbar.css'\r\nimport io from 'socket.io-client'\r\nimport { Context } from '../context'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport  InvitationModal  from './Modals/InvitationModal'\r\nimport { MdNotificationsNone } from \"react-icons/md\";\r\n\r\nconst Navbar_navigation1 = ({ArbolImg, useComponentVisible, url, username}) => {\r\n\r\n    const toggle1 = useComponentVisible(false);\r\n    const [invitations, setInvitations] = useState([])\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [invitationData, setInvitationData] = useState(null)\r\n    let [countPages, setCountPages] = useState(1)\r\n    let [count, setCount] = useState(0) \r\n    let [notifications, setNotifications] = useState(0)\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    function onOpenModal(invitationData){\r\n        setModalOpen(true)\r\n        setInvitationData(invitationData)\r\n    }\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(csrfToken){\r\n\r\n            const socket = io('/')\r\n\r\n            socket.emit('user_online', username)\r\n            \r\n            socket.on('new_message', () => {\r\n                setCount(count => count + 1) \r\n            })\r\n\r\n            if(count > 0){\r\n                setCountPages(1)\r\n            }\r\n            \r\n            axios({\r\n                method: 'post',\r\n                data: {page: countPages},\r\n                url: url+'/api/invitations',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then(res => {\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    if(countPages === 1 || count > 0){\r\n                        setNotifications(res.data.countNotification)\r\n                        setTotalPages(res.data.totalPages)\r\n                        setInvitations(res.data.invitations)\r\n                        setCount(0)\r\n                    }else{\r\n                        setInvitations( invitations => invitations.concat(res.data.invitations))\r\n                        setNotifications(res.data.countNotification)\r\n                        setTotalPages(res.data.totalPages)\r\n                    }\r\n                }\r\n            }).catch( error => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n        }    \r\n    },[countPages, count, username, url, csrfToken])\r\n\r\n    function notificationButton() {\r\n        \r\n        toggle1.setIsComponentVisible(true)\r\n\r\n        if(notifications > 0) {\r\n            axios({\r\n                method: 'post',\r\n                url: url+'/api/invitations-reset',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n    \r\n            setNotifications(0)\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <div className='button-nav-1'>\r\n            <button className='icon-navbar' onClick={notificationButton}>\r\n                <div className={notifications > 0 ? 'notification' : 'dNone'}>{notifications}</div>\r\n                <MdNotificationsNone size='23' />\r\n            </button>\r\n            <div ref={toggle1.ref} className={toggle1.isComponentVisible ? 'dropdown-menu-navbar1 isActive' : 'dropdown-menu-navbar1'}>\r\n                {\r\n                    invitations.length === 0 && <p className='no-spaces'>No notifications</p>\r\n                }\r\n                {\r\n                    invitations.map(invitation => {\r\n                        return (\r\n                            <li className={toggle1.isComponentVisible ? 'invitations-li isActive' : 'invitations-li'} key={invitation._id}>\r\n                                <button className='' onClick={()=> onOpenModal(invitation)}>\r\n                                    <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                    <div className='invitation-description'>\r\n                                        <p>Invited by: <span> {invitation.host}</span></p>\r\n                                        <p>Room Name: <span> {invitation.salaName}</span></p>\r\n                                        <p>Price: <span> {invitation.price.toString().slice(0,9)} BTC</span></p>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <button className={totalPages > countPages ? 'button-more-notifications' : 'dNone'} onClick={()=>{setCountPages(countPages + 1)}}>More ▼</button>\r\n            </div>\r\n            <InvitationModal invitationData={invitationData} isOpen={modalOpen} onClose={onCloseModal} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default React.memo(Navbar_navigation1)\r\n","import React, { useContext, useState } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport {  MdLockOutline } from \"react-icons/md\"\r\nimport { Context } from '../../context'\r\nimport Modal2 from './Modal2'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nconst PasswordVerification = props => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const password = useFormValues()\r\n\r\n    const payload = {...props.data, password: password.value}\r\n\r\n    function onConfirm(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            data: payload,\r\n            method: 'post',\r\n            url: props.url,\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                if(props.onClose2){props.onClose2()}\r\n                if(props.onClose){props.onClose()}\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <Modal2 isOpen={props.isOpen} onClose={props.onClose2}>\r\n        <form onSubmit={onConfirm}>\r\n            <h4>Enter your password</h4>\r\n            <div className='mb-3 mt-1 d-flex'>\r\n                <div className=\"pre-formS\">\r\n                    <div className=\"input-group-text invite-pre-form\"><MdLockOutline /></div>\r\n                </div>\r\n                <input className='join-input' {...password} type=\"password\"/>\r\n            </div>\r\n            <button className='btn btn-dark btn-block invitation-button' disabled={loading ? true : false}>\r\n                <div className={loading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p className={loading ? 'dNone' : ''}>Confirm!</p>\r\n            </button>\r\n        </form>\r\n    </Modal2>\r\n}\r\n\r\nexport default PasswordVerification","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport PasswordVerification from './PasswordVerfication' \r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\nimport { MdInfo } from 'react-icons/md'\r\nimport '../Styles/WithdrawModal.css'\r\n\r\nexport const WithdrawModal = props => {\r\n\r\n    const [confirm, setConfirm] = useState(false)\r\n    const [errorAmount, setErrorAmount] = useState(false)\r\n    const [errorBalance, setErrorBalance] = useState(false)\r\n    const [errorAdress, setErrorAddress] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n\r\n    const fee = 0.0001\r\n    const amount = useFormValues()\r\n    const address = useFormValues()\r\n    const amountNumber = Number(amount.value)\r\n    const amountWithFee = amountNumber - fee\r\n\r\n    const data = {amount: amount.value, address: address.value}\r\n\r\n    let totalAmount = isNaN(amountNumber) ? 'Invalid value' : amountNumber === 0 ? 0 : amountWithFee.toString().slice(0,9)\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    function onClose(){\r\n        setConfirm(false)\r\n        props.onClose()\r\n    }\r\n\r\n    function onError(){ \r\n        if(totalAmount === 'Invalid value') { return }\r\n        if(address.value.length < 20 || address.value.length > 50){ \r\n            setErrorAddress(true)\r\n            return \r\n        }else{ setErrorAddress(false) }\r\n        if(amountNumber < 0.0003) { \r\n            setErrorAmount(true)\r\n            return\r\n        }else{ \r\n            setErrorAmount(false)\r\n        }\r\n        if(props.wallet < amountNumber) { setErrorBalance(true)}else{\r\n            setErrorBalance(false)\r\n            setConfirm(true)\r\n        }\r\n    }\r\n    \r\n    async function handleWithdraw(e){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n\r\n    const wallet = props.wallet ? props.wallet.toString().slice(0,9) : 0\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={onClose}>\r\n            <form className='withdraw-modal' onSubmit={handleWithdraw} >\r\n                <h2>Send Bitcoin to address</h2>\r\n                <h4>Wallet {wallet} BTC</h4>\r\n                <div className={confirm ? 'withdraw-confirm-address' : 'dNone'}>\r\n                    <h4>To Address:</h4>\r\n                    <p>{address.value}</p>\r\n                </div>\r\n                <div className={confirm ? 'dNone' : ''}>\r\n                    <div>\r\n                        <p className='p-withdrawModal'>Address</p>\r\n                        <input {...address} required={true} className='join-input' type=\"text\" placeholder='bc1qwyxy6s5zegv70ynz247qwyypnns4zy6ljz8tst'/>\r\n                        <p className={errorAdress ? 'minimun-withdraw-p minimunBtc' : 'dNone'}><MdInfo />  Invalid address.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='p-withdrawModal'>Amount</p>\r\n                        <input {...amount} required={true} className='join-input' type='number' placeholder='$ 0.01'/>\r\n                        <p className={errorBalance ? 'minimun-withdraw-p minimunBtc' : 'dNone'}><MdInfo />  The balance in the wallet is not enough.</p>\r\n                        <p className={errorAmount ? 'minimun-withdraw-p minimunBtc' : 'minimun-withdraw-p'}><MdInfo />  Minimum amount 0.0002 BTC.</p>\r\n                    </div>\r\n                </div>\r\n                <div className='total-receive-withdraw'>\r\n                    <p>Total to receive in address: <span className={totalAmount === 'Invalid value' ? 'total-receive-span' : ''}>{totalAmount} BTC</span></p>\r\n                </div>\r\n                <div>\r\n                    <p><MdInfo />  Fee: {fee} BTC.</p>\r\n                    <p><MdInfo />  Bitcoin transactions usually take 20 minutes to 1 day to complete.</p>\r\n                </div>\r\n\r\n                <button onClick={onError} className={!confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='button'>Send</button>\r\n                <button className={confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='submit'>\r\n                    <p> Confirm withdrawal for {Number(amount.value).toString().slice(0,9)}</p>\r\n                </button>\r\n                <button className='btn btn-dark btn-block withdraw-modal-cancelar' onClick={onClose} type='button'>Cancel</button>\r\n            </form>\r\n\r\n            <PasswordVerification isOpen={modalOpen} onClose={onClose} onClose2={onCloseModal} data={data} url={url+'/api/sendbtc'} />\r\n        </Modal>\r\n}","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport QRCode from 'react-qr-code'\r\nimport '../Styles/DepositModal.css'\r\nimport { MdContentCopy } from \"react-icons/md\"\r\nimport { IoIosCheckmarkCircle } from \"react-icons/io\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nexport const DepositModal = props => {\r\n\r\n    const [ copy, setCopy ] = useState(false)\r\n\r\n    const userData  = props.userData\r\n\r\n    const address = userData.addressWallet\r\n\r\n    function onClose(){\r\n        setCopy(false)\r\n        props.onClose()\r\n    }\r\n\r\n    function onCopy(){\r\n        setCopy(true)\r\n        setTimeout(() => {\r\n            setCopy(false)\r\n        }, 5000)\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={onClose}>\r\n\r\n        {\r\n            address ?\r\n\r\n            <form className='depositForm'>\r\n                <h2>Your Btc address</h2>\r\n\r\n                <div>\r\n\r\n                    <div className='qr-container'>\r\n                        <QRCode value={address} size={130} />\r\n                    </div>\r\n\r\n                    <p>{address}</p>\r\n                    \r\n                    <CopyToClipboard text={address} onCopy={onCopy}>\r\n                        <button type='button' className='button-copy-deposit'>\r\n                            {\r\n                                copy ? \r\n                                <div>\r\n                                Copied <IoIosCheckmarkCircle />     \r\n                                </div> : \r\n                                <div>\r\n                                    Copy <MdContentCopy />\r\n                                </div>\r\n                            } \r\n                        </button>\r\n                    </CopyToClipboard>\r\n\r\n                    <p className='mb-4'>The first deposit has a fee of 0.00002 btc.</p>\r\n\r\n                </div>\r\n\r\n                <button className='btn btn-dark btn-block withdraw-modal-cancelar' type='button' onClick={onClose}>Close</button>\r\n\r\n            </form> :\r\n\r\n            <div>Loading...</div>\r\n\r\n        }\r\n\r\n    </Modal>\r\n}","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport '../Styles/WithdrawToUserModal.css'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { MdInfo } from 'react-icons/md'\r\nimport { url } from '../../urlServer'\r\nimport PasswordVerification from './PasswordVerfication'\r\n\r\nconst WithdrawToUserModal = props => {\r\n\r\n    const [confirm, setConfirm] = useState(false)\r\n    const [errorAmount, setErrorAmount] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [errorBalance, setErrorBalance] = useState(false)\r\n    const [errorUser, setErrorUser] = useState(false)\r\n\r\n    const user = useFormValues()\r\n    const amount = useFormValues()\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const amountNumber = Number(amount.value)\r\n\r\n    function onError(){\r\n        if(!user.value){ \r\n            setErrorUser(true)\r\n            return\r\n        }else{ setErrorUser(false) }\r\n        if(amountNumber === 'Invalid value') { return }\r\n        if(amountNumber < 0.00005) { \r\n            setErrorAmount(true)\r\n            return\r\n        }else{ \r\n            setErrorAmount(false)\r\n        }\r\n        if(props.wallet < amountNumber) { setErrorBalance(true)}else{\r\n            setErrorBalance(false)\r\n            setConfirm(true)\r\n        }\r\n    }\r\n\r\n    function onClose(){\r\n        setConfirm(false)\r\n        props.onClose()\r\n    }\r\n\r\n    const data = {amount: amount.value, username: `@${user.value}`}\r\n\r\n    async function handleWithdraw(e){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n    \r\n    const wallet = props.wallet ? props.wallet.toString().slice(0,9) : 0\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={onClose}>\r\n        <form onSubmit={handleWithdraw} className='withdraw-toUser-form'>\r\n            <h2>Send Bitcoin to user</h2>\r\n\r\n            <h4>Wallet {wallet} BTC</h4>\r\n\r\n            <div className={confirm ? 'withdraw-toUser-confirm' : 'dNone'}>\r\n                <h4>\r\n                    To user:\r\n                </h4>\r\n                <p>@{user.value}</p>\r\n            </div>\r\n\r\n            <div className={confirm ? 'dNone' : ''}>\r\n                <div className='toUser-div1'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">@</div>\r\n                    </div>\r\n                    <input {...user} required={true} className='join-input' type=\"text\" placeholder='User'/>\r\n                </div>\r\n                <p className={errorUser ? 'redLetters' : ''}><MdInfo />  The user must respect uppercase and lowercase letters.</p>\r\n                <div className='toUser-div1'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">$</div>\r\n                    </div>\r\n                    <input {...amount} required={true} className='join-input' type='number' placeholder='Amount'/>\r\n                </div>\r\n                <p className={errorBalance ? 'redLetters' : 'dNone'}><MdInfo />  The balance in the wallet is not enough.</p>\r\n                <p className={errorAmount ? 'redLetters' : ''}><MdInfo />  Minimum to send: 0.00005 BTC.</p>\r\n            </div>\r\n            \r\n            <p className='toUser-info'>If it is the first deposit of the receiving user a fee of 0.00002 btc will be deducted.</p>\r\n            <p className='toUser-info'>This transaction is instantaneous and free.</p>\r\n\r\n            <button onClick={onError} className={!confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='button'>Send</button>\r\n            <button className={confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='submit'>\r\n                <p> Confirm withdrawal for {amount.value} BTC</p>\r\n            </button>\r\n            <button className='btn btn-dark btn-block toUser-cancelar' onClick={onClose} type='button'>Cancel</button>\r\n\r\n        </form>\r\n        <PasswordVerification isOpen={modalOpen} onClose={onClose} onClose2={onCloseModal} data={data} url={url+'/api/sendinternalbtc'} />\r\n    </Modal>\r\n}\r\n\r\nexport default WithdrawToUserModal","import React, {useContext, useState, useEffect } from 'react'\r\nimport './Styles/Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport { Context } from '../context'\r\nimport { WithdrawModal } from './Modals/WithdrawModal'\r\nimport { DepositModal } from './Modals/DepositModal'\r\nimport { IoMdSettings, IoIosContact } from 'react-icons/io'\r\nimport { MdRefresh, MdAccountCircle, MdKeyboardTab, MdAccountBalanceWallet, MdFileUpload, MdFileDownload, MdHelpOutline, MdChromeReaderMode, MdExitToApp, MdMail } from \"react-icons/md\"\r\nimport WithdrawToUserModal from './Modals/WithdrawToUserModal'\r\n\r\nconst Navbar_navigation2 = props => {\r\n\r\n    const [countUserData, setCountUserData] = useState(0)\r\n\r\n    const { logout, autoLogout, userData, loadingUserData, usdBtc, onUpdate } = useContext(Context)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat('en-US').format(number)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const cookie = Cookies.get('conected')\r\n            if(!cookie){ \r\n                props.pushLogout()\r\n                autoLogout()\r\n            }\r\n        }, 300000)\r\n        return () => clearInterval(interval)\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(countUserData > 0){onUpdate(countUserData)}\r\n    },[countUserData, onUpdate])\r\n    \r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [modal3Open, setModal3Open] = useState(null)\r\n    const [modal4Open, setModal4Open] = useState(null)\r\n\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n    function onClose3Modal(){\r\n        setModal3Open(null)\r\n    }\r\n    function onClose4Modal(){\r\n        setModal4Open(null)\r\n    }\r\n\r\n    function handleLogout() {\r\n        props.pushLogout()\r\n        logout()\r\n    }\r\n\r\n    const toggle3 = props.useComponentVisible(false)\r\n\r\n    const wallet = userData.wallet ? userData.wallet.toString().slice(0,9) : 0\r\n\r\n    return (\r\n        <div className='section-navIcons'>\r\n            <div className='button-nav-2'>\r\n\r\n                <button onClick={()=>toggle3.setIsComponentVisible(true)} className='icon-navbar'>\r\n                    <MdAccountCircle size='23' />\r\n                </button>\r\n\r\n                <div ref={toggle3.ref} className={toggle3.isComponentVisible ? 'dropdown-menu-navbar2 isActive' : 'dropdown-menu-navbar2'}>\r\n                    <div onClick={()=>toggle3.setIsComponentVisible(false)} className='button-close-nav'>X</div>\r\n                    <div  className=\"item-menu-right user\">\r\n                        < IoIosContact size='46'/>    <p> {userData.userName}</p>\r\n                    </div>\r\n                    <div className='item-menu-right-wallet-container'>\r\n                        <div><MdAccountBalanceWallet />&nbsp;Wallet</div>\r\n                        <div>\r\n                            <div className='d-flex balance-refresh-container'>< MdRefresh size='35' className={loadingUserData ? 'refresh-balance-loading ' : 'refresh-balance'} onClick={()=> setCountUserData(countUserData + 1)} />  {Number(wallet)} <p>&nbsp;BTC</p></div>\r\n                            <div className='d-flex justify-content-center'><p>&nbsp;&nbsp;(&nbsp;</p><p>  {!usdBtc ? '' : userData.wallet < usdBtc ? 0 : formatNumber(userData.wallet / usdBtc)}</p><p>&nbsp; Dollar)</p></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='item-menu-right-cashier'>\r\n                        <div onClick={()=> setModal4Open(true)} to='/wallet' className='button-deposit'><MdFileUpload />Deposit</div>\r\n                        <div onClick={()=>setModal3Open(true)} className='button-withdraw'><MdFileDownload />Withdraw</div>\r\n                    </div>\r\n                    <div onClick={()=> setModal2Open(true)} className=\"item-menu-right-withdrawToUser\">\r\n                        <MdKeyboardTab /> &nbsp;&nbsp; Send BTC to 2wanted User (free)\r\n                    </div>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/balance/' className=\"item-menu-right\">\r\n                        <MdChromeReaderMode /><p>&nbsp;Balance history</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/profile/' className=\"item-menu-right\" >\r\n                    < IoMdSettings /><p>&nbsp;User settings</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/help/' className=\"item-menu-right\">\r\n                        <MdHelpOutline /><p>&nbsp;Instructions</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/contact_us/' className=\"item-menu-right\">\r\n                        <MdMail /><p>&nbsp;Contact us</p> \r\n                    </Link>\r\n                    <div onClick={handleLogout} className=\"item-menu-right\">\r\n                        <MdExitToApp /><p>&nbsp;Logout</p>  \r\n                    </div>\r\n                </div> \r\n                \r\n            </div>  \r\n            <WithdrawToUserModal wallet={userData.wallet} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n            <WithdrawModal  wallet={userData.wallet} isOpen={modal3Open} onClose={onClose3Modal} />\r\n            <DepositModal userData={userData} isOpen={modal4Open} onClose={onClose4Modal} />        \r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default React.memo(Navbar_navigation2)\r\n","import React, { useState, useCallback } from 'react'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport './Styles/Navbar.css'\r\nimport { useComponentVisible } from '../hooks/useComponentVisible'\r\nimport { url } from '../urlServer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport Cookies from 'js-cookie'\r\nimport NavbarForm from './Forms/NavbarForm'\r\nimport Logo from './NavbarLogo'\r\nimport ButtonNav1 from './Navbar_navigation1'\r\nimport ButtonNav2 from './Navbar_navigation2'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n    \r\n    const username = Cookies.get('username') \r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n\r\n    const pushLogout = useCallback(() => props.history.push('/'), [props.history])\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n\r\n    const iconSet = useCallback((state) => {\r\n        if(state){\r\n            setIconNone(true)\r\n        }else { setIconNone(false) }\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n        <Helmet> <title>2wanted</title> </Helmet>\r\n        <nav className='principal-navbar'>\r\n            \r\n{/* ------------------------------------Section-Logos---------------------------------------------------------------------- */}       \r\n            <Logo iconNone={iconNone} />\r\n{/* ------------------------------------/Section-Logos---------------------------------------------------------------------- */}       \r\n            \r\n{/* ------------------------------------Section-Searcher---------------------------------------------------------------------- */}            \r\n            <NavbarForm useComponentVisible={useComponentVisible} iconSet={iconSet} ArbolImg={ArbolImg} url={url} />\r\n{/* ------------------------------------/Section-Searcher---------------------------------------------------------------------- */}       \r\n{/* ------------------------------------Section-NavIcons---------------------------------------------------------------------- */}       \r\n            \r\n            <div className={!iconNone ? 'navbar-buttons-left' : 'dNone'}>\r\n                <ButtonNav1 ArbolImg={ArbolImg} useComponentVisible={useComponentVisible} url={url} username={username} />\r\n                <ButtonNav2 pushLogout={pushLogout} useComponentVisible={useComponentVisible} />\r\n            </div>\r\n{/* ------------------------------------/Section-NavIcons--------------------------------------------------------------------- */}       \r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n\r\n\r\n","import React from \"react\"\r\nimport Navbar from \"./Navbar\"\r\n\r\nfunction Layout (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {props.children}\r\n            <Navbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {useEffect} from 'react'\r\n\r\nexport const Blank = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.history.push('/')\r\n    }, [props])\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport PasswordVerificationNewRoom from '../Modals/PasswordVerificationNewRoom'\r\nimport '../../Pages/Styles/Home.css'\r\nimport { MdHome, MdInfo } from \"react-icons/md\"\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\n\r\nconst NewSalaForm = props => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n\r\n    const [roomValid, setRoomValid] = useState(true)\r\n    const [priceValid, setPriceValid] = useState(true)\r\n    \r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const { usdBtc } = useContext(Context)\r\n\r\n    const name = useFormValues()\r\n    const price = useFormValues()\r\n\r\n    const inUsd = (price.value / usdBtc).toFixed(2)\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    \r\n    const newSalaData = {\r\n        name: name.value,\r\n        price: price.value,\r\n    }\r\n\r\n    function newSala( e ){\r\n        e.preventDefault()\r\n\r\n        if( reg_whiteSpace.test(name.value) || name.value.length < 4 || name.value.length > 15){\r\n            return setRoomValid(false)\r\n        }else { setRoomValid(true)}\r\n        if(parseFloat(price.value) < 0.00005 || price.value === '' ){\r\n            return setPriceValid(false)\r\n        }else{ setPriceValid(true) }\r\n\r\n        setModalOpen(true)\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"create-custom\">\r\n            <div className='create-form-container'>\r\n                <h3>Create Room</h3>    \r\n                <form onSubmit={newSala} >\r\n                    <div className={roomValid ? 'mb-3' : 'mb-2'}>\r\n                        <div className='d-flex'>\r\n                            <div>\r\n                                <div className=\"input-group-text input-guide\">< MdHome /></div>\r\n                            </div>\r\n                            <input type='text' {...name} placeholder='Room Name' />\r\n                        </div>\r\n                        <label className={!roomValid ? 'new-room-valid' : 'dNone'}><MdInfo />Minimum 4 characters, maximum 15, must not contain spaces</label>\r\n                    </div>\r\n                    <div className={priceValid ? 'mb-3' : 'mb-2'}>\r\n                        <div className='d-flex'>\r\n                            <div>\r\n                                <div className=\"input-group-text input-guide\">$</div>\r\n                            </div>\r\n                            <input  placeholder='Price in bitcoin' type='number' {...price} />\r\n                        </div>\r\n                        <p className={inUsd > 0 ? 'salaPriceInUsd' : 'dNone'}>={inUsd} USD</p>\r\n                        <label className={!priceValid ? 'new-room-valid' : 'dNone'}><MdInfo />Minimum room value 0.00005 BTC</label>\r\n                    </div>\r\n                    <button>\r\n                        <p>Create!</p>\r\n                    </button>\r\n                </form>   \r\n            </div>       \r\n\r\n            <PasswordVerificationNewRoom isOpen={modalOpen} onClose={onCloseModal} data={newSalaData} history={props.props.history} url={url+'/api/new/sala'}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewSalaForm\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport { Context } from '../context'\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListRooms = ({ url }) => {\r\n\r\n    const [listRooms, setListRooms] = useState([])\r\n    const [activesData, setActivesData] = useState({})\r\n    const [activesLoading, setActivesLoading] = useState(false)\r\n    let [countActives, setCountActives] = useState(1) \r\n    const { csrfToken } = useContext(Context)\r\n\r\n    useEffect(() => { \r\n        if(csrfToken){\r\n            setActivesLoading(true)\r\n            axios({\r\n                method: 'post',\r\n                data: {page: countActives},\r\n                url: url+'/api/search/listSalas',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setActivesLoading(false)\r\n                if(res.data.error) {\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setActivesLoading(false)\r\n                    setListRooms(res.data.data)\r\n                    const data = {total: res.data.total} \r\n                    setActivesData(data)\r\n                }\r\n            }).catch( err => {\r\n                setActivesLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }    \r\n    }, [countActives, url, csrfToken])\r\n\r\n    return(\r\n        <div className='actives-rooms'>\r\n            <h3>Your Rooms</h3>\r\n            <div className={activesData.total === 1 ? 'dNone' : 'pagination'}>\r\n                <button disabled={countActives === 1 ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives -= 1) } ><AiOutlineCaretLeft size='30'/></button> \r\n                    <p><span>{countActives}</span> - {activesData.total}</p> \r\n                <button disabled={countActives === activesData.total ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives += 1) }><AiOutlineCaretRight size='30' /></button>\r\n            </div>\r\n            {\r\n                activesLoading ? <div className=' text-center'>\r\n                    <div className=\"spinner-border spiner-actives text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div> : \r\n                <div>\r\n                    {\r\n                        listRooms.length === 0 ? <p className='no-salas-actives'>No rooms created!</p>  :\r\n                        <div> \r\n                            <ul>\r\n                                {\r\n                                    listRooms.map((data) => {\r\n                                        return (\r\n                                            <li className='actives-li' key={data.salaId}>\r\n                                                <Link to={`/sala/${data.salaId}`} className='actives-links Link'>\r\n                                                    <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                                    <div className='actives-description'>\r\n                                                        <p>Room Name: <span>{data.salaName}</span></p>\r\n                                                        <p>Price: <span>{data.salaPrice.toString().slice(0,9)} BTC</span></p>\r\n                                                        <p>Creator: <span>{data.salaCreator}</span></p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>        \r\n                        </div>\r\n                    }\r\n                </div> \r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListRooms","import React, { useState } from 'react'\r\nimport {MdHome, MdList, MdInfo} from \"react-icons/md\"\r\nimport { url } from '../urlServer'\r\nimport NewSalaForm from '../Components/Forms/NewSalaForm'\r\nimport ListRooms from '../Components/ListRooms'\r\nimport Swal from 'sweetalert2'\r\nimport './Styles/Home.css'\r\nimport axios from 'axios'\r\n\r\nexport const Home = (props) => {\r\n\r\n    const [actives_560, setActives_560] = useState(false)\r\n    \r\n    return(\r\n        <div className='home-container'>\r\n            <div className='wrap-1100'>\r\n                <div className={actives_560 ? 'home-left' : 'home-left home-left-560'}>\r\n\r\n                    <ListRooms Swal={Swal} axios={axios} url={url} />\r\n                    \r\n                </div>\r\n\r\n                <div className={!actives_560 ? 'home-right' : 'home-right home-right-560'}>\r\n\r\n                    <NewSalaForm props={props} axios={axios} url={url} MdHome={MdHome} MdInfo={MdInfo}/>\r\n\r\n                    <div className='section-video'>\r\n                        <div className='youtube-container'>\r\n                            <button className='instruction_home' onClick={()=>props.history.push('/help')}>Instructions</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                <div className='navigation-container'>\r\n                    <button onClick={()=> setActives_560(false) } className={!actives_560 ? 'navigation-button navigation-left' : 'navigation-button left-button' }><MdHome size='35' /></button>  \r\n                    <button onClick={()=> setActives_560(true) } className={actives_560 ? 'navigation-button navigation-right' : 'navigation-button' }><MdList size='35' /></button>  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport '../Styles/Withdraw2wantedModal.css'\r\n\r\nexport const Withdraw2wantedModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const amount = useFormValues()\r\n    const address = useFormValues()\r\n\r\n    const form = {\r\n        user: props.user, \r\n        amount: amount.value,\r\n        address: address.value\r\n    }\r\n\r\n    function handleWithdraw(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/admin/user2wanted_withdraw',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                props.refresh()\r\n                props.onClose()\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\r\n        <div className='withdraw2wanted-modal-container'>\r\n            <h1>Estas seguro?</h1>\r\n\r\n            <div>\r\n                <p>Registrar retiro de cuenta de 2Wanted con el usuario:</p>\r\n                <h4>{props.user}</h4>\r\n            </div>\r\n            <div>\r\n                <p>Disponible:</p>\r\n                <h4>{props.available}</h4>\r\n            </div>\r\n            <div>\r\n                <p>Usado:</p>\r\n                <h4>{props.used}</h4>\r\n            </div>\r\n            <div>\r\n                <p>Monto:</p>\r\n                <input {...amount} placeholder='Monto' required type=\"number\"/>\r\n            </div>\r\n            <div>\r\n                <p>Direccion Btc</p>\r\n                <input {...address} placeholder='Direccion' required type=\"text\"/>\r\n            </div>\r\n            <div className='withdraw2wanted-modal-buttons'>\r\n                <button onClick={props.onClose}>Cancelar</button>\r\n                <button onClick={handleWithdraw}>{loading ? 'CARGANDO........' : 'Confirmar'}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </Modal>\r\n}","import React from 'react'\r\nimport Modal from './Modal'\r\n\r\nexport const TatumStatus = props => {\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n            \r\n        <div>\r\n\r\n            {\r\n                props.myWallet ? <h1>Mi billetera tatum</h1> : <h1>Billetera Tatum de usuario {props.user}</h1>\r\n            }\r\n\r\n            <h6>Balance en cuenta</h6>\r\n            <p>{props.balance.accountBalance}</p>\r\n\r\n            <h6>Balance disponible</h6>\r\n            <p>{props.balance.availableBalance}</p>\r\n        </div>\r\n\r\n    </Modal>\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const ToExcelModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    function handleBalanceExcel(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url+'/api/admin/balanceToExcel',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Succes',\r\n                text: res.data.msg,\r\n            })\r\n            props.onClose()\r\n            \r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\r\n        <h1>Estas seguro?</h1>\r\n        <br/>\r\n        <h2>Se descargara un balance el formato excel</h2>\r\n\r\n        <div className='withdraw2wanted-modal-buttons'>\r\n            <button onClick={props.onClose}>Cancelar</button>\r\n            <button onClick={handleBalanceExcel}>{loading ? 'CARGANDO......' : 'Confirmar'}</button>\r\n        </div>\r\n\r\n    </Modal>\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const MailModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    function handleEmailPersonalized(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { msg: props.msg, asunto: props.asunto, user: `@${props.user}` },\r\n            url: url+'/api/admin/mailpersonalized',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                props.onClose()\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\r\n        <h1>Estas seguro?</h1>\r\n\r\n        <p>Enviar Email al usuario:</p>\r\n        <h2> {props.user} </h2>\r\n        <p>Con el asunto:</p>\r\n        <h2> {props.asunto} </h2>\r\n\r\n        <div className='withdraw2wanted-modal-buttons'>\r\n            <button onClick={props.onClose}>Cancelar</button>\r\n            <button onClick={handleEmailPersonalized}>{loading ? 'CARGANDO........' : 'Confirmar'}</button>\r\n        </div>\r\n    </Modal>\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { useGeneralBalance } from '../hooks/useGeneralBalance'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport { Withdraw2wantedModal } from '../Components/Modals/Withdraw2wantedModal'\r\nimport { TatumStatus } from '../Components/Modals/TatumStatus'\r\nimport { ToExcelModal } from '../Components/Modals/ToExcelModal'\r\nimport { MailModal } from '../Components/Modals/MailModal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/AdminHome.css'\r\n\r\nexport const AdminHome = (props) => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [viewButton, setViewButton] = useState(false)\r\n    const [viewList, setViewList] = useState(false)\r\n    const [list, setList] = useState([])\r\n\r\n    const { reload, totalDeposit, actualCuenta, totalGanado, moneyUsersRooms, totalWallets, actual2wanted, withdrawUsers, withdraw2wanted, totalRetirado, generalLoading, verification, verification2 } = useGeneralBalance()\r\n\r\n    const retiradoTotalTotal = totalRetirado ? totalRetirado : 0\r\n\r\n    const user = useFormValues()\r\n    const username = useFormValues()\r\n\r\n    const [ balanceTatum, setBalanceTatum ] = useState({})\r\n    const [ myWallet, setMyWallet ] = useState(false)\r\n    const [ userTatum, setUserTatum ] = useState('')\r\n\r\n    const [ modal1Open, setModal1Open ] = useState(false)\r\n    const [ modal2Open, setModal2Open ] = useState(false)\r\n    const [ modal3Open, setModal3Open ] = useState(false)\r\n    const [ modal4Open, setModal4Open ] = useState(false)\r\n    const [ available, setAvailable ] = useState(0)\r\n    const [ used, setUsed ] = useState(0)\r\n\r\n    function onCloseModal1(){\r\n        setModal1Open(false)\r\n    }\r\n    function onCloseModal2(){\r\n        setModal2Open(false)\r\n    }\r\n    function onCloseModal3(){\r\n        setModal3Open(false)\r\n    }\r\n    function onCloseModal4(){\r\n        setModal4Open(false)\r\n    }\r\n    \r\n    function onTatumDetail(me){\r\n        \r\n        let myWallet = false\r\n        \r\n        if(me){ myWallet = true }\r\n\r\n        const form = { username: username.value, myWallet }\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/tatumDetailUser',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setBalanceTatum(res.data)\r\n                if(me){ setMyWallet(true) }else{\r\n                    setMyWallet(false)\r\n                    setUserTatum(username.value)\r\n                } \r\n                setModal3Open(true)\r\n            }\r\n        }).catch( err => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    function refresh(){\r\n        reload()\r\n    }\r\n\r\n    function handleWithdraw(e){\r\n        e.preventDefault()\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: {user: user.value, verification: true},\r\n            url: url+'/api/admin/user2wanted_withdraw',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setAvailable(res.data.available)\r\n                setUsed(res.data.used)\r\n                setModal1Open(true)\r\n            }\r\n        }).catch( err => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    const [ totalPages2wantedwithdraws, setTotalPages2wantedwithdraws ] = useState(1)\r\n    const [ page2wantedwithdraws, setPage2wantedwithdraws ] = useState(1)\r\n    \r\n    const [ withdraw2wantedLoading, setWithdraw2wantedLoading ] = useState(false)\r\n    const [refresh2wanted, setRefresh2wanted] = useState(false)\r\n\r\n    useEffect(()=>{\r\n\r\n        setWithdraw2wantedLoading(true)\r\n        \r\n        if(csrfToken){\r\n    \r\n            axios({\r\n                method: 'post',\r\n                data: {page: page2wantedwithdraws},\r\n                url: url+'/api/admin/withdraw2wantedlist',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res.data.error) {\r\n                    setWithdraw2wantedLoading(false)\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setList(res.data.list)\r\n                    setTotalPages2wantedwithdraws(res.data.totalPages)\r\n                    setWithdraw2wantedLoading(false)\r\n                }\r\n            }).catch( err => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n                setWithdraw2wantedLoading(false)\r\n            })\r\n        }\r\n\r\n    },[page2wantedwithdraws, refresh2wanted, csrfToken])\r\n\r\n    const [inicialDate, setInicialDate] = useState('')\r\n    const [finalDate, setFinalDate] = useState('')\r\n\r\n    const userHistory = useFormValues()\r\n\r\n    function handleHistoryUsers(e){\r\n\r\n        e.preventDefault()\r\n\r\n        if(inicialDate && finalDate){\r\n            props.history.push(`/historyUsers/${inicialDate}/${finalDate}/@${userHistory.value}`)\r\n        }else{ props.history.push(`/historyUsers/@${userHistory.value}`)}\r\n\r\n    }\r\n\r\n    const salaName = useFormValues()\r\n\r\n    function handleUsersInSala(e){\r\n\r\n        e.preventDefault()\r\n\r\n        props.history.push(`/historyUsers/@${userHistory.value}/${salaName.value}`)\r\n        \r\n    }\r\n\r\n    const emailPersonalized = useFormValues()\r\n    const asunto = useFormValues()\r\n    const userEmailPersonalized = useFormValues()\r\n\r\n    function handleEmailPersonalized(e){\r\n        e.preventDefault()\r\n        setModal4Open(true)\r\n    }\r\n\r\n    if(generalLoading){\r\n        return <div>LOADING...</div>\r\n    }\r\n\r\n    return <div className='balance-container'>\r\n        <div className='section-title'>\r\n            <h1>Administracion</h1>\r\n        </div>\r\n        <div className='balance-section-buttons'>\r\n            <div onClick={()=>setViewButton(false)} className={viewButton ? 'balance-button-top' : 'balance-button-top balance-button-top-active'}>General</div>\r\n            <div onClick={()=>setViewButton(true)} className={!viewButton ? 'balance-button-top' : 'balance-button-top balance-button-top-active'}>Usuarios</div>\r\n        </div>\r\n        <div className={viewButton ? 'dNone' : 'section-general-container'}>\r\n            <div className={!viewList ? '' : 'dNone'}>\r\n                <h1 className={generalLoading ? '' : 'dNone'}>Cargando...</h1>\r\n                <p>Total Depositado: <span>  {totalDeposit.toString().slice(0,9)}</span> </p>\r\n                <p>Actual en cuenta: <span> {actualCuenta.toString().slice(0,9)} </span> </p>\r\n                <p>Total obtenido por 2wanted: <span>{totalGanado.toString().slice(0,9)}</span></p>\r\n                <p>dinero de Usuarios en salas: <span> {moneyUsersRooms.toString().slice(0,9)} </span> </p>\r\n                <p>dinero actual en wallet de Usuarios: <span> {totalWallets.toString().slice(0,9)} </span> </p>\r\n                <p>dinero actual de 2wanted: <span> {actual2wanted.toString().slice(0,9)} </span> </p>\r\n                <p>dinero retirado de usuarios: <span> {withdrawUsers.toString().slice(0,9)} </span></p>\r\n                <p>dinero retirado de 2wanted: <span> {withdraw2wanted.toString().slice(0,9)} </span> </p>\r\n                <p>Total dinero retirado: <span> ${`${parseFloat(retiradoTotalTotal).toString().slice(0,9)}`} </span></p>\r\n                <p>Verificacion: <span>--{verification}--</span><span>{`( ${actualCuenta.toString().slice(0,9)} - ${verification2.toString().slice(0,9)} )`}</span> </p>\r\n                <div>\r\n                    <form className='withdrawform' onSubmit={handleWithdraw}>\r\n                        <h2>Regitrar Retiro 2wanted</h2>\r\n                        <input required {...user} type=\"text\" placeholder='Usuario'/>\r\n                        <button>Registrar</button>\r\n                    </form>\r\n                </div>\r\n                <h2>Ir a lista de Retiros</h2>\r\n                <button className='general-inferiorButtons' onClick={()=>{\r\n                    setViewList(true)\r\n                    setRefresh2wanted(!refresh2wanted)\r\n                }}>Lista de retiros por 2wanted</button>\r\n                <div>\r\n                    <h2>Tatum Wallet</h2>\r\n                    <div className='d-flex'>\r\n                        <input {...username} type=\"text\" placeholder=\"user\"/>\r\n                        <button onClick={()=>onTatumDetail()}>Buscar</button>\r\n                    </div>\r\n                    <button onClick={ ()=>onTatumDetail(true) }>My status</button>\r\n                </div>\r\n                <h2>Descargar Balance en Excel</h2>\r\n                <button className='general-inferiorButtons' onClick={()=>setModal2Open(true)}>Balance a excel</button>\r\n            </div>\r\n            <div className={viewList ? 'listCards-withdraw2wanted' : 'dNone'}>\r\n            <button className='navigation-back-button' onClick={()=>setViewList(false)}>🢀  Atras</button>  \r\n            <div className='container-paginations-buttons'>\r\n                <button onClick={()=>setPage2wantedwithdraws(page2wantedwithdraws - 1)} disabled={page2wantedwithdraws === 1 ? true : false}>🢀</button>\r\n                    <p>{page2wantedwithdraws} </p><p>&nbsp;&nbsp;-&nbsp;&nbsp;</p><p> {totalPages2wantedwithdraws}</p>\r\n                <button onClick={()=>setPage2wantedwithdraws(page2wantedwithdraws + 1)} disabled={page2wantedwithdraws === totalPages2wantedwithdraws ? true : false}>🢂</button>\r\n                <p className={withdraw2wantedLoading ? 'CARGANDO_P' : 'dNone'}> CARGANDO..... </p>\r\n            </div>           \r\n                {\r\n                    list.map( data => {\r\n                        return (\r\n                            <li key={data._id}>\r\n                                <p className='balance-description-title'>Retirado por: <span>{data.user}</span></p> \r\n                                <p className='balance-description-title'>Monto: <span>${data.amount}</span></p>  \r\n                                <p className='balance-description-title'>A direccion: <span>${data.toAddress}</span></p>  \r\n                                <p className='balance-description-title'>txId: <span>${data.txId}</span></p>  \r\n                                <p className='balance-description-title'>Fecha: <span>{new Date(data.date).getDate()}</span>/<span>{new Date(data.date).getMonth() + 1}</span>/<span>{new Date(data.date).getFullYear()}</span>&nbsp;&nbsp;<span>{new Date(data.date).getHours()}</span>:<span>{new Date(data.date).getMinutes()}</span></p>    \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={!viewButton ? 'dNone' : 'section-usuarios-container'}>\r\n            <div className='container-info-users'>\r\n                <form onSubmit={handleHistoryUsers} className='container-historial-users'>\r\n                    <h2>Busqueda de historial de Usuarios</h2>\r\n                    <div className='historial-fechas'>\r\n                        <p>Desde</p>&nbsp;&nbsp;\r\n                        <input onChange={(e)=>setInicialDate(e.target.value)} type=\"date\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>Hasta</p>&nbsp;&nbsp;\r\n                        <input onChange={(e)=>setFinalDate(e.target.value)} type=\"date\"/>\r\n                    </div>\r\n                        <input required {...userHistory} type=\"text\" placeholder='Usuario'/>\r\n                    <button>Buscar</button>\r\n                </form>\r\n                <form onSubmit={handleUsersInSala}>\r\n                    <h2>Busqueda de historial de usuarios en salas especificas</h2>\r\n                    <input required {...userHistory} type=\"text\" placeholder='Usuario'/>\r\n                    <input required {...salaName} type=\"text\" placeholder='Sala'/>\r\n                    <button>Buscar</button>\r\n                </form>\r\n                <form onSubmit={handleEmailPersonalized}>\r\n                    <h2> Enviar correo personalizado a usuario</h2>\r\n                    <input required {...userEmailPersonalized} type=\"text\" placeholder='Usuario'/>\r\n                    <input required {...asunto} type=\"text\" placeholder='Asunto'/>\r\n                    <textarea required {...emailPersonalized} placeholder='Mensaje'/>\r\n                    <button>Enviar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <Withdraw2wantedModal available={available} used={used} refresh={refresh} user={user.value} isOpen={modal1Open} onClose={onCloseModal1} />    \r\n        <TatumStatus user={userTatum} myWallet={myWallet} balance={balanceTatum} isOpen={modal3Open} onClose={onCloseModal3} />    \r\n        <ToExcelModal isOpen={modal2Open} onClose={onCloseModal2} />      \r\n        <MailModal msg={emailPersonalized.value} asunto={asunto.value} user={userEmailPersonalized.value} isOpen={modal4Open} onClose={onCloseModal4} />    \r\n    </div>\r\n}","import { useState, useEffect, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nexport const useGeneralBalance = () => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n    \r\n    const [general, setGeneral] = useState({}) \r\n    const [loading, setLoading] = useState(true) \r\n    const [reload, setReload] = useState(false) \r\n    \r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n\r\n        if(csrfToken){\r\n            axios({\r\n                method: 'post',\r\n                url: url+'/api/admin/generalTotalBalance',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res.data.error) {\r\n                    setLoading(false)\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setGeneral(res.data)\r\n                    setLoading(false)\r\n                }\r\n            }).catch( err => {\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }\r\n    \r\n    \r\n    },[reload, csrfToken])\r\n\r\n    function refresh(){\r\n        setReload(!reload)\r\n    }\r\n\r\n    return {reload: refresh, totalDeposit: general.totalDeposits, actualCuenta: general.actualEnCuenta, totalGanado: general.totalWon, moneyUsersRooms: general.userMoneyRooms, totalWallets: general.totalInWallets, actual2wanted: general.actual2wanted, withdrawUsers: general.totalEgresoUsers, withdraw2wanted: general.totalEgreso2wanted, totalRetirado: general.egresos, generalLoading: loading, verification: general.verification, verification2: general.verification2}\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/abajo.780d3280.svg\";","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport abajo from '../Images/abajo.svg'\r\nimport './Styles/Tree.css'\r\n\r\nconst TreeData = ({price, username, arbolData, onOpenModal, onOpen2Modal}) => {\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat('en-US').format(number)\r\n    }\r\n\r\n    const [lineDropDown, setLineDropdown] = useState(false)\r\n\r\n    const { usdBtc } = useContext(Context)\r\n\r\n    const level3 = (price/2) / usdBtc\r\n    const level4 = (price/4) / usdBtc\r\n\r\n    return(\r\n        <div className='tree-wrap'>\r\n            <div className='nivel'>\r\n                <div className='child'></div>\r\n            </div>\r\n            <p className='level-text'>Level 1</p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[0] ? ()=> onOpenModal(arbolData[0]) : ()=> onOpen2Modal(username)} className={arbolData[0] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[1] ? ()=> onOpenModal(arbolData[1]) : ()=> onOpen2Modal(username)} className={arbolData[1] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Level 2</p>\r\n            <div className='nivel'>\r\n                <button disabled={arbolData[0] ? false : true} onClick={arbolData[2] ? ()=> onOpenModal(arbolData[2]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[2] ? 'child' : 'noChild'}>{arbolData[0] && '+'}</button>\r\n                <button disabled={arbolData[0] ? false : true} onClick={arbolData[3] ? ()=> onOpenModal(arbolData[3]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[3] ? 'child' : 'noChild'}>{arbolData[0] && '+'}</button>\r\n                <button disabled={arbolData[1] ? false : true} onClick={arbolData[4] ? ()=> onOpenModal(arbolData[4]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[4] ? 'child' : 'noChild'}>{arbolData[1] && '+'}</button>\r\n                <button disabled={arbolData[1] ? false : true} onClick={arbolData[5] ? ()=> onOpenModal(arbolData[5]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[5] ? 'child' : 'noChild'}>{arbolData[1] && '+'}</button>\r\n            </div>\r\n            <p className='level-text'>Level 3 &nbsp; <span>{formatNumber(level3)} USD c/u</span></p>\r\n            <div className='nivel'>\r\n                <button disabled={arbolData[2] ? false : true} onClick={arbolData[6] ? ()=> onOpenModal(arbolData[6]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[6] ? 'child' : 'noChild'}>{arbolData[2] && '+'}</button>\r\n                <button disabled={arbolData[2] ? false : true} onClick={arbolData[7] ? ()=> onOpenModal(arbolData[7]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[7] ? 'child' : 'noChild'}>{arbolData[2] && '+'}</button>\r\n                <button disabled={arbolData[3] ? false : true} onClick={arbolData[8] ? ()=> onOpenModal(arbolData[8]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[8] ? 'child' : 'noChild'}>{arbolData[3] && '+'}</button>\r\n                <button disabled={arbolData[3] ? false : true} onClick={arbolData[9] ? ()=> onOpenModal(arbolData[9]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[9] ? 'child' : 'noChild'}>{arbolData[3] && '+'}</button>\r\n                <button disabled={arbolData[4] ? false : true} onClick={arbolData[10] ? ()=> onOpenModal(arbolData[10]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[10] ? 'child' : 'noChild'}>{arbolData[4] && '+'}</button>\r\n                <button disabled={arbolData[4] ? false : true} onClick={arbolData[11] ? ()=> onOpenModal(arbolData[11]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[11] ? 'child' : 'noChild'}>{arbolData[4] && '+'}</button>\r\n                <button disabled={arbolData[5] ? false : true} onClick={arbolData[12] ? ()=> onOpenModal(arbolData[12]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[12] ? 'child' : 'noChild'}>{arbolData[5] && '+'}</button>\r\n                <button disabled={arbolData[5] ? false : true} onClick={arbolData[13] ? ()=> onOpenModal(arbolData[13]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[13] ? 'child' : 'noChild'}>{arbolData[5] && '+'}</button>\r\n            </div>\r\n            <p className='level-text'>Level 4 &nbsp; <span>{formatNumber(level4)} USD c/u</span></p>\r\n            <div className='nivel displayNone1'>\r\n                <button disabled={arbolData[6] ? false : true} onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>{arbolData[6] && '+'}</button>\r\n                <button disabled={arbolData[6] ? false : true} onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>{arbolData[6] && '+'}</button>\r\n                <button disabled={arbolData[7] ? false : true} onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>{arbolData[7] && '+'}</button>\r\n                <button disabled={arbolData[7] ? false : true} onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>{arbolData[7] && '+'}</button>\r\n                <button disabled={arbolData[8] ? false : true} onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>{arbolData[8] && '+'}</button>\r\n                <button disabled={arbolData[8] ? false : true} onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>{arbolData[8] && '+'}</button>\r\n                <button disabled={arbolData[9] ? false : true} onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>{arbolData[9] && '+'}</button>\r\n                <button disabled={arbolData[9] ? false : true} onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>{arbolData[9] && '+'}</button>\r\n                <button disabled={arbolData[10] ? false : true} onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>{arbolData[10] && '+'}</button>\r\n                <button disabled={arbolData[10] ? false : true} onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>{arbolData[10] && '+'}</button>\r\n                <button disabled={arbolData[11] ? false : true} onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>{arbolData[11] && '+'}</button>\r\n                <button disabled={arbolData[11] ? false : true} onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>{arbolData[11] && '+'}</button>\r\n                <button disabled={arbolData[12] ? false : true} onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>{arbolData[12] && '+'}</button>\r\n                <button disabled={arbolData[12] ? false : true} onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>{arbolData[12] && '+'}</button>\r\n                <button disabled={arbolData[13] ? false : true} onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>{arbolData[13] && '+'}</button>\r\n                <button disabled={arbolData[13] ? false : true} onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>{arbolData[13] && '+'}</button>\r\n            </div>\r\n            <button className='btn-lineDropDown' onClick={()=> setLineDropdown(!lineDropDown)}> <img src={abajo} alt=\"abajo\"/> </button>\r\n            <div className={lineDropDown ? 'nivel2' : 'vNone'}>\r\n                <div className='lineDropDown-separator'>\r\n                    <div className=\"linePar-container\">\r\n                        <p>1</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[6] ? false : true} onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>{arbolData[6] && '+'}</button>\r\n                            <button disabled={arbolData[6] ? false : true} onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>{arbolData[6] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>2</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[7] ? false : true} onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>{arbolData[7] && '+'}</button>\r\n                            <button disabled={arbolData[7] ? false : true} onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>{arbolData[7] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>3</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[8] ? false : true} onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>{arbolData[8] && '+'}</button>\r\n                            <button disabled={arbolData[8] ? false : true} onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>{arbolData[8] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>4</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[9] ? false : true} onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>{arbolData[9] && '+'}</button>\r\n                            <button disabled={arbolData[9] ? false : true} onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>{arbolData[9] && '+'}</button>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n                <div className='lineDropDown-separator'>\r\n                    <div className=\"linePar-container\">\r\n                        <p>5</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[10] ? false : true} onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>{arbolData[10] && '+'}</button>\r\n                            <button disabled={arbolData[10] ? false : true} onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>{arbolData[10] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>6</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[11] ? false : true} onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>{arbolData[11] && '+'}</button>\r\n                            <button disabled={arbolData[11] ? false : true} onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>{arbolData[11] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>7</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[12] ? false : true} onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>{arbolData[12] && '+'}</button>\r\n                            <button disabled={arbolData[12] ? false : true} onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>{arbolData[12] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>8</p>\r\n                        <div className=\"linePar\">\r\n                            <button disabled={arbolData[13] ? false : true} onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>{arbolData[13] && '+'}</button>\r\n                            <button disabled={arbolData[13] ? false : true} onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>{arbolData[13] && '+'}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(TreeData)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport '../Styles/MiniModal.css'\r\n\r\nfunction MiniModal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"MiniModal\">\r\n                <div className=\"MiniModal__container\">\r\n                    <button onClick={props.onClose} className=\"MiniModal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default MiniModal","import React from 'react'\r\nimport MiniModal from './MiniModal'\r\n\r\nexport const ChildModal = (props) =>{\r\n\r\n    let user = ''\r\n\r\n    if(props.user){\r\n        user = props.user.split(\" \")[0]\r\n    }\r\n\r\n    return (\r\n        <MiniModal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <h3>User:</h3>\r\n            <br/>\r\n            <h4>{user}</h4>\r\n        </MiniModal>\r\n    )\r\n}\r\n","import React, { useState, useContext } from \"react\"\r\nimport Modal from \"./Modal\"\r\nimport Swal from 'sweetalert2'\r\nimport { Context } from '../../context'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { MdInfo } from \"react-icons/md\"\r\nimport axios from 'axios'\r\nimport '../Styles/Invite.css'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const InviteModal = (props) => {\r\n    \r\n    const user = useFormValues()\r\n    const message = useFormValues()\r\n    const { csrfToken } = useContext(Context)\r\n    const [inviteLoading, setInviteLoading] = useState(false)\r\n\r\n    let data\r\n    \r\n    if(props.data){\r\n\r\n        let parentUser = props.data.parentUsername ? props.data.parentUsername.split(\" \")[0] : ''\r\n        \r\n        data = {\r\n            newUser: `@${user.value}`, parentUsername: parentUser,\r\n            message: message.value, salaId: props.data.salaId,\r\n            price: props.data.price, salaName: props.data.salaName, host: props.data.host\r\n        }\r\n    }\r\n\r\n    const [msg_valid, setMsg_valid] = useState(true)\r\n\r\n    async function handleSubmit( e ){\r\n        e.preventDefault()\r\n\r\n        if(message.value.length > 50){\r\n            return setMsg_valid(false)\r\n        }else{setMsg_valid(true)}\r\n\r\n        setInviteLoading(true)\r\n        \r\n        await axios({\r\n            data: data,\r\n            method: 'post',\r\n            url: url+'/api/new-invitation',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setInviteLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Invitation sent',\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setInviteLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n        props.onClose() \r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Invite user</h3>\r\n            <form className='invite-form' onSubmit={handleSubmit}>\r\n                <div className='d-flex'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">@</div>\r\n                    </div>\r\n                    <input {...user} type=\"text\" placeholder='User'/>\r\n                </div>\r\n                <div className=\"form-group mt-4 mb-4\">\r\n                    <input {...message} type=\"text\" placeholder='Optional message'/>\r\n                    <label className={msg_valid ? 'dNone' : 'warning-invite'}><MdInfo />&nbsp;Maximum 50 characters</label>\r\n                </div>\r\n                <button disabled={inviteLoading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                    <div className={inviteLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={inviteLoading ? 'dNone' : ''}>Invite</p>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useCallback } from 'react'\r\nimport TreeData from './TreeData'\r\nimport './Styles/Tree.css'\r\nimport { ChildModal } from './Modals/childModal'\r\nimport { InviteModal } from './Modals/inviteModal'\r\n\r\nconst Tree = (props) => {\r\n\r\n    const arbolData =  props.arbolData\r\n    \r\n    /* ---------------------------------------------------Modales------------------------- */\r\n    \r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [userModal, setUserModal] = useState(null)\r\n    const [dataModal, setDataModal] = useState(null)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    const onOpenModal = useCallback( user => {\r\n        setModalOpen(true)\r\n        setUserModal(user)\r\n    },[])\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n    \r\n    const onOpen2Modal = useCallback( parent => {\r\n        const data = {\r\n            parentUsername: parent, salaId: props.salaId, price: props.price, salaName: props.salaName\r\n        }\r\n        setModal2Open(true)\r\n        setDataModal(data)\r\n    },[props.price, props.salaId, props.salaName])\r\n  \r\n    if(props.loading){\r\n        return <div className=\"spinner-border tree-spinner text-danger\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TreeData price={props.price} username={props.userName} arbolData={arbolData} onOpen2Modal={onOpen2Modal} onOpenModal={onOpenModal} />\r\n            \r\n            <ChildModal user={userModal} isOpen={modalOpen} onClose={onCloseModal}/>\r\n            <InviteModal data={dataModal} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tree","import React, { useState, useContext } from 'react'\r\nimport Decimal from 'decimal.js-light'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { Context } from '../context'\r\nimport { IoIosCheckmarkCircle } from \"react-icons/io\"\r\nimport { MdAccountBalanceWallet, MdContentCopy } from \"react-icons/md\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nconst RomDetails = ({loading, usdBtc, count, url, salaId, arbolData, dataRoom, inBalance, parent}) => {\r\n\r\n    const [ copy, setCopy ] = useState(false)\r\n    const [loadingToBalance, setLoadingToBalance] = useState(false)\r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const { csrfToken } = useContext(Context)\r\n    const price = dataRoom ? dataRoom.price : 0\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat('en-US').format(number)\r\n    }\r\n\r\n    async function handleToBalance(){\r\n        setLoadingToBalance(true)\r\n        await axios({\r\n            method: 'post',\r\n            data: {toBalance: 'true'},\r\n            url: `${url}/api/in-sala?id=${salaId}`,\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoadingToBalance(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setCountUserData(countUserData + 1)\r\n                count(countUserData + 1)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n            setLoadingToBalance(false)\r\n        })\r\n    }\r\n\r\n    let acum3 = 0\r\n    let acum4 = 0   \r\n    let tAcum = 0   \r\n    let newCash = 0\r\n\r\n    if(arbolData && dataRoom && loading === false) {\r\n\r\n        for(let i = 6; i<=13; i++) {\r\n            let divide = new Decimal(price).div(2).toNumber()   \r\n            if(arbolData[i]){\r\n                acum3 = new Decimal(acum3).add(divide).toNumber()\r\n            }\r\n        }\r\n        for(let i = 14; i<=29; i++){\r\n            let divide = new Decimal(price).div(4).toNumber()\r\n            if(arbolData[i]){\r\n                acum4 = new Decimal(acum4).add(divide).toNumber()\r\n            }\r\n        }\r\n    \r\n        tAcum = new Decimal(acum3).add(acum4).toNumber()\r\n        newCash= new Decimal(tAcum).sub(inBalance).toNumber()\r\n\r\n    }\r\n\r\n    function onCopy(){\r\n        setCopy(true)\r\n        setTimeout(() => {\r\n            setCopy(false)\r\n        }, 5000)\r\n    }\r\n\r\n    if(loading){ return <div className='room-details'>Loading...</div>}\r\n\r\n    return(\r\n        <div className='room-details'>\r\n            <CopyToClipboard text={`https://2wanted.com?add=${dataRoom.name}`} onCopy={onCopy}>\r\n                    <div className='copyLinkInvitation' type='button'>\r\n                        {\r\n                            copy ? \r\n                            <div>\r\n                                Copied <IoIosCheckmarkCircle />     \r\n                            </div> : \r\n                            <div>\r\n                                Copy room link <MdContentCopy />\r\n                            </div>\r\n                        } \r\n                    </div>\r\n            </CopyToClipboard>\r\n            <p>Room Name:</p>\r\n            <span>{dataRoom.name}</span>\r\n            <p>Room Price:</p>\r\n            <span>{`${dataRoom.price.toString().slice(0,9)} BTC  (${formatNumber(dataRoom.price / usdBtc)} USD)`}</span>\r\n            <p>Parent User:</p>\r\n            <span>{parent}</span>\r\n            <p>Creator:</p>\r\n            <span>{`${dataRoom.creator}`}</span>\r\n            <p>accumulated level 3:</p>\r\n            <span>{`${acum3 > 0 ? acum3.toString().slice(0,9) : 0} BTC  (${formatNumber(acum3 / usdBtc)} USD)`}</span>\r\n            <p>accumulated level 4:</p>\r\n            <span>{`${acum4 > 0 ? acum4.toString().slice(0,9) : 0} BTC  (${formatNumber(acum4 / usdBtc)} USD)`}</span>\r\n            <p>Total accumulated:</p>\r\n            <span>{`${tAcum > 0 ? tAcum.toString().slice(0,9) : 0} BTC  (${formatNumber(tAcum / usdBtc)} USD)`}</span>                   \r\n            <p>accumulated paid:</p>\r\n            <span>{`${inBalance > 0 ? inBalance.toString().slice(0,9) : 0} BTC  (${formatNumber(inBalance / usdBtc)} USD)`}</span>\r\n            <button disabled={tAcum > inBalance ? false : true} onClick={handleToBalance}>\r\n                <div className={!loadingToBalance ? '' : 'dNone'}>\r\n                    <p>Withdraw to wallet</p>\r\n                    <label>{tAcum > inBalance ? newCash.toString().slice(0,9) : 0} BTC ➜ <MdAccountBalanceWallet /></label>\r\n                </div>\r\n                <div className={loadingToBalance ? \"spinner-toBalance spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(RomDetails)\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport './Styles/Room.css'\r\nimport Tree  from '../Components/Tree'\r\nimport RomDetails from '../Components/RomDetails'\r\nimport { useChildsData }  from '../hooks/useChildsData'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'js-cookie'\r\nimport { useCallback } from 'react'\r\n\r\nexport const Room = (props) => {\r\n\r\n    const { usdBtc, csrfToken } = useContext(Context)\r\n    const userName = Cookies.get('username')\r\n    \r\n    const salaId = props.match.params.salaId\r\n    const [parent, setParent] = useState('')\r\n    const [inBalance, setInBalance] = useState(0)\r\n    const [dataRoom, setDataRoom] = useState({})\r\n\r\n    const [loadingDetails, setLoadingDetails] = useState(false)\r\n     \r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const { arbolData, loadingChildsData } = useChildsData(salaId, userName)\r\n\r\n    \r\n    const count = useCallback((data) => {\r\n        if(count){\r\n            setCountUserData(data)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        async function searchRoom(){\r\n            try {\r\n                setLoadingDetails(true)\r\n                const response = await axios({\r\n                    data: { salaId: salaId },\r\n                    method: 'post',\r\n                    url: url+'/api/search/sala',\r\n                    headers: { \r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })\r\n                if(response.data.error){\r\n                    setLoadingDetails(false)\r\n                    props.history.push('/home')\r\n                }else{\r\n                    setInBalance(response.data.inBalance)\r\n                    setParent(response.data.parentId)\r\n                    setDataRoom(response.data.data)  \r\n                    setLoadingDetails(false)\r\n                }\r\n            \r\n            }catch(error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            }\r\n        }\r\n\r\n        if(csrfToken){\r\n            searchRoom()\r\n        }\r\n\r\n    },[userName, salaId, countUserData, props.history, csrfToken])\r\n\r\n    \r\n    if(!dataRoom || loadingChildsData){\r\n        return <div className='loading-room'>\r\n            <div className=\"spinner-border spiner-room text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    }\r\n    \r\n    return (\r\n        <div className='room'>\r\n            <div>\r\n                <div className='arbol-container'>\r\n                    <Tree loading={loadingChildsData} userName={userName} salaName={dataRoom.name} price={dataRoom.price} salaId={dataRoom._id} arbolData={arbolData} />\r\n                </div>\r\n            </div>    \r\n            <div>\r\n                <RomDetails loading={loadingDetails} usdBtc={usdBtc} count={count} url={url} parent={parent} inBalance={inBalance} dataRoom={dataRoom} arbolData={arbolData} salaId={salaId}  />\r\n            </div>    \r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react'\r\nimport { url } from '../urlServer'\r\nimport { Context } from '../context'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const useChildsData = (salaId, userName) => {\r\n\r\n    const [arbolData, setArbolData] = useState([])\r\n    const { csrfToken } = useContext(Context)\r\n    const [loadingChildsData, setLoadingChildsData] = useState(true)\r\n            \r\n    useEffect(()=>{\r\n\r\n        if(userName && csrfToken){\r\n            setLoadingChildsData(true)\r\n    \r\n            async function childsData(){\r\n    \r\n                const response = await axios({\r\n                    method: 'post',\r\n                    url: `${url}/api/in-sala?id=${salaId}`,\r\n                    headers: { \r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })       \r\n                \r\n                const data = await response.data\r\n\r\n                if(data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: data.error,\r\n                    })\r\n                }\r\n    \r\n                await setArbolData(data)\r\n    \r\n                setLoadingChildsData(false)\r\n    \r\n            }  \r\n            childsData()\r\n        }\r\n    },[salaId, userName, csrfToken])\r\n\r\n    return {arbolData, loadingChildsData}\r\n\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport { Context } from '../../context'\r\nimport { MdRefresh } from 'react-icons/md'\r\nimport '../Styles/EmailVerificationModal.css'\r\n\r\nconst EmailVerificationModal2 = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { toggleAuth, csrfToken } = useContext(Context)\r\n\r\n    const code = useFormValues()\r\n\r\n    async function onConfirm(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email, code: code.value},\r\n            method: 'post',\r\n            url: url+'/api/mailverification',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                toggleAuth(res.data.userName)\r\n                props.props.history.push(`/home`)\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    function handleRefresh(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            data: {email: props.email},\r\n            method: 'post',\r\n            url: url+'/api/mailverificationRefresh',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(props.refresh === 1){ handleRefresh() }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[props.refresh])\r\n\r\n    \r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div className='emailVerification'>\r\n\r\n            <h4>Enter the six-digit code sent to your email.</h4>\r\n            \r\n            <form onSubmit={onConfirm} className='input-verificationemail'> \r\n                <input maxLength='6' className='join-input' {...code} type=\"text\" placeholder='Code'/>\r\n                <button> Confirm </button>\r\n            </form>\r\n\r\n            <label>If you have not received any email or want to resend, press the retry button</label>\r\n            <button onClick={handleRefresh} disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}><MdRefresh />Retry</p>\r\n            </button>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default EmailVerificationModal2","import React, { useState, useContext } from 'react'\r\nimport Modal from './Modal'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { Context } from '../../context'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nconst ForgotPasswordModal = props => {\r\n    \r\n    const [ loading, setLoading ] = useState(false) \r\n    const [ count, setCount ] = useState(0)\r\n    const { csrfToken } = useContext(Context)\r\n    const email = useFormValues()\r\n\r\n    async function handleForgotPassword(e){\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            data: { email: email.value },\r\n            url: url+'/api/forgotpassword',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setCount(count + 1)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div>\r\n            <h4>Forgot password?</h4>\r\n            <form onSubmit={handleForgotPassword}>\r\n                <p>Write your access email and you will receive a password recovery link in the email.</p>\r\n                <input required className='join-input forgotModalInput' {...email} placeholder='Email' type='email'/>\r\n                <button disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                    <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p  className={loading ? 'dNone' : ''}>{count > 0 ? 'Retry' : 'Send'}</p>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default ForgotPasswordModal","import React, { useState, useContext } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport logo from '../Images/logo.svg'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { Context } from '../context'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { url } from '../urlServer'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport axios from 'axios'\r\nimport './Styles/NavbarLogin.css'\r\nimport EmailVerificationModal2 from './Modals/EmailVerificationModal2'\r\nimport ForgotPasswordModal from './Modals/ForgotPasswordModal'\r\n\r\n const NavbarLogin = (props) => {\r\n\r\n    const params = new URLSearchParams(window.location.search)\r\n    const salaParams = params.get('add')\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [check, setCheck] = useState(false)\r\n    const [refresh, setRefresh] = useState(0)\r\n    const [type, setType] = useState('password')\r\n    const [modal2Open, setModal2Open] = useState(false)\r\n    const { csrfToken } = useContext(Context)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n\r\n    function handleCheck(){\r\n        if(check){\r\n            setCheck(false)\r\n            setType('password')\r\n        }else{\r\n            setCheck(true)\r\n            setType('text')\r\n        }\r\n    }\r\n\r\n    const email = useFormValues()\r\n    const password = useFormValues()\r\n\r\n    const form = {\r\n        email: email.value,\r\n        password: password.value\r\n    }\r\n\r\n    const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        setLoginLoading(true)\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/users/signin',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoginLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data.isVerified === false){\r\n                setModalOpen(true)\r\n                setRefresh(refresh + 1)\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                if(salaParams){ \r\n                    props.toggleAuth(res.data.userName)\r\n                    props.history.push(`/home?add=${salaParams}`)\r\n                }else{ \r\n                    props.toggleAuth(res.data.userName)\r\n                    props.history.push(`/home`)\r\n                }\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setLoginLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar-arbol-login\">\r\n            <div className='wrap-1100'>\r\n            <Link className=\"logo\" to=\"/\"><img className='login-logo1' src={logo} alt='logo-img' /><img className='login-logo2' src={logoletra} alt=\"logoletra\"/></Link>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group login-inputs\">\r\n                    <input required autoComplete=\"on\" type=\"email\" className='form-control' {...email} placeholder='Email'/>\r\n                </div>\r\n                <div className=\"form-group login-inputs\">\r\n                    <input required autoComplete='on' className=\"form-control\" type={type} {...password} placeholder=\"Password\"/>\r\n                    <div className='checkLogin'>\r\n                        <input checked={check} onChange={handleCheck} className=\"\" type=\"checkbox\" /><span> Show password</span>\r\n                    </div>\r\n                    <label className='forgotPassworLogin' onClick={()=>setModal2Open(true)}>Forgot password?</label>\r\n                </div>\r\n                <button disabled={loginLoading ? true : false} type='submit' className=\"login-button\">\r\n                    <div className={loginLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                <p className={loginLoading ? 'dNone' : 'p-nav-login'}>Log in</p>\r\n                </button>\r\n            </form>\r\n            <EmailVerificationModal2 refresh={refresh} props={props} email={email.value} isOpen={modalOpen} onClose={onCloseModal}/>\r\n            <ForgotPasswordModal isOpen={modal2Open} onClose={onClose2Modal}/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavbarLogin)","export default __webpack_public_path__ + \"static/media/bigLogo.a414eaaf.svg\";","import React, { useState, useContext } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport { MdRefresh } from 'react-icons/md'\r\nimport '../Styles/EmailVerificationModal.css'\r\n\r\nconst EmailVerificationModal = props => {\r\n    \r\n    const { toggleAuth, csrfToken } = useContext(Context)\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const code = useFormValues()\r\n\r\n    async function onConfirm(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email, code: code.value},\r\n            method: 'post',\r\n            url: url+'/api/mailverification',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                toggleAuth(res.data.userName)\r\n                props.props.history.push(`/home`)\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n    \r\n    async function handleRefresh(){\r\n        \r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email},\r\n            method: 'post',\r\n            url: url+'/api/mailverificationRefresh'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div className='emailVerification'>\r\n            <h4>Enter the six-digit code sent to your email.</h4>\r\n            \r\n            <form onSubmit={onConfirm} className='input-verificationemail'> \r\n                <input required={true} maxLength='6' className='join-input' {...code} type=\"text\" placeholder='Code'/>\r\n                <button> Confirm </button>\r\n            </form>\r\n\r\n            <label>If you have not received your code, press resend</label>\r\n            <label>The code expires in 5 minutes</label>\r\n            <button onClick={handleRefresh} disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}><MdRefresh /> Resend </p>\r\n            </button>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default EmailVerificationModal","import React, { useContext, useRef, useState } from 'react'\r\nimport { MdInfo, MdLockOutline, MdMail } from \"react-icons/md\"\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport { Helmet } from 'react-helmet'\r\nimport NavbarLogin from '../Components/NavbarLogin'\r\nimport HCaptcha from '@hcaptcha/react-hcaptcha';\r\nimport { Context } from '../context'\r\nimport axios from 'axios'\r\nimport IMG from '../Images/bigLogo.svg'\r\nimport './Styles/Signup.css'\r\nimport Cookies from 'js-cookie'\r\nimport EmailVerificationModal from '../Components/Modals/EmailVerificationModal';\r\n\r\nexport const Signup = (props) => {\r\n\r\n    const conected = Cookies.get('conected')\r\n\r\n    const sitekey = '0c5fbce3-bbe4-4510-8a92-7b2b439f5e4d'\r\n    console.log(sitekey)\r\n    const params = new URLSearchParams(window.location.search)\r\n    const salaParams = params.get('add')\r\n\r\n    if(conected){\r\n        if(salaParams){\r\n            props.history.push(`/home?add=${salaParams}`)\r\n        }else{ props.history.push(`/home`) }\r\n    }\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const { toggleAuth, csrfToken } = useContext(Context)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const [tokenCaptcha, setTokenCaptcha] = useState('')\r\n    const captcha = useRef()\r\n\r\n    const userName = useFormValues()\r\n    const email = useFormValues()\r\n    const email2 = useFormValues()\r\n    const password = useFormValues()\r\n    const confirm_password = useFormValues()\r\n\r\n    const form = {\r\n        userName: `@${userName.value}`,\r\n        email: email.value,\r\n        password: password.value,\r\n        token: tokenCaptcha,\r\n        confirm_password: confirm_password.value,\r\n    }\r\n\r\n    const [validEmail, setValidEmail] = useState(true)\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    const [userValid, setUserValid] = useState(true)\r\n\r\n    const [signupLoading, setSignupLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        if(userName.value.length < 4 || userName.value.length > 16){return setUserValid(false)}else{setUserValid(true)}\r\n        if(email2.value === email.value){ setValidEmail(true)}else{ return setValidEmail(false)}\r\n        if(reg_whiteSpace.test(userName.value)){return setUserValid(false)}else{setUserValid(true)}\r\n        if(!reg_password.test(password.value)){return setPassword_valid(false)}else{setPassword_valid(true)}\r\n\r\n        setSignupLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/users/signup',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setSignupLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                setModalOpen(true)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setSignupLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    return <div>   \r\n\r\n        <Helmet> <title>2wanted | Log In or Sign Up</title> </Helmet>\r\n\r\n        <NavbarLogin toggleAuth={toggleAuth} invitation={salaParams} />\r\n\r\n        <div className='signup-container'>\r\n            <div className='wrap-1100'>\r\n            <div className='signup-left'>\r\n\r\n                <img className='logo-signup-p' src={IMG} alt=\"\"/>\r\n\r\n            </div>\r\n\r\n             <div className='signup-right'>\r\n                <div className='card-signup'>\r\n                            <h3 className=\"text-center text-white card-header pl-4\">\r\n                                Create user\r\n                            </h3>\r\n                            <div className=\"card-body form-body\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\">@</div>\r\n                                            </div>\r\n                                            <input type=\"text\" className='form-control' {...userName} placeholder='Username' required/>\r\n                                        </div>\r\n                                        <label className={!userValid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Minimum 8 characters without spaces, upper and lower case</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdMail /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"email\" className='form-control' {...email} placeholder='Email' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdMail /></div>\r\n                                            </div>\r\n                                            <input type=\"text\" className='form-control' {...email2} placeholder='Repeat Email' required/>\r\n                                        </div>\r\n                                        <label className={!validEmail ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Emails do not match</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\"  className='form-control' {...password} placeholder='Password' required/>\r\n                                        </div>\r\n                                        <label className={!password_valid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Minimum 8 characters without spaces, upper and lower case</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                    <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\" suggested=\"new-password\" className='form-control' {...confirm_password} placeholder='Confirm Password' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs text-center\">\r\n                                    <HCaptcha\r\n                                        ref={captcha}\r\n                                        sitekey={sitekey}\r\n                                        onVerify={(token) => setTokenCaptcha(token)}\r\n                                        onExpire={() => setTokenCaptcha(\"\")}\r\n                                        size='compact'\r\n                                    />\r\n                                    </div>\r\n                                    <button disabled={signupLoading ? true : false} type='submit' className='button-signup'>\r\n                                        <div className={signupLoading ? \"spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={signupLoading ? 'dNone' : ''}>Create user</p>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n        </div>    \r\n        <EmailVerificationModal props={props} email={email.value} isOpen={modalOpen} onClose={onCloseModal} />\r\n    </div>\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/Signin.css'\r\n\r\nexport const Signin = (props) => {\r\n\r\n    const { toggleAdminAuth, csrfToken } = useContext(Context)\r\n\r\n    const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n    const id = useFormValues()\r\n    const password = useFormValues()\r\n    const password2 = useFormValues()\r\n\r\n    const form = {\r\n        id: id.value,\r\n        password: password.value,\r\n        password2: password2.value\r\n    }\r\n\r\n    function handleSubmit( e ){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoginLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/admin/signin',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            if(res.data.error){\r\n                setLoginLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setLoginLoading(false)\r\n                toggleAdminAuth()\r\n                props.history.push(`/adminHome`)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setLoginLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <div className='signin'>\r\n        <form onSubmit={handleSubmit}>\r\n            <input { ...id } type=\"text\" placeholder='ID'/>\r\n            <input { ...password } type=\"password\" placeholder='PASSWORD'/>\r\n            <input { ...password2 } type=\"password\" placeholder='REPEAT PASSWORD'/>\r\n            <button>{loginLoading ? 'CARGANDO......' : 'Entrar'}</button>\r\n        </form>\r\n    </div>\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { Context } from '../context'\r\nimport { RiArrowDownSLine } from \"react-icons/ri\"\r\nimport { MdChromeReaderMode } from \"react-icons/md\"\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport './Styles/Balance.css'\r\nimport { url } from '../urlServer'\r\n\r\nexport const Balance = () => {\r\n\r\n    const { userData, csrfToken } = useContext(Context)\r\n\r\n    const [valueFecha1, setValueFecha1] = useState('') \r\n    const [valueFecha2, setValueFecha2] = useState('') \r\n\r\n    const [viewDates, setViewDates] = useState(false)\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    \r\n    const [ balance, setBalance ] = useState([])\r\n\r\n    const [countPages, setCountPages] = useState(1)\r\n    \r\n    const [totalPages, setTotalPages] = useState(1)\r\n    \r\n    const [countLastestPages, setCountLastestPages] = useState(1)\r\n\r\n    useEffect(() => { \r\n        \r\n        if(csrfToken){\r\n\r\n            setLoading(true)\r\n                \r\n            axios({\r\n                method: 'post',\r\n                data: {page: countPages},\r\n                url: url+'/api/userbalance',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setLoading(false)\r\n                if(res.data.error) {\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setTotalPages(res.data.totalPages)\r\n                    setBalance(res.data.data)\r\n                }\r\n            }).catch( err => {\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [countLastestPages, csrfToken])\r\n\r\n    const [activeDate, setActiveDate] = useState(false)\r\n\r\n    function handleDate(e){\r\n\r\n        if(e){\r\n            e.preventDefault()\r\n        }\r\n\r\n        setLoading(true)\r\n        \r\n        const splitDate = valueFecha1.split('-')\r\n\r\n        const fechaInicial = new Date(splitDate[0], splitDate[1]-1, splitDate[2])\r\n\r\n        const splitDate2 = valueFecha2.split('-')\r\n\r\n        const fechaFinal = new Date(splitDate2[0], splitDate2[1]-1, splitDate2[2], 24, 0, 0)\r\n\r\n        if(!activeDate) {\r\n            setCountPages(1)\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { getFechaInicial: fechaInicial, getFechaFinal: fechaFinal, page: countPages},\r\n            url: url+'/api/userbalance',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setActiveDate(true)\r\n            setBalance(res.data.data)\r\n            setTotalPages(res.data.totalPages)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const wallet = userData.wallet ? userData.wallet.toString().slice(0,9) : 0\r\n\r\n    return <div className='balance-container'>\r\n\r\n        <div className='balance-title'>\r\n            <h3><MdChromeReaderMode />Balance History</h3>\r\n        </div>\r\n        <form className='date-form' onSubmit={handleDate}>\r\n            <div className='wallet-balance'>\r\n                <label>Wallet:</label><span>{wallet} BTC</span>\r\n            </div>\r\n            <p onClick={()=>setViewDates(!viewDates)}>Search by date</p>\r\n            <div onClick={()=>setViewDates(!viewDates)} className='flecha-busqueda-balance'>< RiArrowDownSLine /></div>\r\n            <p className={viewDates ? '' : 'none-balance'}>From </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha1(e.target.value)}/>\r\n            <p className={viewDates ? '' : 'none-balance'}>To </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha2(e.target.value)}/>\r\n            <button className={viewDates ? '' : 'none-balance'}>Search</button>\r\n        </form>\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n        {\r\n            loading ? <div>\r\n                <div className=\"spinner-balance spinner-border text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            </div> :\r\n            balance.length <= 0 ? <div>\r\n                <h3 className='no-events-balance'>Empty</h3>\r\n            </div> :\r\n            <div className='balance-list'>       \r\n            {\r\n                balance.map((balance)=> {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${ new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Won in room:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)} BTC</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ {balance.won.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Room payment:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)} BTC</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- {balance.salaPrice}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'deposit' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Deposit:</p>\r\n                                <p>{balance.depositAmount.toString().slice(0,9)}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)} BTC</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ {balance.depositAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawToUser' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Withdraw:</p>\r\n                                <p>{balance.withdrawAmount.toString().slice(0,9)}</p>\r\n                                <p className='balance-description-title'>To user:</p>\r\n                                <p>{balance.toUser}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)} BTC</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- {balance.withdrawAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawBtc' && <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Withdraw:</p>\r\n                                <p>{balance.withdrawAmount.toString().slice(0,9)} + Fee</p>\r\n                                <p className='balance-description-title'>Fee:</p>\r\n                                <p>{balance.fee}</p>\r\n                                <p className='balance-description-title'>To Address:</p>\r\n                                <p>{balance.toAddress}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)} BTC</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- {balance.totalAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li>\r\n                    )   \r\n                })\r\n            }\r\n            </div>\r\n        }\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance-down'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nexport const UsersInSalas = (props) => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const user = props.match.params.user\r\n    const sala = props.match.params.sala\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    const [ totalPages, setTotalPages ] = useState(1)\r\n    const [ actualPage, setActualPage ] = useState(1)\r\n    const [list, setList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        \r\n        setList([])\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { user, sala, page: actualPage },\r\n            url: url+'/api/admin/BalanceUserInSala',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setList(res.data.list)\r\n                setTotalPages(res.data.totalPages)\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }, [ user, sala, actualPage, csrfToken])\r\n\r\n    return <div className='balance-container'>\r\n        <div className='section-title'>\r\n            <h1>Historial de Usuario</h1>\r\n        </div>\r\n        <div className='container-paginations-buttons'>\r\n            <button onClick={()=>setActualPage(actualPage - 1)} disabled={actualPage === 1 ? true : false}>🢀</button>\r\n                <p>{actualPage} </p><p>&nbsp;&nbsp;-&nbsp;&nbsp;</p><p> {totalPages}</p>\r\n            <button onClick={()=>setActualPage(actualPage + 1)} disabled={actualPage === totalPages ? true : false}>🢂</button>\r\n            <div className={loading ? 'CARGANDO_P' : 'dNone'}>CARGANDO.......</div>\r\n        </div>\r\n        <div className='historyCards-container'>\r\n            {\r\n                list.map( balance => {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Recibido en sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p className='balance-won-amount'>+ ${balance.won.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' && <li key={balance._id} >\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Compra de sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>- ${balance.salaPrice.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/help_Create.6b7511fe.png\";","export default __webpack_public_path__ + \"static/media/invitation.63541d44.png\";","export default __webpack_public_path__ + \"static/media/invitation_modal.19e6345b.png\";","export default __webpack_public_path__ + \"static/media/searchRoom.04d1fd99.png\";","export default __webpack_public_path__ + \"static/media/searchRoom_modal.e5ed9a27.png\";","export default __webpack_public_path__ + \"static/media/help_listRooms.bcf9cc2f.png\";","export default __webpack_public_path__ + \"static/media/room1.137414b5.png\";","export default __webpack_public_path__ + \"static/media/room2.823b890e.png\";","export default __webpack_public_path__ + \"static/media/room3.61290cc0.png\";","export default __webpack_public_path__ + \"static/media/room4.4f5ca05f.png\";","export default __webpack_public_path__ + \"static/media/room5.9c8ea450.png\";","export default __webpack_public_path__ + \"static/media/room6.31933602.png\";","export default __webpack_public_path__ + \"static/media/room7.df5da44d.png\";","export default __webpack_public_path__ + \"static/media/depositImg.0ad7da31.png\";","export default __webpack_public_path__ + \"static/media/lateralMenu.4b081f24.png\";","export default __webpack_public_path__ + \"static/media/help_withdraw.f77ba4d8.png\";","export default __webpack_public_path__ + \"static/media/help_sendToUser.eb225397.png\";","import React from 'react'\r\n\r\nimport createImg from '../Images/help_Create.png'\r\nimport invitatonImg from '../Images/invitation.png'\r\nimport invitationModalImg from '../Images/invitation_modal.png'\r\nimport searchImg from '../Images/searchRoom.png'\r\nimport searchModalImg from '../Images/searchRoom_modal.png'\r\nimport help_listRooms from '../Images/help_listRooms.png'\r\nimport room1 from '../Images/room1.png'\r\nimport room2 from '../Images/room2.png'\r\nimport room3 from '../Images/room3.png'\r\nimport room4 from '../Images/room4.png'\r\nimport room5 from '../Images/room5.png'\r\nimport room6 from '../Images/room6.png'\r\nimport room7 from '../Images/room7.png'\r\nimport depositImg from '../Images/depositImg.png'\r\nimport lateralMenu from '../Images/lateralMenu.png'\r\nimport help_withdraw from '../Images/help_withdraw.png'\r\nimport help_sendToUser from '../Images/help_sendToUser.png'\r\n\r\nimport './Styles/Help.css'\r\n\r\nexport const Help = () => {\r\n    return <div className='balance-container'>\r\n            <h1 className='help_h1'>Instructions</h1>\r\n            <div>\r\n                <p>\r\n                To begin the algorithm of 2wanted,  first:  you need to enter a “room”, in which you create from the start in the option “Create Room”. In the main menu, add a unique name for the value of 0.00005 BTC with a previously loaded wallet.   \r\n                    <a className='help_a' href='#walletInstruction'> Click Here for instructions on the deposit and the withdraw from the wallet.</a>\r\n                </p>\r\n                <div className='help_imgContainer'> <img className='help_create' src={createImg} alt=\"create\"/> </div>\r\n                <p>You can also join a “room” with an invitation received from the tab of notifications for users that are participating in a room already. </p>\r\n                <div className='help_imgContainer'>\r\n                    <img className='help_img help_medium' src={invitatonImg} alt=\"\"/>\r\n                    <img className='help_img help_medium' src={invitationModalImg} alt=\"\"/>\r\n                </div>\r\n                <p>or you can enter a room previously existent through another. Taking into consideration that the room  is created public, you can  search for the name which will consider to specify the person created. The, enter through this method if you are going to enter like a user apart of the room. Or if you desire benefit a random user from the room.</p>\r\n                <div className='help_imgContainer '>\r\n                    <img className='help_img help_medium' src={searchImg} alt=\"\"/>\r\n                    <img className='help_img help_medium' src={searchModalImg} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Through any method of entrance to a room you will have to pay the cost of value stipulated in it, which represents the only version  in which it will preform to win. <br></br><br></br>\r\n                    After having entered in a room correctly, you can now visualize from the list of room active and enter to see you state.\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <img className='help_listRoom' src={help_listRooms} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Once have entered the room, the objective will be to complete a structure of pyramidal limited with 4 levels. When you begin, you will always be the user that is ahead the pyramidal.The users active will represent with lighted yellow circles. The idea is to get to the third and fourth level, now that for each user active in the third level the pay will have a value of the 50% in that room. For every user active in the fourth level the pay will have a value of the 25% of that room. With only two users in the third level, there will be the recompenastion of the investment and it will add up to the 100%. The rest of the users will be a profit: having said that, users involved will have the option to win by doing the same as it will be shown in the continuing dynamic of profits. <br></br><br></br>\r\n                    When begining, the user 1, will have the room empty like it is shown in the image, only having them being the only participants in the top.\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <img src={room1} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    To  begin to fill the room, invite user2 by clicking the + and writing the name of the user that you desire to invite. This user will receive an invitation in the tab of notifications to join. Then, they will have to pay the import of cost of the room: then join. This is how it will look:\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <h4 className='img-h4'>View from user1</h4>\r\n                    <img className='help_img' src={room2} alt=\"\"/>\r\n                    <h4 className='img-h4'>View from user2</h4>\r\n                    <img className='help_img' src={room3} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Note that the user2 invite, will begin alone from the top to obtain as will a profit which will complete the process. But, from user1 already has its first member. When the user2 invites a new user, for example user3, it will look as shown in the images down below:\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <h4 className='img-h4'>View from user1</h4>\r\n                    <img className='help_img' src={room4} alt=\"\"/>\r\n                    <h4 className='img-h4'>View from user2</h4>\r\n                    <img className='help_img' src={room5} alt=\"\"/>\r\n                </div>\r\n                <div className='help_imgContainer'>\r\n                    <h4>View from user3</h4>\r\n                    <img src={room6} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    After viewing the examples of the images: the objective is to look for two users that are interested in winning. They will do there job to refill the room in a way that you can begin to will in the third level. If every user does there job to look for two users for there room then this one will fill up on its own. If not, there is an option to fill it up on your own, by inviting all the users that you can to win. Meanwhile, you help them fill there rooms up.  <br></br><br></br>\r\n                </p>\r\n                <h5>Example of room with users in the third and fourth level:</h5>\r\n                <div className='help_imgContainer'>\r\n                    <img src={room7} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    In this room, with the value of example 1BTC  you can observe that it has 3 users in the third level and two in the fourth level. Each user in the third line produces 50% of the value in the room of profits. Now that the value in the room is 1BTC. Each one is producing, 0.5BTC the three current users in the third level will save up 1.5BTC. The users in the fourth level will produce a 25% value in the room for each one. The two current users in the fourth level will be producing 0.25BTC each. Adding up to, 0.5BTC en the fourth line. Adding up everything produced currently for every third and fourth level; it will be generating 2 BTC of profit. Thus, in one room the only investment was of 1BTC and there will still be numerous spots remaining to fill.   <br></br><br></br>\r\n                    One room full of  2wanted returns a 800% of value, of the investment. In the table to the right, you can see the details of the profit and information of the room. As well as, the take away of the profits from the wallet at any moment. After have filled the room, this one will desapear from your currently active room. You can create and join any room  at the same time: taking advantage of this algorithm positioned for you. <br></br><br></br>\r\n                </p>\r\n            </div>\r\n            <div id='walletInstruction'>\r\n                <h1 className='help_h1'>Wallet Deposit and Withdrawal Instructions </h1><br></br>\r\n                <div>\r\n                    <h4>How To Deposit BTC in the Wallet of 2Wanted</h4>\r\n                    <p>\r\n                        The Bitcoin is the coin in which we manage all the deposits, withdraws and transfers between the users.  <br></br><br></br>\r\n                        To deposit money into 2wanted you need to send Bitcoin (BTC) from an external wallet towards the your wallet in 2wanted. <br></br><br></br>\r\n                        In the right side menu click on the option deposit. In which it will displace a window with a direction signed to your account of user. The code QP is with what you will be able to deposit to your wallet in 2wanted.  \r\n                    </p>\r\n                    <div className='help_imgContainer'>\r\n                        <img className='help_img help_medium' src={lateralMenu} alt=\"\"/>\r\n                        <img className='help_img help_medium' src={depositImg} alt=\"\"/>\r\n                    </div>\r\n                    <p>\r\n                        The time of verification to the transfers of the external wallets en BTC to your account in 2wanted depend on various factors. View the following link:  <a className='help_a' href='https://es.cointelegraph.com/explained/how-long-does-a-cryptocurrency-transaction-take' rel='noreferrer' target='_blank'>https://es.cointelegraph.com/explained/how-long-does-a-cryptocurrency-transaction-take</a><br></br><br></br>\r\n                    </p>\r\n                    <h4>How to Remove BTC from Wallet of 2Wanted towards the External Wallets </h4>\r\n                    <p>\r\n                        In the right side menu click on the option Withdraw which will them displace a format in which you need to write in the direction that will receive the withdraw the amount. In this way, you will have information automatically from the fee of discount: and the total that the wallet will receive.\r\n                    </p>\r\n                    <div className='help_imgContainer'>\r\n                        <img className='help_img help_medium' src={lateralMenu} alt=\"\"/>\r\n                        <img className='help_img help_medium' src={help_withdraw} alt=\"\"/>\r\n                    </div>\r\n                    <h4>Transfer BTC between users of 2Wanted (Free with no commissions)</h4>\r\n                    <p>\r\n                        In the right side menu click on the option “Send BTC to 2Wanted User (free)”. At this time this will displace a format where you should write the name of the user, the amount. Then, click on send. <br></br>\r\n                        The transfers between the users are free.\r\n                    </p>\r\n                    <div className='help_imgContainer'>\r\n                        <img className='help_img help_medium' src={lateralMenu} alt=\"\"/>\r\n                        <img className='help_img help_medium' src={help_sendToUser} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n}","import React, { useContext, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Context } from '../context' \r\nimport { MdMail } from \"react-icons/md\"\r\nimport { url } from '../urlServer'\r\nimport './Styles/Contact_us.css'\r\n\r\nexport const Contact_us = () => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n\r\n    const asunto = useFormValues()\r\n    const emailPersonalized = useFormValues()\r\n\r\n    const data = {\r\n        asunto: asunto.value,\r\n        msg: emailPersonalized.value\r\n    }\r\n\r\n    function handleSubmit(e){\r\n\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: data,\r\n            url: url+'/api/contact_us_email',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return<div className='balance-container'>\r\n            <h1 className='text-center'>Contact us</h1>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='contact_text'>\r\n                    <p>Send a request and it will be answered as soon as possible to your email</p>\r\n                    <p>Or send email to our email &nbsp; <MdMail /> support@2wanted.com</p>\r\n                </div>\r\n                <div>\r\n                    <input className='contact_asunto' required {...asunto} type=\"text\" placeholder='Asunto'/>\r\n                    <textarea className='contact_msg' required {...emailPersonalized} placeholder='Mensaje'/>\r\n                </div>\r\n                <button disabled={loading ? true : false} className='contact_send'>\r\n                    <div className={loading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={loading ? 'dNone' : ''}>Send</p>\r\n                </button>\r\n            </form>\r\n        \r\n        </div>\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/HistoryUsers.css'\r\n\r\nexport const HistoryUsers = (props) => {\r\n    \r\n    const user = props.match.params.user\r\n\r\n    const { csrfToken } = useContext(Context)\r\n    \r\n    const [ modeList, setModeList ] = useState('normal')\r\n\r\n    const [ responseList, setResponseList ] = useState([])\r\n    const [ totalPages, setTotalPages ] = useState(1)\r\n    const [ actualPage, setActualPage ] = useState(1)\r\n    const [ listLoading, setListLoading ] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(!csrfToken){ return }\r\n\r\n        setResponseList([])\r\n        setListLoading(true)\r\n\r\n        if(modeList === 'normal'){\r\n            if(props.match.params.fecha1 && props.match.params.fecha2){\r\n    \r\n                const inicialDate = props.match.params.fecha1\r\n                const finalDate = props.match.params.fecha2\r\n                \r\n                const splitDate = inicialDate.split('-')\r\n            \r\n                const fechaInicio = new Date(splitDate[0], splitDate[1]-1, splitDate[2])\r\n                    \r\n                const splitDate2 = finalDate.split('-')\r\n                \r\n                const fechaFinal = new Date(splitDate2[0], splitDate2[1]-1, splitDate2[2], 24, 0, 0)\r\n    \r\n                axios({\r\n                    method: 'post',\r\n                    data: { getFechaInicial: fechaInicio, getFechaFinal: fechaFinal, user: user, page: actualPage },\r\n                    url: url+'/api/admin/userhistorialbalance',\r\n                    headers: {\r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    if(res.data.error) {\r\n                        setListLoading(false)\r\n                        return Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: res.data.error,\r\n                        })\r\n                    }else{\r\n                        setResponseList(res.data.data)\r\n                        setTotalPages(res.data.totalPages)\r\n                        setListLoading(false)\r\n                    }\r\n                }).catch( err => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: err,\r\n                    })\r\n                    setListLoading(false)\r\n                })\r\n                \r\n            }else if(modeList === 'normal'){\r\n    \r\n                axios({\r\n                    method: 'post',\r\n                    data: { user: user, page: actualPage },\r\n                    url: url+'/api/admin/userhistorialbalance',\r\n                    headers: {\r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    if(res.data.error) {\r\n                        setListLoading(false)\r\n                        return Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: res.data.error,\r\n                        })\r\n                    }else{\r\n                        setResponseList(res.data.data)\r\n                        setTotalPages(res.data.totalPages)\r\n                        setListLoading(false)\r\n                    }\r\n                }).catch( err => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: err,\r\n                    })\r\n                    setListLoading(false)\r\n                })\r\n            }\r\n        }else if(modeList === 'deposit'){\r\n            axios({\r\n                method: 'post',\r\n                data: { user: user, page: actualPage },\r\n                url: url+'/api/admin/depositUsersList',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setResponseList(res.data.list)\r\n                setListLoading(false)\r\n            }).catch( err => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n                setListLoading(false)\r\n            })\r\n        }else if(modeList === 'withdraw'){\r\n            axios({\r\n                method: 'post',\r\n                data: { user: user, page: actualPage },\r\n                url: url+'/api/admin/withdrawUsersList',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setResponseList(res.data.list)\r\n                setListLoading(false)\r\n            }).catch( err => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n                setListLoading(false)\r\n            })\r\n        }\r\n\r\n    },[user, props.match.params.fecha1, props.match.params.fecha2, actualPage, modeList, csrfToken])\r\n\r\n    function handleDeposits(){\r\n        setActualPage(1)\r\n        setModeList('deposit')\r\n    }\r\n\r\n    function handleWithdraws(){\r\n        setActualPage(1)\r\n        setModeList('withdraw')\r\n    }\r\n\r\n    function onCancelWithdraw(signature){\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: {id: signature},\r\n            url: url+'/api/cancelWithdraw',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch( err => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    function onTxId(id){\r\n        axios({\r\n            method: 'post',\r\n            data: {id: id},\r\n            url: url+'/api/transactiondetail',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'TxId',\r\n                    text: res.data.msg\r\n                })\r\n            }\r\n        }).catch( err => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n    \r\n    return <div className='balance-container'>\r\n        <div className='section-title'>\r\n            <h1>Historial de Usuario</h1>\r\n        </div>\r\n        <div className={props.match.params.fecha1 ? 'section-title' : 'dNone'}>\r\n            {\r\n                <h2>Desde {props.match.params.fecha1} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hasta {props.match.params.fecha2}</h2>\r\n            }\r\n        </div>\r\n        <div className='historyUsers-buttonsTop'>\r\n            <button onClick={handleDeposits} className='historyUsers-buttonTop'>Buscar Depositos</button>\r\n            <button onClick={handleWithdraws} className='historyUsers-buttonTop'>Buscar Retiros</button>\r\n        </div>\r\n        <div className='container-paginations-buttons'>\r\n            <button onClick={()=>setActualPage(actualPage - 1)} disabled={actualPage === 1 ? true : false}>🢀</button>\r\n                <p>{actualPage} </p><p>&nbsp;&nbsp;-&nbsp;&nbsp;</p><p> {totalPages}</p>\r\n            <button onClick={()=>setActualPage(actualPage + 1)} disabled={actualPage === totalPages ? true : false}>🢂</button>\r\n            <div className={listLoading ? 'CARGANDO_P' : 'dNone'}>CARGANDO.........</div>    \r\n        </div>\r\n        <div className='historyCards-container'>\r\n            {\r\n                responseList.map( balance => {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Recibido en sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p className='balance-won-amount'>+ ${balance.won.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' ? <li key={balance._id} >\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Compra de sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>- ${balance.salaPrice.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'deposit' ? <li key={balance._id} >\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <p className='balance-description-title'>Deposito</p>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+${balance.depositAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawBtc' ? <li key={balance._id} >\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Retiro a direccion:</p>\r\n                                    <p>{balance.toAddress}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Fee:</p>\r\n                                    <p>{balance.fee}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>{balance.wallet}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+{balance.withdrawAmount.toString().slice(0,9)} + Fee</p>\r\n                            </div>\r\n                            <button onClick={()=>onCancelWithdraw(balance.signatureId)}>Cancelar</button>\r\n                            <button onClick={()=>onTxId(balance.signatureId)}>txId</button>\r\n                        </li> :\r\n                        balance.type === 'withdrawToUser' && <li key={balance._id}>\r\n                            <div className='balance-date-card-admin'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Retiro a usuario:</p>\r\n                                    <p>{balance.toUser}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Reference:</p>\r\n                                    <p>{balance.reference}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>{balance.wallet}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>-${balance.withdrawAmount}</p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}","import React, { useState, useContext } from 'react'\r\nimport './Styles/ChangePassword.css'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Context } from '../context'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../urlServer'\r\n\r\nexport const ChangePassword= props => {\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const forgotHash = props.match.params.token\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    const { csrfToken } = useContext(Context)\r\n    const password = useFormValues()\r\n    const confirmPassword = useFormValues()\r\n\r\n    async function handleChange(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        if(!reg_password.test(password.value)){\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'It must contain uppercase, lowercase and number, minimum 8 characters',\r\n            })\r\n        }\r\n        if(password.value === confirmPassword.value){\r\n            await axios({\r\n                data: {forgotHash, password: password.value, confirmPassword: confirmPassword.value },\r\n                method: 'post',\r\n                url: url+'/api/changeForgotPassword',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then(res => {\r\n                setLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success',\r\n                        text: res.data.msg,\r\n                    })\r\n                    props.history.push(`/`)\r\n                }\r\n            }).catch(err => {\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }else{\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Passwords do not match',\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div className='changePasswordEmail'>\r\n        <form onSubmit={handleChange}>\r\n            <h1>Change of password</h1>\r\n            <p>Enter new password</p>\r\n            <input  {...password} type=\"password\"/>\r\n            <p>Confirm new password</p>\r\n            <input  {...confirmPassword} type=\"password\"/>\r\n            <button disabled={loading ? true : false} className='btn btn-dark btn-block changepasswordemail-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}>Change</p>\r\n            </button>\r\n        </form>\r\n    </div>\r\n}","import React, { useState, useContext } from 'react'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { Context } from '../../context'\r\nimport { MdInfo, MdLockOutline } from \"react-icons/md\"\r\n\r\nconst UpdatePasswordForm = ({useFormValues, url}) => {\r\n    \r\n    const [newPasswordError, setNewPasswordError] = useState(false)\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    const [passwordLoading, setPasswordLoading] = useState(false)\r\n    const { csrfToken } = useContext(Context)\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const password = useFormValues()\r\n    const newPassword = useFormValues()\r\n    const confirmNewPassword = useFormValues()\r\n\r\n    function updatePassword(e){\r\n        e.preventDefault()  \r\n\r\n        if(!reg_password.test(newPassword.value)){\r\n            return setPassword_valid(false)\r\n         }else{setPassword_valid(true)}\r\n\r\n        if(newPassword.value === confirmNewPassword.value){\r\n\r\n            setPasswordLoading(true)\r\n\r\n            axios({\r\n                method: 'post',\r\n                data: { password: password.value, newPassword: newPassword.value },\r\n                url: url+'/edit/passwordemail',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then( res => {\r\n                setPasswordLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: res.data.msg,\r\n                    })\r\n                }\r\n            }).catch( error => {\r\n                setPasswordLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n        }else{return setNewPasswordError(true)}\r\n    }\r\n\r\n    return(\r\n        <div className='password-configuration'>\r\n            <h4><MdLockOutline />&nbsp;Change password</h4>\r\n            <form onSubmit={updatePassword}>\r\n                <input {...password} autoComplete='true' required type=\"password\" placeholder='Password'/>\r\n                <input {...newPassword} autoComplete='true' required type=\"password\" placeholder='New password'/>\r\n                <input {...confirmNewPassword} autoComplete='true' required type=\"password\" placeholder='Confirm new password'/>\r\n                <p className={newPasswordError ? 'configuration-warning' : 'dNone'}><MdInfo />the confirmation does not match</p>\r\n                <p className={!password_valid ? 'configuration-warning' : 'dNone'}><MdInfo />&nbsp;Minimum 8 characters without spaces, upper and lower case</p>\r\n                <button disabled={passwordLoading ? true : false}>\r\n                    <div className={passwordLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={passwordLoading ? 'dNone' : '' }> Update password </p>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePasswordForm","import React, { useState } from 'react'\r\nimport PasswordVerification from '../Modals/PasswordVerfication'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport { MdInfo, MdMail } from \"react-icons/md\"\r\n\r\nconst UpdateEmailForm = ({url, useFormValues}) => {\r\n\r\n    const [newEmailError, setNewEmailError] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const email = useFormValues()\r\n    const newEmail = useFormValues()\r\n    const confirmNewEmail = useFormValues()\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const data = { newEmail: newEmail.value, email: email.value }\r\n\r\n    function updateEmail(e){\r\n\r\n        e.preventDefault()\r\n\r\n        if(newEmail.value === confirmNewEmail.value){\r\n\r\n            setModalOpen(true)\r\n            \r\n        }else{return  setNewEmailError(true)}\r\n    }\r\n\r\n    return(\r\n        <div className='email-configuration'>\r\n            <h4><MdMail />&nbsp;Change Email</h4>\r\n            <form onSubmit={updateEmail}>\r\n                <input id='changeEmail' autoComplete='true' {...email} required type=\"email\" placeholder='Email'/>\r\n                <input {...newEmail} autoComplete='true' required type=\"email\" placeholder='New email'/>\r\n                <input {...confirmNewEmail} autoComplete='true' required type=\"email\" placeholder='Confirm new email'/>\r\n                <p className={newEmailError ? 'configuration-warning' : 'dNone'}><MdInfo />The confirmation does not match</p>\r\n                <button>\r\n                    <p>Update email</p>\r\n                </button>\r\n            </form>\r\n            <PasswordVerification isOpen={modalOpen} onClose2={onCloseModal} data={data} url={url+'/edit/passwordemail'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateEmailForm\r\n","import React, { useContext } from 'react'\r\nimport { IoMdSettings, IoIosContact } from 'react-icons/io'\r\nimport { Context } from '../context'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport './Styles/Profile.css'\r\nimport UpdatePasswordForm from '../Components/Forms/UpdatePasswordForm'\r\nimport UpdateEmailForm from '../Components/Forms/UpdateEmailForm'\r\n\r\nexport const Profile = () => {\r\n\r\n    const { userData } = useContext(Context)\r\n\r\n    if(!userData.date) {return 'Loading'}\r\n    \r\n    return  <div className='configurations-container'>\r\n                <div className='profile-title-container'>\r\n                    <h2 className='profile-title'><IoMdSettings />&nbsp;User configuration</h2>\r\n                </div>\r\n                <div className='configuration-wrap'>\r\n                    <div className='configuration-buttons'>\r\n                        <div className='configuration-button active'>Profile</div>\r\n                    </div>\r\n                    <div className='configuration-details'>\r\n                        <div className='perfil-configuration-container'>\r\n                            <div className='datos-configuration'>\r\n                                <div><IoIosContact size='50' />&nbsp; {userData.userName}</div>\r\n                                <h4>User data</h4>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Username: </p>\r\n                                    <p className='datos-description'>{userData.userName}</p>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Email: </p>\r\n                                    <p className='datos-description'>{userData.email}</p>\r\n                                    <a href=\"#changeEmail\">Edit...</a>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Created from: </p>\r\n                                    <p className='datos-description'>{`${new Date(userData.date).getDate()}/${new Date(userData.date).getMonth() + 1}/${new Date(userData.date).getFullYear()}`}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <UpdatePasswordForm url={url} useFormValues={useFormValues} />\r\n                            \r\n                            <UpdateEmailForm url={url} useFormValues={useFormValues} />\r\n\r\n                        </div>\r\n\r\n{/* -------------------------------------------------------------------------------------------------------------  */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n}","import React, { useContext } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Layout from './Components/Layout'\r\nimport { Blank } from './Components/Blank'\r\nimport { Home } from './Pages/Home'\r\nimport { AdminHome } from './Pages/AdminHome'\r\nimport { Room } from './Pages/Room'\r\nimport { Signup } from './Pages/Signup'\r\nimport { Signin } from './Pages/AdminSignin'\r\nimport { Balance } from './Pages/Balance'\r\nimport { UsersInSalas } from './Pages/UsersInSala'\r\nimport { Help } from './Pages/Help'\r\nimport { Contact_us } from './Pages/Contact_us'\r\nimport { HistoryUsers } from './Pages/HistoryUsers'\r\nimport { ChangePassword } from './Pages/ChangePassword'\r\nimport { Context } from './context'\r\nimport { Profile } from './Pages/Profile';\r\n\r\nfunction App() {\r\n\r\n  const { isAuth, isAdminAuth } = useContext(Context)\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path ='/changepasswordemail/:token/' component={ChangePassword}/>\r\n        <Route exact path ='/' component={Signup}/>\r\n        <Route path ='/K9N1820/to/access' component={Signin}/>\r\n        <Route exact path ='/pending/' component={Blank}/>\r\n        <Route exact path ='/failure/' component={Blank}/>\r\n        {\r\n          isAuth ? <Layout>\r\n            <Route exact path ='/help/' component={Help}/>\r\n            <Route exact path ='/home/' component={Home}/>\r\n            <Route exact path ='/profile/' component={Profile}/>\r\n            <Route exact path ='/contact_us/' component={Contact_us}/>\r\n            <Route exact path ='/balance/' component={Balance}/>\r\n            <Route exact path ='/sala/:salaId/' component={Room}/>\r\n          </Layout> :\r\n          isAdminAuth && <>\r\n            <Route exact path ='/adminHome/' component={AdminHome}/>\r\n            <Route exact path ='/historyUsers/:fecha1/:fecha2/:user' component={HistoryUsers}/>\r\n            <Route exact path ='/historyUsers/:user' component={HistoryUsers}/>\r\n            <Route exact path ='/historyUsers/:user/:sala' component={UsersInSalas}/>\r\n          </>\r\n        }\r\n        <Route component={Blank}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Context from './context'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport './GlobalStyles.css'\r\n\r\nReactDOM.render(\r\n  <Context.Provider>\r\n    <App />\r\n  </Context.Provider>,\r\n  document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}