{"version":3,"sources":["context.js","Images/arbol.svg","hooks/useComponentVisible.js","urlServer.js","Components/Modals/Modal.js","hooks/useFormValues.js","Components/Modals/JoinModal.js","Components/Forms/NavbarForm.js","Images/logo.svg","Images/2WANTED.svg","Components/NavbarLogo.js","Components/Modals/InvitationModal.js","Components/Navbar_navigation1.js","Components/Modals/WithdrawModal.js","Components/Modals/DepositModal.js","hooks/useUserData.js","Components/Navbar_navigation2.js","Components/Navbar.js","Components/Layout.js","Components/Blank.js","Components/Forms/NewSalaForm.js","Components/ListRooms.js","Pages/Home.js","Images/abajo.svg","Components/TreeData.js","Components/Modals/MiniModal.js","Components/Modals/childModal.js","Components/Modals/inviteModal.js","Components/Tree.js","Components/RomDetails.js","Pages/Room.js","hooks/useChildsData.js","Components/Modals/EmailVerificationModal2.js","Components/NavbarLogin.js","Images/ANDROID.png","Images/IOS.png","Images/esfinge.svg","Components/Modals/EmailVerificationModal.js","Pages/Signup.js","Pages/MailVerification.js","Pages/Balance.js","Components/Forms/UpdatePasswordForm.js","Components/Forms/UpdateEmailForm.js","Components/Forms/WithdrawBank.js","Pages/Profile.js","App.js","index.js"],"names":["Context","createContext","children","cookieToken","Cookies","get","useState","isAuth","setIsAuth","value","toggleAuth","token","userName","set","expires","logout","remove","Provider","Consumer","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","current","contains","target","useEffect","document","addEventListener","removeEventListener","url","Modal","props","isOpen","ReactDOM","createPortal","className","onClick","onClose","getElementById","useFormValues","setValue","onChange","e","withRouter","joinLoading","setJoinLoading","radio1","setRadio1","radio2","setRadio2","parentInput","setParentInput","handleRadio1","handleRadio2","joinData","number","parentUser","price","random","salaName","a","preventDefault","axios","data","method","headers","authorization","then","res","error","Swal","fire","icon","title","text","history","push","id","catch","err","salaId","_id","name","Intl","NumberFormat","format","onSubmit","type","checked","placeholder","disabled","role","NavbarForm","ArbolImg","iconSet","room1","dropdownFilter","iconNone","setIconNone","modal2Open","setModal2Open","searchLoading","setSearchLoading","filterSala","setFilterSala","onOpen2Modal","searchRoom1","response","size","src","alt","creator","React","memo","NavbarLogo","to","logo","logoletra","invitation","invitationData","invitationLoading","setInvitationLoading","parentUsername","host","message","Navbar_navigation1","username","toggle1","invitations","setInvitations","totalPages","setTotalPages","modalOpen","setModalOpen","setInvitationData","countPages","setCountPages","count","setCount","notifications","setNotifications","socket","io","emit","on","page","countNotification","concat","length","map","onOpenModal","WithdrawModal","loading","setLoading","confirm","setConfirm","amount","formatNumber","msg","wallet","DepositModal","urlPay","setUrlPay","buttonPay","setButtonPay","onPay","href","rel","useUserData","update","userData","setUserData","loadingUserData","setLoadingUserData","getUserData","Navbar_navigation2","countUserData","setCountUserData","useContext","modal3Open","setModal3Open","modal4Open","setModal4Open","toggle3","useCallback","state","Layout","Fragment","Blank","NewSalaForm","roomValid","setRoomValid","priceValid","setPriceValid","createLoading","setCreateLoading","reg_whiteSpace","newSalaData","users","user","parentId","undefined","childsId","childId1","childId2","test","parseFloat","ListRooms","listRooms","setListRooms","activesData","setActivesData","activesLoading","setActivesLoading","countActives","setCountActives","total","salaPrice","salaCreator","Home","actives_560","setActives_560","MdHome","MdInfo","width","height","frameBorder","allow","allowFullScreen","TreeData","arbolData","lineDropDown","setLineDropdown","console","log","abajo","MiniModal","ChildModal","InviteModal","inviteLoading","setInviteLoading","newUser","msg_valid","setMsg_valid","Tree","userModal","setUserModal","dataModal","setDataModal","parent","RomDetails","dataRoom","inBalance","loadingToBalance","setLoadingToBalance","toBalance","acum3","acum4","i","divide","tAcum","Room","match","params","setParent","setInBalance","setDataRoom","setArbolData","loadingChildsData","setLoadingChildsData","childsData","useChildsData","searchRoom","EmailVerificationModal2","email","password","form","loginLoading","setLoginLoading","post","isVerified","autoComplete","EmailVerificationModal","Signup","reg_password","dni","confirm_password","bank","titular","password_valid","setPassword_valid","userValid","setUserValid","signupLoading","setSignupLoading","android","ios","IMG","required","suggested","MailVerification","emailHash","Balance","valueFecha1","setValueFecha1","valueFecha2","setValueFecha2","viewDates","setViewDates","balance","setBalance","countLastestPages","setCountLastestPages","amountPending","setAmountPending","pending","activeDate","setActiveDate","handleDate","splitDate","split","fechaInicial","Date","splitDate2","fechaFinal","getFechaInicial","getFechaFinal","date","getDate","getMonth","getFullYear","getHours","getMinutes","won","depositAmount","withdrawAmount","UpdatePasswordForm","newPasswordError","setNewPasswordError","passwordLoading","setPasswordLoading","newPassword","confirmNewPassword","UpdateEmailForm","newEmailError","setNewEmailError","emailLoading","setEmailLoading","newEmail","confirmNewEmail","WithdrawBank","counter","reg_numbers","editBank","setEditBank","editBankLoading","setEditBankLoading","dni_valid","setDni_valid","numeroCuenta_valid","setNumeroCuenta_valid","tipo_valid","setTipo_valid","bank_valid","setBank_valid","tipoCuenta_valid","setTipoCuenta_valid","typeCount","setTypeCount","setType","numeroCuenta","Bank","editBankValues","cancelEditBank","setCancelEditBank","setBank","tipo","banco","tipoCuenta","item","TypeCount","Profile","buttonDebito","setButtonDebito","buttonPerfil","setButtonPerfil","App","path","component","exact","render"],"mappings":"iaAGaA,EAAUC,0BA8BR,EA5BE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEZC,EAAcC,IAAQC,IAAI,SAFC,EAILC,mBAASH,GAJJ,mBAI1BI,EAJ0B,KAIlBC,EAJkB,KAM3BC,EAAQ,CACZF,SACAG,WAAY,SAACC,EAAOC,GAClBJ,GAAU,GACVJ,IAAQS,IAAI,QAASF,EAAO,CAAEG,QAAS,IACvCV,IAAQS,IAAI,WAAYD,EAAU,CAAEE,QAAS,KAE/CC,OAAQ,WACNP,GAAU,GACVJ,IAAQY,OAAO,SACfZ,IAAQY,OAAO,cAKnB,OACE,kBAAChB,EAAQiB,SAAT,CAAkBR,MAAOA,GACtBP,I,GAK8BF,EAAQkB,S,2BCjC9B,MAA0B,kC,MCElC,SAASC,EAAoBC,GAAmB,IAAD,EACAd,mBAClDc,GAFkD,mBAC7CC,EAD6C,KACzBC,EADyB,KAI9CC,EAAMC,iBAAO,MAEbC,EAAqB,SAACC,GACR,WAAdA,EAAMC,KACRL,GAAsB,IAIpBM,EAAqB,SAAAF,GACrBH,EAAIM,UAAYN,EAAIM,QAAQC,SAASJ,EAAMK,SAC7CT,GAAsB,IAa1B,OATAU,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,UAAWT,GAAqBJ,GAC1DY,SAASC,iBAAiB,QAASN,GAAqBP,GACjD,WACLY,SAASE,oBAAoB,UAAWV,GAAqBJ,GAC7DY,SAASE,oBAAoB,QAASP,GAAqBP,OAIxD,CAAEE,MAAKF,qBAAoBC,yBC7B7B,IAAMc,EAAM,G,mECsBJC,MAlBf,SAAeC,GAEX,OAAIA,EAAMC,OAINC,IAASC,aACL,yBAAKC,UAAU,SACX,yBAAKA,UAAU,oBACX,4BAAQC,QAASL,EAAMM,QAASF,UAAU,uBAA1C,KACCJ,EAAMpC,WAIjB+B,SAASY,eAAe,UAXnB,MCLFC,EAAgB,WAAO,IAAD,EACPxC,mBAAS,IADF,mBAC1BG,EAD0B,KACnBsC,EADmB,KAKjC,MAAO,CAAEtC,QAAOuC,SAFC,SAACC,GAAD,OAAOF,EAASE,EAAElB,OAAOtB,UC6H7ByC,eAzHG,SAACZ,GAAW,IAAD,EAEahC,oBAAS,GAFtB,mBAElB6C,EAFkB,KAELC,EAFK,OAGG9C,oBAAS,GAHZ,mBAGlB+C,EAHkB,KAGVC,EAHU,OAIGhD,oBAAS,GAJZ,mBAIlBiD,EAJkB,KAIVC,EAJU,OAKalD,oBAAS,GALtB,mBAKlBmD,EALkB,KAKLC,EALK,KAWzB,SAASC,IACLL,GAAU,GACVE,GAAU,GACVE,GAAe,GAEnB,SAASE,IACLN,GAAU,GACVE,GAAU,GACVE,GAAe,GAKnB,IAEIG,EAnBkBC,EAiBhBC,EAAajB,IAGfkB,EAAQ,EACRC,IAASV,EACTW,EAAW,GA7BU,4CAyCzB,WAA6BjB,GAA7B,SAAAkB,EAAA,6DACIlB,EAAEmB,iBAEFhB,GAAe,GAHnB,SAKUiB,IAAM,CACRC,KAAMT,EACNU,OAAQ,OACRnC,IAAKA,qBACLoC,QAAS,CACLC,cAAenC,EAAM3B,SAE1B+D,MAAK,SAAAC,GACJvB,GAAe,GACZuB,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnBtC,EAAM4C,QAAQC,KAAd,gBAA4BR,EAAIL,KAAKc,KACrC9C,EAAMM,cAEXyC,OAAM,SAAAC,GACLlC,GAAe,GACfyB,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OA7BlB,4CAzCyB,sBA6EzB,OA9CGhD,EAAMgC,OACLT,EAAW,CACP0B,OAAQjD,EAAMgC,KAAKkB,IACnBzB,WAAW,IAAD,OAAMA,EAAWtD,OAC3BwD,OAAQA,GAEZD,EAAQ1B,EAAMgC,KAAKN,MACnBE,EAAW5B,EAAMgC,KAAKmB,MAwCtB,kBAAC,EAAD,CAAOlD,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SACxC,yBAAKF,UAAU,cACX,6CACA,8CAAmB,8BAAOwB,IAC1B,qCAAU,mCA3EAJ,EA2EqBE,EA1EhC,IAAI0B,KAAKC,aAAa,SAASC,OAAO9B,MA4ErC,0BAAM+B,SApFO,6CAqFT,6BACI,6BACI,2BAAOC,KAAK,QAAQC,QAAS1C,EAAQL,SAAUW,IAC/C,2BAAOhB,QAASgB,GAAhB,yBAEJ,6BACI,2BAAOmC,KAAK,QAAQC,QAASxC,EAAQP,SAAUY,IAC/C,2BAAOjB,QAASiB,GAAhB,6BAGR,yBAAKlB,UAAWe,EAAc,aAAe,SACzC,uDACA,yBAAKf,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oCAAf,MAEJ,yCAAOA,UAAU,cAAiBqB,EAAlC,CAA8CiC,YAAY,UAAUF,KAAK,YAGjF,yBAAKpD,UAAYe,EAA4B,QAAd,aAC3B,2BACI,uCADJ,mGAIJ,4BAAQwC,WAAU9C,EAA4BT,UAAU,4CACpD,yBAAKA,UAAWS,EAAc,0CAA4C,QAAS+C,KAAK,UACpF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAIA,UAAWS,EAAc,QAAU,IAAvC,oB,OClHlBgD,EAAa,SAAC,GAA4D,IActDrC,EAdJsC,EAAyD,EAAzDA,SAAUhE,EAA+C,EAA/CA,IAAKzB,EAA0C,EAA1CA,MAAO0F,EAAmC,EAAnCA,QAASlF,EAA0B,EAA1BA,oBAE3CmF,EAAQxD,IACRyD,EAAiBpF,GAAoB,GAHgC,EAK3Cb,oBAAS,GALkC,mBAKpEkG,EALoE,KAK1DC,EAL0D,OAMvCnG,mBAAS,MAN8B,mBAMpEoG,EANoE,KAMxDC,EANwD,OAOjCrG,oBAAS,GAPwB,mBAOpEsG,EAPoE,KAOrDC,EAPqD,OAQvCvG,oBAAS,GAR8B,mBAQpEwG,EARoE,KAQxDC,EARwD,KAkB3E,SAASC,IACLL,GAAc,GAnByD,SAyB5DM,EAzB4D,8EAyB3E,WAA4BhE,GAA5B,eAAAkB,EAAA,6DACIlB,EAAEmB,iBAEFyC,GAAiB,GAEjBN,EAAejF,uBAAsB,GALzC,kBAQ+B+C,IAAM,CACzBC,KAAM,CAAEmB,KAAMa,EAAM7F,OACpB8D,OAAQ,OACRnC,IAAKA,EAAI,mBACToC,QAAS,CACLC,cAAe9D,KAb/B,OAQcuG,EARd,OAiBQL,GAAiB,GACjBE,EAAcG,EAAS5C,MAlB/B,kDAqBQuC,GAAiB,GACjBhC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAK,EAAD,KAzBhB,2DAzB2E,sBAuD3E,OA7CAjD,qBAAU,WACOqE,IAAVG,KACL,CAACA,EAAUH,IA2CN,oCAIH,yBAAK3D,UAAU,2BACX,4BAAQC,QAAS,kBAAK8D,GAAY,IAAO/D,UAAY8D,EAA2B,QAAhB,eAAyB,kBAAC,IAAD,CAAUW,KAAK,QAExG,yBAAKzE,UAAW8D,EAAY,kBAAoB,SAC5C,0BAAMX,SAAUoB,GACZ,4BAAQtE,QAAS,kBAAK8D,GAAY,IAAQX,KAAK,SAASpD,UAAU,eAAc,kBAAC,IAAD,CAAkByE,KAAK,QACvG,2CAAWb,EAAX,CAAkBR,KAAK,OAAOE,YAAY,oBAC1C,4BAAQF,KAAK,SAASpD,UAAU,eAAc,kBAAC,IAAD,CAAUyE,KAAK,WAQzE,yBAAKzE,UAAU,oBAEX,0BAAMmD,SAAUoB,GACZ,6BACI,2CAAWX,EAAX,CAAkBR,KAAK,OAAOE,YAAY,qBAE9C,4BAAQF,KAAK,SAASpD,UAAU,eAAc,kBAAC,IAAD,CAAUyE,KAAK,SAGjE,yBAAK5F,IAAKgF,EAAehF,IAAKmB,UAAW6D,EAAelF,mBAAqB,uCAAyC,SAG9GuF,EAAgB,yBAAKlE,UAAW,6BAA6BwD,KAAK,UAC9D,0BAAMxD,UAAU,WAAhB,eAGJoE,EAAWxC,KAEX,6BAEA,yBAAK5B,UAAW6D,EAAelF,mBAAqB,cAAgB,SAC5D,yBAAKsB,QAASqE,EAActE,UAAU,qBAClC,yBAAK0E,IAAKhB,EAAU1D,UAAU,GAAG2E,IAAI,QACrC,yBAAK3E,UAAU,2BACX,gDAAqB,kCAAQoE,EAAWxC,KAAKmB,MAA7C,MACA,yCAAc,kCAAQqB,EAAWxC,KAAKgD,SAAtC,MACA,uCAAY,oCAtFtBxD,EAsF4CgD,EAAWxC,KAAKN,MArFvE,IAAI0B,KAAKC,aAAa,SAASC,OAAO9B,KAqFjB,QAGZ,4BAAQnB,QAASqE,EAActE,UAAU,IAAzC,WAEJ,uBAAGA,UAAU,gBAAe,kBAAC,IAAD,MAA5B,gDACS,yBAAKA,UAAU,aAAaoE,EAAWlC,MAAvC,KAA+C,uBAAGlC,UAAU,gBAAe,kBAAC,IAAD,MAA5B,mDAKpE,kBAAC,EAAD,CAAW/B,MAAOA,EAAO2D,KAAMwC,EAAWxC,KAAM/B,OAAQmE,EAAY9D,QA1FxE,WACI+D,EAAc,WA6FPY,MAAMC,KAAKrB,GC3HX,MAA0B,iCCA1B,MAA0B,oCCKnCsB,EAAa,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,SACjB,OAAQ,yBAAK9D,UAAY8D,EAA6B,QAAlB,iBAChC,kBAAC,IAAD,CAAM9D,UAAU,OAAOgF,GAAG,SAAQ,yBAAMhF,UAAU,QAAQ0E,IAAKO,EAAMN,IAAI,aAAzE,IAAuF,yBAAK3E,UAAU,QAAQ0E,IAAKQ,EAAWP,IAAI,cAAlI,OAIOE,MAAMC,KAAKC,G,iBC0EXvE,G,OAAAA,aA7ES,SAACZ,GAMrB,IAIIuB,EARkBC,EAIhB+D,EAAavF,EAAMwF,eANM,EAQmBxH,oBAAS,GAR5B,mBAQxByH,EARwB,KAQLC,EARK,iDAmB/B,WAA4B/E,GAA5B,SAAAkB,EAAA,6DACIlB,EAAEmB,iBAEF4D,GAAqB,GAHzB,SAKU3D,IAAM,CACRC,KAAMT,EACNU,OAAQ,OACRnC,IAAKA,qBACLoC,QAAS,CACLC,cAAenC,EAAM3B,SAE1B+D,MAAK,SAAAC,GACJqD,GAAqB,GAClBrD,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnBtC,EAAMM,UACNN,EAAM4C,QAAQC,KAAd,gBAA4BR,EAAIL,KAAKc,SAE1CC,OAAM,SAAAC,GACL0C,GAAqB,GACrBnD,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OA7BlB,4CAnB+B,sBAqD/B,OAzCGuC,IACChE,EAAW,CACP0B,OAAQsC,EAAWtC,OACnBxB,WAAY8D,EAAWI,iBAuC3B,kBAAC,EAAD,CAAO1F,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SACzC,6CAGKiF,GAAc,yBAAKnF,UAAU,mBACzB,4CAAiB,8BAAOmF,EAAWK,OACnC,8CAAmB,8BAAOL,EAAW3D,WACrC,qCAAU,mCA3DJJ,EA2DyB+D,EAAW7D,MA1D/C,IAAI0B,KAAKC,aAAa,SAASC,OAAO9B,MA2DjC,6CAAkB,8BAAO+D,EAAWI,iBACpC,uCAAY,8BAAOJ,EAAWM,QAAUN,EAAWM,QAAU,YAC7D,4BAAQlC,WAAU8B,EAAkCrF,UAAU,2CAA2CC,QAhE1F,6CAiEX,yBAAKD,UAAWqF,EAAoB,0CAA4C,QAAS7B,KAAK,UAC1F,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAIA,UAAWqF,EAAoB,QAAU,IAA7C,iBCpElBK,EAAqB,SAAC,GAA2D,IAA1DhC,EAAyD,EAAzDA,SAAUjF,EAA+C,EAA/CA,oBAAqBiB,EAA0B,EAA1BA,IAAKiG,EAAqB,EAArBA,SAAU1H,EAAW,EAAXA,MAEjE2H,EAAUnH,GAAoB,GAF8C,EAG5Cb,mBAAS,IAHmC,mBAG3EiI,EAH2E,KAG9DC,EAH8D,OAI9ClI,mBAAS,GAJqC,mBAI3EmI,EAJ2E,KAI/DC,EAJ+D,OAKhDpI,mBAAS,MALuC,mBAK3EqI,EAL2E,KAKhEC,EALgE,OAMtCtI,mBAAS,MAN6B,mBAM3EwH,EAN2E,KAM3De,EAN2D,OAOhDvI,mBAAS,GAPuC,mBAO7EwI,EAP6E,KAOjEC,EAPiE,OAQ1DzI,mBAAS,GARiD,mBAQ7E0I,EAR6E,KAQtEC,EARsE,OAS1C3I,mBAAS,GATiC,mBAS7E4I,EAT6E,KAS9DC,EAT8D,KA2FlF,OAnEAnH,qBAAU,WAEN,IAAMoH,EAASC,IAAGjH,GAElBgH,EAAOE,KAAK,cAAejB,GAE3Be,EAAOG,GAAG,eAAe,WACrBN,EAASD,EAAQ,MAGlBA,EAAQ,GACPD,EAAc,GAGlB1E,IAAM,CACFE,OAAQ,OACRD,KAAM,CAACkF,KAAMV,GACb1G,IAAKA,EAAI,mBACToC,QAAS,CACLC,cAAe9D,KAEpB+D,MAAK,SAAAC,GACDA,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGD,IAAfkE,GAAoBE,EAAQ,GAC3BG,EAAiBxE,EAAIL,KAAKmF,mBAC1Bf,EAAc/D,EAAIL,KAAKmE,YACvBD,EAAe7D,EAAIL,KAAKiE,aACxBU,EAAS,KAETT,GAAgB,SAAAD,GAAW,OAAIA,EAAYmB,OAAO/E,EAAIL,KAAKiE,gBAC3DY,EAAiBxE,EAAIL,KAAKmF,mBAC1Bf,EAAc/D,EAAIL,KAAKmE,gBAGhCpD,OAAO,SAAAT,GACNC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,SAIhB,CAACjE,EAAOmI,EAAYE,EAAOX,EAAUjG,IAoBnC,yBAAKM,UAAU,gBACX,4BAAQA,UAAU,cAAcC,QAnBxC,WAEI2F,EAAQhH,uBAAsB,GAE3B4H,EAAgB,IACf7E,IAAM,CACFE,OAAQ,OACRnC,IAAKA,EAAI,yBACToC,QAAS,CACLC,cAAe9D,KAIvBwI,EAAiB,MAOb,yBAAKzG,UAAWwG,EAAgB,EAAI,eAAiB,SAAUA,GAC/D,kBAAC,IAAD,CAAqB/B,KAAK,QAE9B,yBAAK5F,IAAK+G,EAAQ/G,IAAKmB,UAAW4F,EAAQjH,mBAAqB,iCAAmC,yBAEnE,IAAvBkH,EAAYoB,QAAgB,uBAAGjH,UAAU,aAAb,yBAG5B6F,EAAYqB,KAAI,SAAA/B,GACZ,OACI,wBAAInF,UAAW4F,EAAQjH,mBAAqB,0BAA4B,iBAAkBM,IAAKkG,EAAWrC,KACtG,4BAAQ9C,UAAU,GAAGC,QAAS,kBA1F1D,SAAqBmF,GACjBc,GAAa,GACbC,EAAkBf,GAwFyC+B,CAAYhC,KAC3C,yBAAKT,IAAKhB,EAAUiB,IAAI,aACxB,yBAAK3E,UAAU,0BACX,4CAAiB,kCAAQmF,EAAWK,OACpC,8CAAmB,kCAAQL,EAAW3D,WACtC,qCAAU,oCAnGxBJ,EAmG8C+D,EAAW7D,MAlGpE,IAAI0B,KAAKC,aAAa,SAASC,OAAO9B,SADjD,IAAsBA,KA0GV,4BAAQpB,UAAW+F,EAAaK,EAAa,4BAA8B,QAASnG,QAAS,WAAKoG,EAAcD,EAAa,KAA7H,mBAEJ,kBAAC,EAAD,CAAiBnI,MAAOA,EAAOmH,eAAgBA,EAAgBvF,OAAQoG,EAAW/F,QAnG1F,WACIgG,EAAa,WAuGNrB,MAAMC,KAAKY,GC5Hb0B,G,OAAgB,SAAAxH,GAAU,IAAD,EAEJhC,oBAAS,GAFL,mBAE3ByJ,EAF2B,KAElBC,EAFkB,OAGJ1J,oBAAS,GAHL,mBAG3B2J,EAH2B,KAGlBC,EAHkB,KAK5BC,EAASrH,IAEf,SAASsH,EAAatG,GAClB,OAAO,IAAI4B,KAAKC,aAAa,SAASC,OAAO9B,GARf,4CAWlC,WAA8Bb,GAA9B,SAAAkB,EAAA,6DACIlB,EAAEmB,iBAEF4F,GAAW,GAHf,SAKU3F,IAAM,CACRC,KAAM,CAAC6F,OAAQA,EAAO1J,OACtB8D,OAAQ,OACRnC,IAAKA,mBACLoC,QAAS,CACLC,cAAenC,EAAM3B,SAE1B+D,MAAK,SAAAC,GACJqF,GAAW,GACRrF,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,UACPC,KAAMN,EAAIL,KAAK+F,MAEnB/H,EAAMM,cAEXyC,OAAM,SAAAC,GACL0E,GAAW,GACXnF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OAjClB,4CAXkC,sBAiDlC,OAAO,kBAAC,EAAD,CAAO/C,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SAC3C,wBAAIF,UAAWJ,EAAMgI,QAAU,IAAQ,QAAU,IAAjD,8BAGA,0BAAM5H,UAAWJ,EAAMgI,QAAU,IAAQ,iBAAmB,QAASzE,SArD3C,6CAsDtB,uDACA,2CAAiBuE,EAAa9H,EAAMgI,SACpC,2CAAWH,EAAX,CAAmBzH,UAAU,aAAaoD,KAAK,OAAOE,YAAY,OAClE,4BAAQrD,QAAS,kBAAIuH,GAAW,IAAOxH,UAAYuH,EAAuD,QAA7C,2CAAsDnE,KAAK,UAAxH,WACA,4BAAQG,WAAU8D,EAAwBrH,UAAWuH,EAAU,2CAA6C,QAASnE,KAAK,UACtH,yBAAKpD,UAAWqH,EAAU,0CAA4C,QAAS7D,KAAK,UAChF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAWqH,EAAU,QAAU,IAAlC,wBAA4DK,EAAaD,EAAO1J,SAEpF,4BAAQiC,UAAU,iDAAiDC,QAASL,EAAMM,QAASkD,KAAK,UAAhG,gBChEHyE,G,OAAe,SAAAjI,GAMxB,IAJsBwB,EAIhBqG,EAASrH,IANkB,EAQHxC,oBAAS,GARN,mBAQ1ByJ,EAR0B,KAQjBC,EARiB,OASL1J,mBAAS,IATJ,mBAS1BkK,EAT0B,KASlBC,EATkB,OAUCnK,oBAAS,GAVV,mBAU1BoK,EAV0B,KAUfC,EAVe,KAY3BC,EAAK,uCAAG,WAAO3H,GAAP,SAAAkB,EAAA,6DAEVlB,EAAEmB,iBACF4F,GAAW,GAHD,SAKJ3F,IAAM,CACRE,OAAQ,OACRD,KAAM,CAAEN,MAAOmG,EAAO1J,OACtB2B,IAAKA,gBACLoC,QAAS,CACLC,cAAenC,EAAM3B,SAE1B+D,MAAK,SAAAC,GACJqF,GAAW,GACRrF,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnB6F,EAAU9F,EAAIL,MACdqG,GAAa,OAElBtF,OAAM,SAAAT,GACLoF,GAAW,GACXnF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,OA7BJ,2CAAH,sDA2CX,OAAO,kBAAC,EAAD,CAAOrC,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SAC/C,0BAAMiD,SAAU+E,EAAOlI,UAAU,eAC7B,yDAEA,yCAAOA,UAAWgI,EAAY,QAAU,aAAc5E,KAAK,QAAWqE,EAAtE,CAA8EnE,YAAY,OAC1F,4BAAQtD,UAAWgI,EAAY,QAAU,6CAA8C5E,KAAK,UACxF,yBAAKpD,UAAWqH,EAAU,0CAA4C,QAAS7D,KAAK,UAChF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAWqH,EAAU,QAAU,IAAlC,cAGJ,uBAAGpH,QAjBX,WACIgI,GAAa,GACbrI,EAAMM,WAeqBF,UAAWgI,EAAY,0CAA4C,QAASG,KAAML,EAAQM,IAAI,sBAAsB/I,OAAO,UAAlJ,wBAjEc+B,EAiE+KqG,EAAO1J,MAhEjM,IAAIiF,KAAKC,aAAa,SAASC,OAAO9B,KAkEzC,4BAAQpB,UAAU,iDAAiDoD,KAAK,SAASnD,QAvBzF,WACIgI,GAAa,GACbrI,EAAMM,YAqBF,gBCxECmI,EAAc,SAACC,GAExB,IAAMrK,EAAQP,IAAQC,IAAI,SAFS,EAIHC,mBAAS,IAJN,mBAI5B2K,EAJ4B,KAIlBC,EAJkB,OAKW5K,oBAAS,GALpB,mBAK5B6K,EAL4B,KAKXC,EALW,KA+BnC,OAvBApJ,qBAAU,WAAM,4CAIZ,4BAAAmC,EAAA,sEAE2BE,IAAM,CACzBE,OAAQ,MACRnC,IAAKA,UACLoC,QAAS,CACLC,cAAe9D,KAN3B,QAEUuG,EAFV,QASgB5C,OACR4G,EAAYhE,EAAS5C,MACrB8G,GAAmB,IAX3B,4CAJY,sBAEZA,GAAmB,GAFP,mCAmBhBC,KACG,CAAC1K,EAAOqK,IAGJ,CAAEC,WAAUE,oB,QC1BjBG,EAAqB,SAAAhJ,GAAU,IAAD,EAEUhC,mBAAS,GAFnB,mBAEzBiL,EAFyB,KAEVC,EAFU,OAGMT,EAAYQ,GAA1CN,EAHwB,EAGxBA,SAAUE,EAHc,EAGdA,gBACVpK,EAAW0K,qBAAWzL,GAAtBe,OAJwB,EAMIT,mBAAS,MANb,mBAMzBoL,EANyB,KAMbC,EANa,OAOIrL,mBAAS,MAPb,mBAOzBsL,EAPyB,KAObC,EAPa,KAqBhC,IAEsB/H,EAFhBgI,EAAUxJ,EAAMnB,qBAAoB,GAM1C,OACI,yBAAKuB,UAAU,oBACX,yBAAKA,UAAU,gBAEX,4BAAQC,QAAS,kBAAImJ,EAAQxK,uBAAsB,IAAOoB,UAAU,eAChE,kBAAC,IAAD,CAAiByE,KAAK,QAG1B,yBAAK5F,IAAKuK,EAAQvK,IAAKmB,UAAWoJ,EAAQzK,mBAAqB,iCAAmC,yBAC9F,yBAAKsB,QAAS,kBAAImJ,EAAQxK,uBAAsB,IAAQoB,UAAU,oBAAlE,KACA,yBAAMA,UAAU,wBACZ,kBAAE,IAAF,CAAeyE,KAAK,OADxB,OACkC,+BAAK8D,EAASrK,WAEhD,yBAAK8B,UAAU,oCACX,6BAAK,kBAAC,IAAD,MAAL,iBACA,uBAAGA,UAAU,6BAA4B,kBAAE,IAAF,CAAYyE,KAAK,KAAKzE,UAAWyI,EAAkB,2BAA6B,kBAAmBxI,QAAS,kBAAK6I,EAAiBD,EAAgB,MAA3L,OAnBEzH,EAmBgNmH,EAASX,OAlBpO,IAAI5E,KAAKC,aAAa,SAASC,OAAO9B,MAoBjC,yBAAKpB,UAAU,2BACX,yBAAKC,QAAS,kBAAKkJ,GAAc,IAAOnE,GAAG,UAAUhF,UAAU,kBAAiB,kBAAC,IAAD,MAAhF,aACA,yBAAKC,QAAS,kBAAIgJ,GAAc,IAAOjJ,UAAU,mBAAkB,kBAAC,IAAD,MAAnE,YAEJ,kBAAC,IAAD,CAAMC,QAAS,kBAAKmJ,EAAQxK,uBAAsB,IAAQoG,GAAG,YAAYhF,UAAU,mBACvE,kBAAC,IAAD,MAAsB,wDAElC,kBAAC,IAAD,CAAMC,QAAS,kBAAKmJ,EAAQxK,uBAAsB,IAAQoG,GAAG,YAAYhF,UAAU,mBACnF,kBAAE,IAAF,MAAiB,4DAEjB,yBAAKA,UAAU,mBACX,kBAAC,IAAD,MAAiB,yCAErB,yBAAKC,QAzCrB,WACIL,EAAM6C,OACNpE,KAuCwC2B,UAAU,mBAClC,kBAAC,IAAD,MAAe,mDAK3B,kBAAC,EAAD,CAAe/B,MAAO2B,EAAM3B,MAAO2J,OAAQW,EAASX,OAAQ/H,OAAQmJ,EAAY9I,QAtDxF,WACI+I,EAAc,SAsDV,kBAAC,EAAD,CAAchL,MAAO2B,EAAM3B,MAAO4B,OAAQqJ,EAAYhJ,QApD9D,WACIiJ,EAAc,WAwDPtE,MAAMC,KAAK8D,GC3BXpI,eAxCA,SAACZ,GAGZ,IAAM3B,EAAQP,IAAQC,IAAI,SACpBgI,EAAWjI,IAAQC,IAAI,YAIvB8E,EAAO4G,uBAAY,kBAAMzJ,EAAM4C,QAAQC,KAAK,OAAM,CAAC7C,EAAM4C,UARzC,EAUU5E,oBAAS,GAVnB,mBAUfkG,EAVe,KAULC,EAVK,KAYhBJ,EAAU0F,uBAAY,SAACC,GAErBvF,IADDuF,KAGJ,IAEH,OACI,oCACA,6BAEI,kBAAC,EAAD,CAAMxF,SAAUA,IAIhB,kBAAC,EAAD,CAAYrF,oBAAqBA,EAAqBkF,QAASA,EAASD,SAAUA,EAAUhE,IAAKA,EAAKzB,MAAOA,IAI7G,yBAAK+B,UAAY8D,EAAmC,QAAxB,uBACxB,kBAAC,EAAD,CAAYJ,SAAUA,EAAUjF,oBAAqBA,EAAqBiB,IAAKA,EAAKzB,MAAOA,EAAO0H,SAAUA,IAC5G,kBAAC,EAAD,CAAYlD,KAAMA,EAAMhE,oBAAqBA,EAAqBR,MAAOA,UChC1EsL,MATf,SAAiB3J,GACb,OACI,kBAAC,IAAM4J,SAAP,KACK5J,EAAMpC,SACP,kBAAC,EAAD,QCLCiM,EAAQ,SAAC7J,GAMlB,OAJAN,qBAAU,WACNM,EAAM4C,QAAQC,KAAK,OACpB,CAAC7C,IAGA,+BCoGO8J,G,MArGK,SAAA9J,GAAU,IAElB2I,EAAaF,IAAbE,SAFiB,EAGS3K,oBAAS,GAHlB,mBAGlB+L,EAHkB,KAGPC,EAHO,OAIWhM,oBAAS,GAJpB,mBAIlBiM,EAJkB,KAINC,EAJM,OAKiBlM,oBAAS,GAL1B,mBAKlBmM,EALkB,KAKHC,EALG,KAOnBC,EAAiB,SAEjBlH,EAAO3C,IACPkB,EAAQlB,IAER8J,EAAc,CAChBC,MAAO,CACH,CACIC,KAAM7B,EAASrK,SACfmM,cAAUC,EACVC,SAAU,CACNC,SAAU,GACVC,SAAU,MAItB1H,KAAMA,EAAKhF,MACXuD,MAAOA,EAAMvD,MACb6G,QAAS2D,EAASrK,UAzBG,4CA4BzB,WAAwBqC,GAAxB,SAAAkB,EAAA,yDACIlB,EAAEmB,mBAEEuI,EAAeS,KAAK3H,EAAKhF,QAAUgF,EAAKhF,MAAMkJ,OAAS,GAAKlE,EAAKhF,MAAMkJ,OAAS,IAHxF,yCAIe2C,GAAa,IAJ5B,OAKYA,GAAa,GALzB,YAMOe,WAAWrJ,EAAMvD,OAAS,KAAyB,KAAjBuD,EAAMvD,OAN/C,0CAOe+L,GAAc,IAP7B,QAQWA,GAAc,GARzB,eAUIE,GAAiB,GAVrB,UAYUrI,IAAM,CACRC,KAAMsI,EACNrI,OAAQ,OACRnC,IAAKE,EAAMF,IAAI,gBACfoC,QAAS,CACLC,cAAenC,EAAM3B,SAE1B+D,MAAK,SAAAC,GACJ+H,GAAiB,GACb/H,EAAIL,KAAKM,MACTC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAEhBtC,EAAMA,MAAM4C,QAAQC,KAApB,gBAAkCR,EAAIL,KAAKc,QACnDC,OAAM,SAAAC,GACLoH,GAAiB,GACjB7H,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OAjClB,6CA5ByB,sBAkEzB,OACI,yBAAK5C,UAAU,iBACX,yBAAKA,UAAU,yBACX,0CACA,0BAAMmD,SAtEO,6CAuET,yBAAKnD,UAAW2J,EAAY,OAAS,QACjC,yBAAK3J,UAAU,UACX,6BACI,yBAAKA,UAAU,gCAA+B,kBAAE,IAAF,QAElD,yCAAOoD,KAAK,QAAWL,EAAvB,CAA6BO,YAAY,qBAE7C,2BAAOtD,UAAY2J,EAA+B,QAAnB,kBAA4B,kBAAC,IAAD,MAA3D,2DAEJ,yBAAK3J,UAAW6J,EAAa,OAAS,QAClC,yBAAK7J,UAAU,UACX,6BACI,yBAAKA,UAAU,gCAAf,MAEJ,yCAAQsD,YAAY,QAAQF,KAAK,QAAW9B,KAEhD,2BAAOtB,UAAY6J,EAAgC,QAAnB,kBAA4B,kBAAC,IAAD,MAA5D,oCAEJ,4BAAQtG,WAAUwG,GACd,yBAAK/J,UAAW+J,EAAgB,2CAA6C,QAASvG,KAAK,UACvF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAW+J,EAAgB,QAAU,IAAxC,e,QCLTa,EAzFG,SAAC,GAAoB,IAAlB3M,EAAiB,EAAjBA,MAAOyB,EAAU,EAAVA,IAAU,EAEA9B,mBAAS,IAFT,mBAE3BiN,EAF2B,KAEhBC,EAFgB,OAGIlN,mBAAS,IAHb,mBAG3BmN,EAH2B,KAGdC,EAHc,OAIUpN,oBAAS,GAJnB,mBAI3BqN,EAJ2B,KAIXC,EAJW,OAKItN,mBAAS,GALb,mBAK7BuN,EAL6B,KAKfC,EALe,KA6ClC,OAlCA9L,qBAAU,WACN4L,GAAkB,GAClBvJ,IAAM,CACFE,OAAQ,OACRD,KAAM,CAACkF,KAAMqE,GACbzL,IAAKA,EAAI,wBACToC,QAAS,CACLC,cAAe9D,KAGtB+D,MAAK,SAAAC,GAEF,GADAiJ,GAAkB,GACfjJ,EAAIL,KAAKM,MACR,OAAOC,IAAKC,KAAK,CACbC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBgJ,GAAkB,GAClBJ,EAAa7I,EAAIL,KAAKA,MACtB,IAAMA,EAAO,CAACyJ,MAAOpJ,EAAIL,KAAKyJ,OAC9BL,EAAepJ,MAEpBe,OAAO,SAAAC,GACNsI,GAAkB,GAClB/I,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,SAGf,CAAC3E,EAAOkN,EAAczL,IAGrB,yBAAKM,UAAU,iBACX,yCACA,yBAAKA,UAAiC,IAAtB+K,EAAYM,MAAc,QAAU,cAChD,4BAAQ9H,SAA2B,IAAjB4H,EAAmCnL,UAAU,oBAAoBC,QAAS,kBAAKmL,EAAgBD,GAAgB,KAAM,kBAAC,IAAD,CAAoB1G,KAAK,QAC5J,2BAAG,8BAAO0G,GAAV,MAAkCJ,EAAYM,OAClD,4BAAQ9H,SAAU4H,IAAiBJ,EAAYM,MAAsBrL,UAAU,oBAAoBC,QAAS,kBAAKmL,EAAgBD,GAAgB,KAAK,kBAAC,IAAD,CAAqB1G,KAAK,SAGhLwG,EAAiB,yBAAKjL,UAAU,gBAC5B,yBAAKA,UAAU,4CAA4CwD,KAAK,UAC5D,0BAAMxD,UAAU,WAAhB,gBAGR,6BAE6B,IAArB6K,EAAU5D,OAAe,uBAAGjH,UAAU,oBAAb,yBACzB,6BACI,4BAEQ6K,EAAU3D,KAAI,SAACtF,GACX,OACI,wBAAI5B,UAAU,aAAaf,IAAK2C,EAAKiB,QACjC,kBAAC,IAAD,CAAMmC,GAAE,gBAAWpD,EAAKiB,QAAU7C,UAAU,sBACxC,yBAAK0E,IAAKhB,EAAUiB,IAAI,aACxB,yBAAK3E,UAAU,uBACX,8CAAmB,8BAAO4B,EAAKJ,WAC/B,qCAAU,mCAjExCJ,EAiE6DQ,EAAK0J,UAhE7E,IAAItI,KAAKC,aAAa,SAASC,OAAO9B,MAiEG,uCAAY,8BAAOQ,EAAK2J,iBAlE5E,IAAsBnK,UCJboK,EAAO,SAAC5L,GAEjB,IAAM3B,EAAQP,IAAQC,IAAI,SAFC,EAGWC,oBAAS,GAHpB,mBAGpB6N,EAHoB,KAGPC,EAHO,KAK3B,OACI,yBAAK1L,UAAU,kBAEX,yBAAKA,UAAWyL,EAAc,YAAc,2BAExC,kBAAC,EAAD,CAAWtJ,KAAMA,IAAMlE,MAAOA,EAAO0D,MAAOA,IAAOjC,IAAKA,KAI5D,yBAAKM,UAAYyL,EAA6B,4BAAf,cAE3B,kBAAC,EAAD,CAAa7L,MAAOA,EAAO+B,MAAOA,IAAO1D,MAAOA,EAAOyB,IAAKA,EAAKiM,OAAQA,IAAQC,OAAQA,MAEzF,yBAAK5L,UAAU,iBACX,yBAAKA,UAAU,qBACX,6CACA,yBAAKA,UAAU,gBACX,4BAAQA,UAAU,gBAAgB6L,MAAM,MAAMC,OAAO,MAAMxJ,MAAM,gBAAgBoC,IAAI,4CAA4CqH,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,QAOhQ,yBAAKjM,UAAU,wBACX,4BAAQC,QAAS,kBAAKyL,GAAe,IAAS1L,UAAYyL,EAAoD,gCAAtC,qCAAwE,kBAAC,IAAD,CAAQhH,KAAK,QAC7J,4BAAQxE,QAAS,kBAAKyL,GAAe,IAAQ1L,UAAWyL,EAAc,qCAAuC,qBAAsB,kBAAC,IAAD,CAAQhH,KAAK,WCzCjJ,G,OAAA,IAA0B,mCCInCyH,G,MAAW,SAAC,GAA6D,IAA5D5K,EAA2D,EAA3DA,MAAOqE,EAAoD,EAApDA,SAAUwG,EAA0C,EAA1CA,UAAWhF,EAA+B,EAA/BA,YAAa7C,EAAkB,EAAlBA,aAAkB,EAElC1G,oBAAS,GAFyB,mBAEnEwO,EAFmE,KAErDC,EAFqD,KAI1E,SAAS3E,EAAatG,GAClB,OAAO,IAAI4B,KAAKC,aAAa,SAASC,OAAO9B,GAGjD,OADAkL,QAAQC,IAAIJ,GAER,yBAAKnM,UAAU,aACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,WAEnB,uBAAGA,UAAU,cAAb,WACA,yBAAKA,UAAU,SACX,4BAAQC,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAaqB,IAAW3F,UAAWmM,EAAU,GAAK,QAAU,WAAlI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAaqB,IAAW3F,UAAWmM,EAAU,GAAK,QAAU,WAAlI,MAEJ,uBAAGnM,UAAU,cAAb,WACA,yBAAKA,UAAU,SACX,4BAAQC,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,MAEJ,uBAAGnM,UAAU,cAAb,gBAAyC,kCAAQ0H,EAAapG,EAAQ,GAA7B,SACzC,yBAAKtB,UAAU,SACX,4BAAQC,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,GAAK,kBAAKhF,EAAYgF,EAAU,KAAM,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,GAAK,QAAU,WAAtI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,MAEJ,uBAAGnM,UAAU,cAAb,gBAAyC,kCAAQ0H,EAAapG,EAAQ,GAA7B,SACzC,yBAAKtB,UAAU,sBACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,MAEJ,4BAAQnM,UAAU,mBAAmBC,QAAS,kBAAKoM,GAAiBD,KAApE,IAAoF,yBAAK1H,IAAK8H,EAAO7H,IAAI,UAAzG,KACA,yBAAK3E,UAAWoM,EAAe,SAAW,SACtC,yBAAKpM,UAAU,0BACX,yBAAKA,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,OAGR,yBAAKnM,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,OAGR,yBAAKnM,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,OAGR,yBAAKnM,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,KAAKnM,UAAWmM,EAAU,IAAM,QAAU,WAAzI,QAIZ,yBAAKnM,UAAU,0BACX,yBAAKA,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,OAGR,yBAAKnM,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,OAGR,yBAAKnM,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,OAGR,yBAAKnM,UAAU,qBACX,gCACA,yBAAKA,UAAU,WACX,4BAAQC,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,KACA,4BAAQlM,QAASkM,EAAU,IAAM,kBAAKhF,EAAYgF,EAAU,MAAO,kBAAK7H,EAAa6H,EAAU,MAAMnM,UAAWmM,EAAU,IAAM,QAAU,WAA1I,YASbtH,OAAMC,KAAKoH,G,OCxGXO,OAlBf,SAAmB7M,GAEf,OAAIA,EAAMC,OAINC,IAASC,aACL,yBAAKC,UAAU,aACX,yBAAKA,UAAU,wBACX,4BAAQC,QAASL,EAAMM,QAASF,UAAU,2BAA1C,KACCJ,EAAMpC,WAIjB+B,SAASY,eAAe,UAXnB,MCJFuM,GAAa,SAAC9M,GACvB,OACI,kBAAC,GAAD,CAAWC,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SAC5C,qCACA,6BACA,4BAAKN,EAAMwK,QCCVuC,I,OAAc,SAAC/M,GAExB,IAKIgC,EALEwI,EAAOhK,IACPqF,EAAUrF,IAHkB,EAKQxC,oBAAS,GALjB,mBAK3BgP,EAL2B,KAKZC,EALY,KAS/BjN,EAAMgC,OACLA,EAAO,CACHkL,QAAQ,IAAD,OAAM1C,EAAKrM,OAASwH,eAAgB3F,EAAMgC,KAAK2D,eACtDE,QAASA,EAAQ1H,MAAO8E,OAAQjD,EAAMgC,KAAKiB,OAC3CvB,MAAO1B,EAAMgC,KAAKN,MAAOE,SAAU5B,EAAMgC,KAAKJ,SAAUgE,KAAM5F,EAAMgC,KAAK4D,OAb/C,MAiBA5H,oBAAS,GAjBT,mBAiB3BmP,EAjB2B,KAiBhBC,EAjBgB,iDAmBlC,WAA6BzM,GAA7B,SAAAkB,EAAA,yDACIlB,EAAEmB,mBAEC+D,EAAQ1H,MAAMkJ,OAAS,IAH9B,yCAIe+F,GAAa,IAJ5B,OAKUA,GAAa,GALvB,cAOIH,GAAiB,GAPrB,SASUlL,IAAM,CACRC,KAAMA,EACNC,OAAQ,OACRnC,IAAKA,sBACLoC,QAAS,CACLC,cAAenC,EAAM3B,SAE1B+D,MAAK,SAAAC,GACJ4K,GAAiB,GACd5K,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,0BAGhBK,OAAM,SAAAC,GACLiK,GAAiB,GACjB1K,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OAnClB,OAuCIhD,EAAMM,UAvCV,6CAnBkC,sBA6DlC,OACI,kBAAC,EAAD,CAAOL,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SACzC,+CACC,0BAAMF,UAAU,cAAcmD,SAhEJ,6CAiEtB,yBAAKnD,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oCAAf,MAEJ,2CAAWoK,EAAX,CAAiBhH,KAAK,OAAOE,YAAY,cAE7C,yBAAKtD,UAAU,wBACX,2CAAWyF,EAAX,CAAoBrC,KAAK,OAAOE,YAAY,sBAC5C,2BAAOtD,UAAW+M,EAAY,QAAU,kBAAkB,kBAAC,IAAD,MAA1D,6BAEJ,4BAAQxJ,WAAUqJ,EAA8B5M,UAAU,4CACtD,yBAAKA,UAAW4M,EAAgB,0CAA4C,QAASpJ,KAAK,UACtF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAW4M,EAAgB,QAAU,IAAxC,gBCpCLK,GA9CF,SAACrN,GAEV,IAAMuM,EAAavM,EAAMuM,UAFL,EAMcvO,mBAAS,MANvB,mBAMbqI,EANa,KAMFC,EANE,OAOgBtI,mBAAS,MAPzB,mBAOboG,EAPa,KAODC,EAPC,OAQcrG,mBAAS,MARvB,mBAQbsP,EARa,KAQFC,EARE,OAScvP,mBAAS,MATvB,mBASbwP,EATa,KASFC,EATE,KAcpB,IAAMlG,EAAckC,uBAAa,SAAAe,GAC7BlE,GAAa,GACbiH,EAAa/C,KACf,IAKF,IAAM9F,EAAe+E,uBAAa,SAAAiE,GAC9B,IAAM1L,EAAO,CACT2D,eAAgB+H,EAAQzK,OAAQjD,EAAMiD,OAAQvB,MAAO1B,EAAM0B,MAAOE,SAAU5B,EAAM4B,SAAUgE,KAAM5F,EAAM1B,UAE5G+F,GAAc,GACdoJ,EAAazL,KACf,CAAChC,EAAM0B,MAAO1B,EAAMiD,OAAQjD,EAAM4B,SAAU5B,EAAM1B,WAEpD,OAAG0B,EAAMyH,QACE,yBAAKrH,UAAU,0CAA0CwD,KAAK,UACjE,0BAAMxD,UAAU,WAAhB,eAKJ,oCACI,kBAAC,GAAD,CAAUsB,MAAO1B,EAAM0B,MAAOqE,SAAU/F,EAAM1B,SAAUiO,UAAWA,EAAW7H,aAAcA,EAAc6C,YAAaA,IAEvH,kBAAC,GAAD,CAAYiD,KAAM8C,EAAWrN,OAAQoG,EAAW/F,QA7BxD,WACIgG,EAAa,SA6BT,kBAAC,GAAD,CAAajI,MAAO2B,EAAM3B,MAAO2D,KAAMwL,EAAWvN,OAAQmE,EAAY9D,QAvB9E,WACI+D,EAAc,WCpBhBsJ,GAAa,SAAC,GAAmF,IAAlFjH,EAAiF,EAAjFA,MAAO5G,EAA0E,EAA1EA,IAAKmD,EAAqE,EAArEA,OAAQ3E,EAA6D,EAA7DA,SAAUD,EAAmD,EAAnDA,MAAOkO,EAA4C,EAA5CA,UAAWqB,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAAWH,EAAY,EAAZA,OAAY,EAElD1P,oBAAS,GAFyC,mBAE3F8P,EAF2F,KAEzEC,EAFyE,OAGxD/P,mBAAS,GAH+C,mBAG3FiL,EAH2F,KAG5EC,EAH4E,KAK5FxH,EAAQkM,EAAWA,EAASlM,MAAQ,EAE1C,SAASoG,EAAatG,GAClB,OAAO,IAAI4B,KAAKC,aAAa,SAASC,OAAO9B,GARiD,4CAWlG,sBAAAK,EAAA,6DACIkM,GAAoB,GADxB,SAEUhM,IAAM,CACRE,OAAQ,OACRD,KAAM,CAACwI,KAAMlM,EAAU0P,UAAW,QAClClO,IAAI,GAAD,OAAKA,EAAL,2BAA2BmD,GAC9Bf,QAAS,CACJC,cAAe9D,KAErB+D,MAAK,SAAAC,GACJ6G,EAAiBD,EAAgB,GACjCvC,EAAMuC,EAAgB,GACtB1G,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,UACPC,KAAMN,EAAIL,KAAK+F,MAEnBgG,GAAoB,MACrBhL,OAAM,SAAAT,GACLC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,IAEVyL,GAAoB,MAxB5B,4CAXkG,sBA0ClG,IAHA,IAAIE,EAAQ,EACRC,EAAQ,EAEJC,EAAI,EAAGA,GAAG,GAAIA,IAAK,CACvB,IAAIC,EAAS1M,EAAM,EAChB6K,EAAU4B,KACTF,GAAgBG,GAGxB,IAAI,IAAID,EAAI,GAAIA,GAAG,GAAIA,IAAI,CACvB,IAAIC,EAAS1M,EAAM,EAChB6K,EAAU4B,KACTD,GAAgBE,GAIxB,IAAMC,EAAQJ,EAAQC,EAEtB,OACI,yBAAK9N,UAAU,gBACX,8CACA,8BAAOwN,EAASzK,MAChB,6CACA,kCAAQ2E,EAAa8F,EAASlM,QAC9B,gDACA,8BAAOgM,GACP,uCACA,8BAAOE,EAAS5I,SAChB,oDACA,kCAAQ8C,EAAamG,IACrB,oDACA,kCAAQnG,EAAaoG,IACrB,+CACA,kCAAQpG,EAAauG,IACrB,kDACA,kCAAQvG,EAAa+F,IACrB,4BAAQlK,WAAU0K,EAAQR,GAA0BxN,QA3EsC,4CA4EtF,yBAAKD,UAAY0N,EAAwB,QAAL,IAChC,kDACA,mCAASO,EAAQR,EAAY/F,EAAauG,EAAQR,GAAa,EAA/D,WAAoE,kBAAC,IAAD,QAExE,yBAAKzN,UAAW0N,EAAmB,+CAAiD,QAASlK,KAAK,UAC9F,0BAAMxD,UAAU,WAAhB,kBAOL6E,OAAMC,KAAKyI,ICjFbW,GAAO,SAACtO,GAEjB,IAAM3B,EAAQP,IAAQC,IAAI,SACpBkF,EAASjD,EAAMuO,MAAMC,OAAOvL,OAHP,EAICjF,mBAAS,IAJV,mBAIpB0P,EAJoB,KAIZe,EAJY,OAKOzQ,mBAAS,GALhB,mBAKpB6P,EALoB,KAKTa,EALS,OAMK1Q,mBAAS,IANd,mBAMpB4P,EANoB,KAMVe,EANU,OAOe3Q,mBAAS,GAPxB,mBAOpBiL,EAPoB,KAOLC,EAPK,KAQR5K,EAAcmK,IAAzBE,SAAWrK,SARQ,ECPF,SAAC2E,EAAQ3E,GAElC,IAAMD,EAAQP,IAAQC,IAAI,SAFqB,EAIbC,mBAAS,IAJI,mBAIxCuO,EAJwC,KAI7BqC,EAJ6B,OAMG5Q,oBAAS,GANZ,mBAMxC6Q,EANwC,KAMrBC,EANqB,KAmC/C,OA3BApP,qBAAU,WAEN,GAAGpB,EAAS,6CAGR,8BAAAuD,EAAA,sEAE2BE,IAAM,CACzBE,OAAQ,OACRD,KAAM,CAACwI,KAAMlM,GACbwB,IAAI,GAAD,OAAKA,EAAL,2BAA2BmD,GAC9Bf,QAAS,CACJC,cAAe9D,KAP5B,cAEUuG,EAFV,gBAWuBA,EAAS5C,KAXhC,cAWUA,EAXV,gBAaU4M,EAAa5M,GAbvB,OAeI8M,GAAqB,GAfzB,4CAHQ,sBACRA,GAAqB,GADb,mCAqBRC,MAEN,CAAC9L,EAAQ3E,EAAUD,IAEd,CAACkO,YAAWsC,qBDnBsBG,CAAc/L,EAAQ3E,GAAvDiO,EATmB,EASnBA,UAAWsC,EATQ,EASRA,kBAEbnI,EAAQ+C,uBAAY,SAACzH,GACpB0E,GACCwC,EAAiBlH,KAEvB,IAwCF,OAtCAtC,qBAAU,WAAI,4CACV,8BAAAmC,EAAA,mEAEWvD,EAFX,gCAGmCyD,IAAM,CACzBC,KAAM,CAAEiB,OAAQA,EAAQ8C,SAAUzH,GAClC2D,OAAQ,OACRnC,IAAKA,mBACLoC,QAAS,CACLC,cAAe9D,KARnC,QAGkBuG,EAHlB,QAWoB5C,KAAKM,OACPA,EAAqC,cAA7BsC,EAAS5C,KAAKM,MAAMa,KAAuB,sBAAwByB,EAAS5C,KAAKM,MAAMa,KACrGZ,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,MAGVoM,EAAa9J,EAAS5C,KAAK6L,WAC3BY,EAAU7J,EAAS5C,KAAKyI,UACxBkE,EAAY/J,EAAS5C,KAAKA,OArBtC,uDAyBQO,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAK,EAAD,KA5BhB,0DADU,uBAAC,WAAD,wBAiCVsM,KAEF,CAAC3Q,EAAU2E,EAAQ5E,EAAO4K,KAGxB2E,GAAYiB,EACL,yBAAKzO,UAAU,gBAClB,yBAAKA,UAAU,yCAAyCwD,KAAK,UACzD,0BAAMxD,UAAU,WAAhB,gBAMR,yBAAKA,UAAU,QACX,6BACI,yBAAKA,UAAU,mBACX,kBAAC,GAAD,CAAMqH,QAASoH,EAAmBxQ,MAAOA,EAAOC,SAAUA,EAAUsD,SAAUgM,EAASzK,KAAMzB,MAAOkM,EAASlM,MAAOuB,OAAQ2K,EAAS1K,IAAKqJ,UAAWA,MAG7J,6BACI,kBAAC,GAAD,CAAY7F,MAAOA,EAAO5G,IAAKA,EAAK4N,OAAQA,EAAQG,UAAWA,EAAWD,SAAUA,EAAUrB,UAAWA,EAAWlO,MAAOA,EAAOC,SAAUA,EAAU2E,OAAQA,OExB/JiM,I,aAnDiB,SAAAlP,GAAU,IAAD,EAEPhC,oBAAS,GAFF,mBAE9ByJ,EAF8B,KAErBC,EAFqB,iDAIrC,sBAAA7F,EAAA,6DAEI6F,GAAW,GAFf,SAIU3F,IAAM,CACRC,KAAM,CAACmN,MAAOnP,EAAMmP,OACpBlN,OAAQ,OACRnC,IAAKA,iCACNsC,MAAK,SAAAC,GACJqF,GAAW,GACRrF,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,UACPC,KAAMN,EAAIL,KAAK+F,SAGxBhF,OAAM,SAAAC,GACL0E,GAAW,GACXnF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OA5BlB,4CAJqC,sBAqCrC,OAAO,kBAAC,EAAD,CAAO/C,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SAC/C,yBAAKF,UAAU,qBACX,qIACA,6GACA,4BAAQC,QAzCqB,2CAyCGsD,WAAU8D,EAAwBrH,UAAU,4CACxE,yBAAKA,UAAWqH,EAAU,0CAA4C,QAAS7D,KAAK,UAChF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAIA,UAAWqH,EAAU,QAAU,IAAI,kBAAC,IAAD,MAAvC,oBC6BD7G,gBAtEM,SAACZ,GAAW,IAAD,EAEMhC,oBAAS,GAFf,mBAErBqI,EAFqB,KAEVC,EAFU,KAQ5B,IAAM6I,EAAQ3O,IACR4O,EAAW5O,IAEX6O,EAAO,CACTF,MAAOA,EAAMhR,MACbiR,SAAUA,EAASjR,OAbK,EAgBYH,oBAAS,GAhBrB,mBAgBrBsR,EAhBqB,KAgBPC,EAhBO,KA+C5B,OACI,yBAAKnP,UAAU,sBACX,kBAAC,IAAD,CAAMA,UAAU,OAAOgF,GAAG,KAAI,yBAAKhF,UAAU,cAAc0E,IAAKO,EAAMN,IAAI,aAAa,yBAAK3E,UAAU,cAAc0E,IAAKQ,EAAWP,IAAI,eACxI,0BAAMxB,SAhCd,SAAuB5C,GACnBA,EAAEmB,iBACFyN,GAAgB,GAChBxN,IAAMyN,KAAK1P,oBAAyBuP,GACnCjN,MAAK,SAAAC,GACFkN,GAAgB,GACblN,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAEU,IAAxBD,EAAIL,KAAKyN,WACdnJ,GAAa,IAEbtG,EAAM5B,WAAWiE,EAAIL,KAAK3D,MAAOgE,EAAIL,KAAK1D,UAC1C0B,EAAM4C,QAAQC,KAAd,aAGPE,OAAO,SAAAC,GACJuM,GAAgB,GAChBhN,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,SASN,yBAAK5C,UAAU,2BACX,yCAAOsP,aAAa,KAAKlM,KAAK,QAAQpD,UAAU,gBAAmB+O,EAAnE,CAA0EzL,YAAY,YAE1F,yBAAKtD,UAAU,2BACX,yCAAOsP,aAAa,KAAKtP,UAAU,eAAeoD,KAAK,YAAe4L,EAAtE,CAAgF1L,YAAY,mBAC5F,uBAAG6E,KAAK,2BAA2B9I,OAAO,SAAS+I,IAAI,uBAAvD,yBAEJ,4BAAQ7E,WAAU2L,EAA6B9L,KAAK,SAASpD,UAAU,gBACnE,yBAAKA,UAAWkP,EAAe,2CAA6C,QAAS1L,KAAK,UACtF,0BAAMxD,UAAU,WAAhB,eAER,uBAAGA,UAAWkP,EAAe,QAAU,IAAvC,YAGJ,kBAAC,GAAD,CAAyBH,MAAOA,EAAMhR,MAAO8B,OAAQoG,EAAW/F,QA7DxE,WACIgG,EAAa,aCjBN,OAA0B,oCCA1B,OAA0B,gCCA1B,OAA0B,oCC2D1BqJ,I,OAnDgB,SAAA3P,GAAU,IAAD,EAENhC,oBAAS,GAFH,mBAE7ByJ,EAF6B,KAEpBC,EAFoB,iDAIpC,sBAAA7F,EAAA,6DAEI6F,GAAW,GAFf,SAIU3F,IAAM,CACRC,KAAM,CAACmN,MAAOnP,EAAMmP,OACpBlN,OAAQ,OACRnC,IAAKA,iCACNsC,MAAK,SAAAC,GACJqF,GAAW,GACRrF,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,UACPC,KAAMN,EAAIL,KAAK+F,SAGxBhF,OAAM,SAAAC,GACL0E,GAAW,GACXnF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,OA5BlB,4CAJoC,sBAqCpC,OAlCA0J,QAAQC,IAAI3M,EAAMmP,OAkCX,kBAAC,EAAD,CAAOlP,OAAQD,EAAMC,OAAQK,QAASN,EAAMM,SAC/C,yBAAKF,UAAU,qBACX,qHACA,6FACA,4BAAQC,QAzCoB,2CAyCIsD,WAAU8D,EAAwBrH,UAAU,4CACxE,yBAAKA,UAAWqH,EAAU,0CAA4C,QAAS7D,KAAK,UAChF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAIA,UAAWqH,EAAU,QAAU,IAAI,kBAAC,IAAD,MAAvC,oBCtCHmI,GAAS,SAAC5P,GAELlC,IAAQC,IAAI,UAGtBiC,EAAM4C,QAAQC,KAAd,SAGJ,IAAMgN,EAAe,8CACfxF,EAAiB,SAEfjM,EAAe+K,qBAAWzL,GAA1BU,WAXqB,EAaKJ,oBAAS,GAbd,mBAatBqI,EAbsB,KAaXC,EAbW,KAmB7B,IAAMhI,EAAWkC,IACX2O,EAAQ3O,IACRsP,EAAMtP,IACN4O,EAAW5O,IACXuP,EAAmBvP,IAEnB6O,EAAO,CACT/Q,SAAS,IAAD,OAAMA,EAASH,OACvBgR,MAAOA,EAAMhR,MACb2R,IAAKA,EAAI3R,MACTiR,SAAUA,EAASjR,MACnB4R,iBAAkBA,EAAiB5R,MACnC6R,KAAM,CACFC,QAAS,KAhCY,EAoCejS,oBAAS,GApCxB,mBAoCtBkS,EApCsB,KAoCNC,EApCM,OAsCKnS,oBAAS,GAtCd,mBAsCtBoS,EAtCsB,KAsCXC,EAtCW,OAuCarS,oBAAS,GAvCtB,mBAuCtBsS,EAvCsB,KAuCPC,EAvCO,KAgF7B,OACI,oCAEA,kBAAC,GAAD,CAAanS,WAAYA,IAEzB,yBAAKgC,UAAU,oBAEX,yBAAKA,UAAU,eAEX,yBAAKA,UAAU,eACX,6BACI,yBAAKA,UAAU,iBAAiB2E,IAAI,UAAUD,IAAK0L,MAGvD,6BACI,yBAAKpQ,UAAU,aAAa2E,IAAI,MAAMD,IAAK2L,OAInD,yBAAKrQ,UAAU,gBAAgB0E,IAAK4L,GAAK3L,IAAI,MAIhD,yBAAK3E,UAAU,gBACZ,yBAAKA,UAAU,eACH,wBAAIA,UAAU,2CAAd,eAGA,yBAAKA,UAAU,uBACX,0BAAMmD,SApElC,SAAuB5C,GAGnB,OAFAA,EAAEmB,iBAECxD,EAASH,MAAMkJ,OAAS,GAAK/I,EAASH,MAAMkJ,OAAS,GAC7CgJ,GAAa,IAClBA,GAAa,GAChBhG,EAAeS,KAAKxM,EAASH,OACtBkS,GAAa,IACjBA,GAAa,GACfR,EAAa/E,KAAKsE,EAASjR,QAEzBgS,GAAkB,GAExBI,GAAiB,QAEjBxO,IAAMyN,KAAM1P,oBAAyBuP,GACpCjN,MAAK,SAAAC,GACFkO,GAAiB,GACdlO,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBgE,GAAa,MAGpBvD,OAAO,SAAAC,GACJuN,GAAiB,GACjBhO,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,QAvBJmN,GAAkB,OA2DA,yBAAK/P,UAAU,0BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,6BAAf,MAEJ,yCAAOoD,KAAK,OAAOV,GAAG,gCAAgC1C,UAAU,gBAAmB9B,EAAnF,CAA6FoF,YAAY,oBAAoBiN,UAAQ,MAEzI,2BAAOvQ,UAAYgQ,EAA+B,QAAnB,kBAA4B,kBAAC,IAAD,MAA3D,qDAEJ,yBAAKhQ,UAAU,0BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,6BAA4B,kBAAC,IAAD,QAE/C,yCAAOsP,aAAa,OAAOlM,KAAK,QAAQpD,UAAU,gBAAmB+O,EAArE,CAA4EzL,YAAY,QAAQiN,UAAQ,OAGhH,yBAAKvQ,UAAU,0BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,6BAA4B,kBAAC,IAAD,QAE/C,yCAAOoD,KAAK,OAAOpD,UAAU,gBAAmB0P,EAAhD,CAAqDpM,YAAY,iBAAiBiN,UAAQ,OAGlG,yBAAKvQ,UAAU,0BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,6BAA4B,kBAAC,IAAD,QAE/C,yCAAOsP,aAAa,OAAOlM,KAAK,WAAYpD,UAAU,gBAAmBgP,EAAzE,CAAmF1L,YAAY,gBAAaiN,UAAQ,MAExH,2BAAOvQ,UAAY8P,EAAoC,QAAnB,kBAA4B,kBAAC,IAAD,MAAhE,yEAEJ,yBAAK9P,UAAU,0BACf,yBAAKA,UAAU,UACP,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,6BAA4B,kBAAC,IAAD,QAE/C,yCAAOsP,aAAa,OAAOlM,KAAK,WAAWoN,UAAU,eAAexQ,UAAU,gBAAmB2P,EAAjG,CAAmHrM,YAAY,0BAAuBiN,UAAQ,OAGtK,4BAAQhN,WAAU2M,EAA8B9M,KAAK,SAASpD,UAAU,iBACpE,yBAAKA,UAAWkQ,EAAgB,6BAA+B,QAAS1M,KAAK,UACzE,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAWkQ,EAAgB,QAAU,IAAxC,qBAOhC,kBAAC,GAAD,CAAwBnB,MAAOA,EAAMhR,MAAO8B,OAAQoG,EAAW/F,QApJnE,WACIgG,EAAa,WCgBNuK,GAzCU,SAAC7Q,GAEtB,IAAM8Q,EAAY9Q,EAAMuO,MAAMC,OAAOnQ,MAFL,EAGAL,oBAAS,GAHT,mBAGf0J,GAHe,WAIxBtJ,EAAe+K,qBAAWzL,GAA1BU,WAkCR,OAJAsB,qBAAU,WA3BNqC,IAAM,CACFE,OAAQ,OACRD,KAAM,CAAE8O,UAAWA,GACnBhR,IAAKA,0BACNsC,MAAK,SAAAC,GACJqF,GAAW,GACRrF,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnBlE,EAAWiE,EAAIL,KAAK3D,MAAOgE,EAAIL,KAAK1D,UACpC0B,EAAM4C,QAAQC,KAAd,aAELE,OAAM,SAAAT,GACLoF,GAAW,GACXnF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,SAQhB,CAACwO,IAEI,+B,SCjCEC,I,OAAU,WAEnB,IAAM1S,EAAQP,IAAQC,IAAI,SAElB4K,EAAaF,IAAbE,SAJiB,EAMa3K,mBAAS,IANtB,mBAMlBgT,EANkB,KAMLC,EANK,OAOajT,mBAAS,IAPtB,mBAOlBkT,EAPkB,KAOLC,EAPK,OASSnT,oBAAS,GATlB,mBASlBoT,EATkB,KASPC,EATO,KAWzB,SAASvJ,EAAatG,GAClB,OAAO,IAAI4B,KAAKC,aAAa,SAASC,OAAO9B,GAZxB,MAeOxD,oBAAS,GAfhB,mBAejByJ,EAfiB,KAeRC,EAfQ,OAiBO1J,mBAAS,IAjBhB,mBAiBjBsT,EAjBiB,KAiBRC,EAjBQ,OAmBWvT,mBAAS,GAnBpB,mBAmBlBwI,EAnBkB,KAmBNC,EAnBM,OAqBWzI,mBAAS,GArBpB,mBAqBlBmI,EArBkB,KAqBNC,EArBM,OAuByBpI,mBAAS,GAvBlC,mBAuBlBwT,EAvBkB,KAuBCC,EAvBD,OAyBiBzT,mBAAS,GAzB1B,mBAyBlB0T,EAzBkB,KAyBHC,EAzBG,KA2BzBjS,qBAAU,WAENgI,GAAW,GAEX3F,IAAM,CACFE,OAAQ,OACRD,KAAM,CAACkF,KAAMV,GACb1G,IAAKA,mBACLoC,QAAS,CACLC,cAAe9D,KAGtB+D,MAAK,SAAAC,GAEF,GADAqF,GAAW,GACRrF,EAAIL,KAAKM,MACR,OAAOC,IAAKC,KAAK,CACbC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnB8D,EAAc/D,EAAIL,KAAKmE,YACvBoL,EAAWlP,EAAIL,KAAKA,MACjBK,EAAIL,KAAK4P,SACRD,EAAiBtP,EAAIL,KAAK0P,kBAGnC3O,OAAO,SAAAC,GACN0E,GAAW,GACXnF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMK,SAIf,CAAC3E,EAAOmT,IA/Dc,MAiEWxT,oBAAS,GAjEpB,mBAiElB6T,EAjEkB,KAiENC,EAjEM,KAmEzB,SAASC,EAAWpR,GAEbA,GACCA,EAAEmB,iBAGN4F,GAAW,GAEX,IAAMsK,EAAYhB,EAAYiB,MAAM,KAE9BC,EAAe,IAAIC,KAAKH,EAAU,GAAIA,EAAU,GAAG,EAAGA,EAAU,IAEhEI,EAAalB,EAAYe,MAAM,KAE/BI,EAAa,IAAIF,KAAKC,EAAW,GAAIA,EAAW,GAAG,EAAGA,EAAW,GAAI,GAAI,EAAG,GAE9EP,GACApL,EAAc,GAGlB1E,IAAM,CACFE,OAAQ,OACRD,KAAM,CAAEsQ,gBAAiBJ,EAAcK,cAAeF,EAAYnL,KAAMV,GACxE1G,IAAKA,mBACLoC,QAAS,CACLC,cAAe9D,KAEpB+D,MAAK,SAAAC,GACJyP,GAAc,GACdP,EAAWlP,EAAIL,KAAKA,MACpBoE,EAAc/D,EAAIL,KAAKmE,YACvBuB,GAAW,MAInB,OAAO,yBAAKtH,UAAU,qBAElB,yBAAKA,UAAU,iBACX,4BAAI,kBAAC,IAAD,MAAJ,0BAEJ,0BAAMA,UAAU,YAAYmD,SAAUwO,GAClC,yBAAK3R,UAAU,kBACX,6CAAyB,kCAAQ0H,EAAaa,EAASX,UAE3D,uBAAG3H,QAAS,kBAAIgR,GAAcD,KAA9B,sBACA,yBAAK/Q,QAAS,kBAAIgR,GAAcD,IAAYhR,UAAU,2BAA0B,kBAAE,KAAF,OAChF,uBAAGA,UAAWgR,EAAY,GAAK,gBAA/B,UACA,2BAAOhR,UAAWgR,EAAY,GAAK,eAAgB5N,KAAK,OAAOmN,UAAU,EAAMjQ,SAAU,SAACC,GAAD,OAAKsQ,EAAetQ,EAAElB,OAAOtB,UACtH,uBAAGiC,UAAWgR,EAAY,GAAK,gBAA/B,UACA,2BAAOhR,UAAWgR,EAAY,GAAK,eAAgB5N,KAAK,OAAOmN,UAAU,EAAMjQ,SAAU,SAACC,GAAD,OAAKwQ,EAAexQ,EAAElB,OAAOtB,UACtH,4BAAQiC,UAAWgR,EAAY,GAAK,gBAApC,WAEJ,yBAAKhR,UAAWsR,EAAgB,EAAI,6BAA+B,SAAnE,sCACwC5J,EAAa4J,IAErD,yBAAKtR,UAA0B,IAAf+F,EAAmB,QAAU,4BACzC,4BAAQxC,SAAyB,IAAf6C,EAAiCpG,UAAU,oBAAoBC,QAAS,WACtFoG,EAAcD,EAAa,GACxBqL,EACCE,IACEN,EAAqBD,EAAoB,KAC3C,kBAAC,IAAD,CAAoB3M,KAAK,QAE7B,2BAAG,8BAAO2B,GAAV,MAAgCL,GACpC,4BAAQxC,SAAU6C,IAAeL,EAA2B/F,UAAU,oBAAoBC,QAAS,WAC/FoG,EAAcD,EAAa,GACxBqL,EACCE,IACEN,EAAqBD,EAAoB,KAChD,kBAAC,IAAD,CAAqB3M,KAAK,SAI7B4C,EAAU,6BACN,yBAAKrH,UAAU,6CAA6CwD,KAAK,UACjE,0BAAMxD,UAAU,WAAhB,gBAGJkR,EAAQjK,QAAU,EAAI,6BAClB,wBAAIjH,UAAU,qBAAd,mBAEJ,yBAAKA,UAAU,gBAEXkR,EAAQhK,KAAI,SAACgK,GACT,MACqB,QAAjBA,EAAQ9N,KAAkB,wBAAInE,IAAKiS,EAAQpO,KACvC,yBAAK9C,UAAU,qBAAf,UAAuC,IAAI+R,KAAKb,EAAQkB,MAAMC,UAA9D,YAA2E,IAAIN,KAAKb,EAAQkB,MAAME,WAAa,EAA/G,YAAoH,IAAIP,KAAKb,EAAQkB,MAAMG,cAA3I,gBAAgK,IAAIR,KAAKb,EAAQkB,MAAMI,WAAvL,YAAqM,IAAIT,KAAKb,EAAQkB,MAAMK,eAC5N,6BACI,uBAAGzS,UAAU,6BAAb,qBACA,2BAAIkR,EAAQ1P,UACZ,uBAAGxB,UAAU,6BAAb,cACA,+BAAK0H,EAAawJ,EAAQtJ,UAE9B,yBAAK5H,UAAU,gCACX,uBAAGA,UAAU,sBAAb,MAAsC0H,EAAawJ,EAAQwB,QAGlD,QAAjBxB,EAAQ9N,KAAiB,wBAAInE,IAAKiS,EAAQpO,KACtC,yBAAK9C,UAAU,qBAAf,UAAuC,IAAI+R,KAAKb,EAAQkB,MAAMC,UAA9D,YAA2E,IAAIN,KAAKb,EAAQkB,MAAME,WAAa,EAA/G,YAAoH,IAAIP,KAAKb,EAAQkB,MAAMG,cAA3I,gBAAgK,IAAIR,KAAKb,EAAQkB,MAAMI,WAAvL,YAAqM,IAAIT,KAAKb,EAAQkB,MAAMK,eAC5N,6BACI,uBAAGzS,UAAU,6BAAb,iBACA,2BAAIkR,EAAQ1P,UACZ,uBAAGxB,UAAU,6BAAb,cACA,+BAAK0H,EAAawJ,EAAQtJ,UAE9B,yBAAK5H,UAAU,gCACX,uBAAGA,UAAU,sBAAb,MAAsC0H,EAAawJ,EAAQ5F,cAGlD,YAAjB4F,EAAQ9N,KAAqB,wBAAInE,IAAKiS,EAAQpO,KAC1C,yBAAK9C,UAAU,qBAAf,UAAuC,IAAI+R,KAAKb,EAAQkB,MAAMC,UAA9D,YAA2E,IAAIN,KAAKb,EAAQkB,MAAME,WAAa,EAA/G,YAAoH,IAAIP,KAAKb,EAAQkB,MAAMG,cAA3I,gBAAgK,IAAIR,KAAKb,EAAQkB,MAAMI,WAAvL,YAAqM,IAAIT,KAAKb,EAAQkB,MAAMK,eAC5N,6BACI,uBAAGzS,UAAU,6BAAb,aACA,+BAAK0H,EAAawJ,EAAQyB,gBAC1B,uBAAG3S,UAAU,6BAAb,cACA,+BAAK0H,EAAawJ,EAAQtJ,UAE9B,yBAAK5H,UAAU,gCACX,uBAAGA,UAAU,sBAAb,MAAsC0H,EAAawJ,EAAQyB,kBAGjD,cAAlBzB,EAAQ5H,OAAyB,wBAAIrK,IAAKiS,EAAQpO,KAC9C,yBAAK9C,UAAU,qBAAf,UAAuC,IAAI+R,KAAKb,EAAQkB,MAAMC,UAA9D,YAA2E,IAAIN,KAAKb,EAAQkB,MAAME,WAAa,EAA/G,YAAoH,IAAIP,KAAKb,EAAQkB,MAAMG,cAA3I,gBAAgK,IAAIR,KAAKb,EAAQkB,MAAMI,WAAvL,YAAqM,IAAIT,KAAKb,EAAQkB,MAAMK,eAC5N,6BACI,uBAAGzS,UAAU,6BAAb,WACA,+BAAK0H,EAAawJ,EAAQ0B,iBAC1B,uBAAG5S,UAAU,6BAAb,cACA,+BAAK0H,EAAawJ,EAAQtJ,UAE9B,yBAAK5H,UAAU,gCACX,uBAAGA,UAAU,sBAAb,MAAsC0H,EAAawJ,EAAQ0B,uBAQnF,yBAAK5S,UAA0B,IAAf+F,EAAmB,QAAU,iCACzC,4BAAQxC,SAAyB,IAAf6C,EAAiCpG,UAAU,oBAAoBC,QAAS,WACtFoG,EAAcD,EAAa,GACxBqL,EACCE,IACEN,EAAqBD,EAAoB,KAC3C,kBAAC,IAAD,CAAoB3M,KAAK,QAE7B,2BAAG,8BAAO2B,GAAV,MAAgCL,GACpC,4BAAQxC,SAAU6C,IAAeL,EAA2B/F,UAAU,oBAAoBC,QAAS,WAC/FoG,EAAcD,EAAa,GACxBqL,EACCE,IACEN,EAAqBD,EAAoB,KAChD,kBAAC,IAAD,CAAqB3M,KAAK,YCtJ1BoO,I,MA1EY,SAAC,GAAiC,IAAhCzS,EAA+B,EAA/BA,cAAeV,EAAgB,EAAhBA,IAAKzB,EAAW,EAAXA,MAAW,EAERL,oBAAS,GAFD,mBAEjDkV,EAFiD,KAE/BC,EAF+B,OAGZnV,oBAAS,GAHG,mBAGjDkS,EAHiD,KAGjCC,EAHiC,OAIVnS,oBAAS,GAJC,mBAIjDoV,EAJiD,KAIhCC,EAJgC,KAMlDxD,EAAe,8CACfT,EAAW5O,IACX8S,EAAc9S,IACd+S,EAAqB/S,IA6C3B,OACI,yBAAKJ,UAAU,0BACX,4BAAI,kBAAC,IAAD,MAAJ,+BACA,0BAAMmD,SA9Cd,SAAwB5C,GAGpB,OAFAA,EAAEmB,iBAEE+N,EAAa/E,KAAKwI,EAAYnV,QAE3BgS,GAAkB,GAEtBmD,EAAYnV,QAAUoV,EAAmBpV,MAiC/BgV,GAAoB,IA/B7BE,GAAmB,QAEnBtR,IAAM,CACFE,OAAQ,OACRD,KAAM,CAAEoN,SAAUA,EAASjR,MAAOmV,YAAaA,EAAYnV,OAC3D2B,IAAKA,EAAI,sBACToC,QAAS,CACLC,cAAe9D,KAEpB+D,MAAM,SAAAC,GACLgR,GAAmB,GAChBhR,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAOL,EAAIL,KAAK+F,SAGzBhF,OAAO,SAAAT,GACN+Q,GAAmB,GACnB9Q,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,SAjCP6N,GAAkB,KA2CrB,2CAAWf,EAAX,CAAqBM,aAAa,OAAOiB,UAAQ,EAACnN,KAAK,WAAWE,YAAY,0BAC9E,2CAAW4P,EAAX,CAAwB5D,aAAa,OAAOiB,UAAQ,EAACnN,KAAK,WAAWE,YAAY,yBACjF,2CAAW6P,EAAX,CAA+B7D,aAAa,OAAOiB,UAAQ,EAACnN,KAAK,WAAWE,YAAY,6BACxF,uBAAGtD,UAAW8S,EAAmB,wBAA0B,SAAS,kBAAC,IAAD,MAApE,gCACA,uBAAG9S,UAAY8P,EAA2C,QAA1B,yBAAmC,kBAAC,IAAD,MAAnE,wEACA,4BAAQvM,WAAUyP,GACd,yBAAKhT,UAAWgT,EAAkB,0CAA4C,QAASxP,KAAK,UACxF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAWgT,EAAkB,QAAU,IAA1C,mCCCLI,GApES,SAAC,GAAiC,IAAhC1T,EAA+B,EAA/BA,IAAKU,EAA0B,EAA1BA,cAAenC,EAAW,EAAXA,MAAW,EAEXL,oBAAS,GAFE,mBAE9CyV,EAF8C,KAE/BC,EAF+B,OAGb1V,oBAAS,GAHI,mBAG9C2V,EAH8C,KAGhCC,EAHgC,KAK/CzE,EAAQ3O,IACRqT,EAAWrT,IACXsT,EAAkBtT,IA0CxB,OACI,yBAAKJ,UAAU,uBACX,4BAAI,kBAAC,IAAD,MAAJ,uBACA,0BAAMmD,SA3Cd,SAAqB5C,GAGjB,GAFAA,EAAEmB,iBAEC+R,EAAS1V,QAAU2V,EAAgB3V,MAkChC,OAAQuV,GAAiB,GAhC3BE,GAAgB,GAEhB7R,IAAM,CACFE,OAAQ,OACRD,KAAM,CAAE6R,SAAUA,EAAS1V,MAAOgR,MAAOA,EAAMhR,OAC/C2B,IAAKA,EAAI,sBACToC,QAAS,CACLC,cAAe9D,KAEpB+D,MAAM,SAAAC,GACLuR,GAAgB,GACbvR,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,QAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAOL,EAAIL,KAAK+F,SAGzBhF,OAAO,SAAAT,GACNsR,GAAgB,GAChBrR,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,SAWV,yCAAOQ,GAAG,cAAc4M,aAAa,QAAWP,EAAhD,CAAuDwB,UAAQ,EAACnN,KAAK,QAAQE,YAAY,kBACzF,2CAAWmQ,EAAX,CAAqBnE,aAAa,OAAOiB,UAAQ,EAACnN,KAAK,QAAQE,YAAY,iBAC3E,2CAAWoQ,EAAX,CAA4BpE,aAAa,OAAOiB,UAAQ,EAACnN,KAAK,QAAQE,YAAY,qBAClF,uBAAGtD,UAAWqT,EAAgB,wBAA0B,SAAS,kBAAC,IAAD,MAAjE,gCACA,4BAAQ9P,WAAUgQ,GACd,yBAAKvT,UAAWuT,EAAe,0CAA4C,QAAS/P,KAAK,UACrF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAWuT,EAAe,QAAU,IAAvC,yBC5DdI,GAAe,SAAC,GAAoD,IAAnD1V,EAAkD,EAAlDA,MAAOyB,EAA2C,EAA3CA,IAAKU,EAAsC,EAAtCA,cAAewT,EAAuB,EAAvBA,QAASrL,EAAc,EAAdA,SAEjDsL,EAAc,aAFiD,EAGrCjW,oBAAS,GAH4B,mBAG9DkW,EAH8D,KAGpDC,EAHoD,OAIvBnW,oBAAS,GAJc,mBAI9DoW,EAJ8D,KAI7CC,EAJ6C,OAKnCrW,oBAAS,GAL0B,mBAK9DsW,EAL8D,KAKnDC,EALmD,OAMjBvW,oBAAS,GANQ,mBAM9DwW,EAN8D,KAM1CC,EAN0C,OAOjCzW,oBAAS,GAPwB,mBAO9D0W,EAP8D,KAOlDC,EAPkD,OAQjC3W,oBAAS,GARwB,mBAQ9D4W,EAR8D,KAQlDC,EARkD,OASrB7W,oBAAS,GATY,mBAS9D8W,EAT8D,KAS5CC,EAT4C,OAUnC/W,mBAAS,IAV0B,mBAU9DgX,EAV8D,KAUnDC,EAVmD,OAW3CjX,mBAAS,GAXkC,mBAW9D0I,EAX8D,KAWvDC,EAXuD,OAY7C3I,mBAAS,IAZoC,mBAY9DwF,GAZ8D,KAYxD0R,GAZwD,KAkBrE,IAAMjF,GAAUzP,IACVsP,GAAMtP,IACN2U,GAAe3U,IApBgD,8CAsBrE,WAA8BG,GAA9B,SAAAkB,EAAA,yDACIlB,EAAEmB,iBAEU,SAAT0B,IAA4B,KAATA,GAH1B,yCAIemR,GAAc,IAJ7B,OAKUA,GAAc,GALxB,UAMQV,EAAYnJ,KAAKgF,GAAI3R,OAN7B,0CAOeoW,GAAa,IAP5B,QAQUA,GAAa,GARvB,WASgB,sBAATa,IAAyC,KAATA,GATvC,0CAUeP,GAAc,IAV7B,QAWUA,GAAc,GAXxB,WAYQZ,EAAYnJ,KAAKqK,GAAahX,OAZtC,0CAaesW,GAAsB,IAbrC,QAcUA,GAAsB,GAdhC,WAeqB,mBAAdO,GAAgD,KAAdA,EAfzC,0CAgBeD,GAAoB,IAhBnC,QAiBUA,GAAoB,GAjB9B,eAmBIV,GAAmB,GAnBvB,UAqBUtS,IAAM,CACRE,OAAQ,OACRD,KAAMqT,GACNvV,IAAKA,EAAI,oBACToC,QAAS,CACLC,cAAe9D,KAEpB+D,MAAM,SAAAC,GACLgS,GAAmB,GAChBhS,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAOL,EAAIL,KAAK+F,MAEpBpB,EAASD,EAAQ,GACjBsN,EAAQtN,EAAQ,OAErB3D,OAAO,SAAAT,GACN+R,GAAmB,GACnB9R,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,OAjDlB,6CAtBqE,sBA4ErE5C,qBAAU,WAEHiJ,EAASqH,MACLrH,EAASqH,KAAKC,SACbkE,GAAY,KAGrB,CAACxL,IAnFiE,IAc/CnH,GAd+C,GAuHzBxD,oBAAS,GAvHgB,qBAuH9DsX,GAvH8D,MAuH9CC,GAvH8C,SAoI7CvX,mBAAS,IApIoC,qBAoI9DoX,GApI8D,MAoIxDI,GApIwD,MAmL/DH,GAAiB,CACnBpF,QAASA,GAAQ9R,MAAOsX,KAAMjS,GAAMsM,IAAKA,GAAI3R,MAAOuX,MAAON,GAAMD,aAAcA,GAAahX,MAAOwX,WAAYX,GAGnH,OACI,oCAESd,EAgDD,yBAAK9T,UAAU,uBACX,4BAAI,kBAAC,IAAD,MAAJ,uBACA,6BACI,yBAAKA,UAAU,+BACX,uBAAGA,UAAU,gBAAb,YACA,uBAAGA,UAAU,qBAAqBuI,EAASqH,KAAKC,UAEpD,yBAAK7P,UAAU,+BACX,uBAAGA,UAAU,gBAAb,0BACA,uBAAGA,UAAU,qBAAqBuI,EAASqH,KAAKyF,KAAhD,UArOFjU,GAqO6EmH,EAASqH,KAAKF,IApOtG,IAAI1M,KAAKC,aAAa,SAASC,OAAO9B,OAsO7B,yBAAKpB,UAAU,+BACX,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,qBAAqBuI,EAASqH,KAAK0F,MAAhD,MAA0D/M,EAASqH,KAAK2F,aAE5E,yBAAKvV,UAAU,+BACX,uBAAGA,UAAU,gBAAb,qBACA,uBAAGA,UAAU,qBAAqBuI,EAASqH,KAAKmF,eAEpD,yBAAK/U,UAAU,uBACX,4BAAQC,QAzKhC,SAA0BM,GAEtBA,EAAEmB,iBAEFC,IAAM,CACFE,OAAQ,OACRD,KAAMqT,GACNvV,IAAKA,EAAI,sBACToC,QAAS,CACLC,cAAe9D,KAEpB+D,MAAM,SAAAC,GACFA,EAAIL,KAAKM,MACRC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAMN,EAAIL,KAAKM,SAGnBC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAOL,EAAIL,KAAK+F,MAEpBoM,GAAY,OAEjBpR,OAAO,SAAAT,GACNC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACPC,KAAML,SA4IyC,kBAAC,IAAD,MAAnC,YACA,4BAAQjC,QAAS,WAAK8T,GAAY,GAAQoB,IAAkB,KAAS,kBAAC,IAAD,MAArE,aApEZ,yBAAKnV,UAAU,4BACX,uDACA,0BAAMmD,SA7L+C,8CA8LjD,2CAAW0M,GAAX,CAAoBU,UAAQ,EAACnN,KAAK,OAAOE,YAAY,mCACrD,yBAAKtD,UAAU,UACX,4BAAQuQ,UAAQ,EAACtQ,QAjEhB,SAACM,GACtB,IAAM6C,EAAO7C,EAAElB,OAAOtB,MACtB+W,GAAQ1R,IA+DwDpD,UAAU,cAAc+C,KAAK,QACrE,4BAAQ/C,UAAU,gBAAlB,QAxER,CAChB,CAAEjC,MAAO,MACT,CAAEA,MAAO,OACT,CAAEA,MAAO,OAuE+BmJ,KAAI,SAACsO,GAAD,OACZ,4BAAQvW,IAAKuW,EAAKzX,MAAOA,MAAOyX,EAAKzX,OAAQyX,EAAKzX,WAI9D,2CAAW2R,GAAX,CAAgBa,UAAQ,EAACnN,KAAK,OAAOE,YAAY,+BAErD,uBAAGtD,UAAYsU,EAAuC,QAA1B,yBAAmC,kBAAC,IAAD,MAA/D,oBACA,uBAAGtU,UAAYkU,EAAqC,QAA1B,yBAAmC,kBAAC,IAAD,MAA7D,iBACA,4BAAQjU,QAzCH,SAACM,GACtB,IAAMyU,EAAOzU,EAAElB,OAAOtB,MACtBqX,GAAQJ,IAuC2CzE,UAAQ,EAACvQ,UAAU,oBAAoB+C,KAAK,SAC3E,4BAAQ/C,UAAU,gBAAlB,qBAvEJ,CAChB,CAAEjC,MAAO,cACT,CAAEA,MAAO,eACT,CAAEA,MAAO,SACT,CAAEA,MAAO,YACT,CAAEA,MAAO,qBACT,CAAEA,MAAO,wBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,iCACT,CAAEA,MAAO,qBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,cACT,CAAEA,MAAO,8BACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,+BACT,CAAEA,MAAO,qBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,cACT,CAAEA,MAAO,yBA+C2BmJ,KAAI,SAACsO,GAAD,OACZ,4BAAQvW,IAAKuW,EAAKzX,MAAOA,MAAOyX,EAAKzX,OAAQyX,EAAKzX,WAI9D,uBAAGiC,UAAYwU,EAAuC,QAA1B,yBAAmC,kBAAC,IAAD,MAA/D,qBACA,2CAAWO,GAAX,CAAyBxE,UAAQ,EAACnN,KAAK,OAAOE,YAAY,sBAC1D,uBAAGtD,UAAU,yBAAwB,kBAAC,IAAD,MAArC,8CACA,uBAAGA,UAAYoU,EAA+C,QAA1B,yBAAmC,kBAAC,IAAD,MAAvE,iBACA,4BAAQnU,QA1CE,SAACM,GAC3B,IAAMkV,EAAYlV,EAAElB,OAAOtB,MAC3B8W,EAAaY,IAwC2ClF,UAAQ,EAACvQ,UAAU,oBAAoB+C,KAAK,kBAChF,4BAAQ/C,UAAU,gBAAlB,kBAjDA,CACpB,CAAEjC,MAAO,gBACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,qBAgD+BmJ,KAAI,SAACsO,GAAD,OAChB,4BAAQvW,IAAKuW,EAAKzX,MAAOA,MAAOyX,EAAKzX,OAAQyX,EAAKzX,WAI9D,uBAAGiC,UAAY0U,EAA6C,QAA1B,yBAAmC,kBAAC,IAAD,MAArE,8BACA,4BAAQnR,WAAUyQ,EAAgChU,UAAU,0BACxD,yBAAKA,UAAWgU,EAAkB,0CAA4C,QAASxQ,KAAK,UACxF,0BAAMxD,UAAU,WAAhB,eAEJ,uBAAGA,UAAWgU,EAAkB,QAAU,IAAK,kBAAC,IAAD,MAA/C,YAEJ,4BAAQzQ,WAAUyQ,EAAgChU,UAAWkV,GAAiB,iBAAmB,QAAUjV,QAAS,WAAK8T,GAAY,GAAOoB,IAAkB,IAAS/R,KAAK,UAAS,kBAAC,IAAD,MAArL,gBAiCTyB,OAAMC,KAAK6O,ICpQb+B,GAAU,WAEnB,IAQsBtU,EARhBnD,EAAQP,IAAQC,IAAI,SAFD,EAIeC,oBAAS,GAJxB,mBAIlB+X,EAJkB,KAIJC,EAJI,OAKehY,oBAAS,GALxB,mBAKlBiY,EALkB,KAKJC,EALI,OAMClY,mBAAS,GANV,mBAMlB0I,EANkB,KAMXC,EANW,KAQjBgC,EAAaF,EAAY/B,GAAzBiC,SAMR,OAAIA,EAAS6J,KAEL,yBAAKpS,UAAU,4BACX,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,iBAAgB,kBAAC,IAAD,MAA9B,iCAEJ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,yBACX,yBAAKC,QAAS,WAAK6V,GAAgB,GAAOF,GAAgB,IAAS5V,UAAY6V,EAAwC,8BAAzB,wBAA9F,UACA,yBAAK5V,QAAS,WAAK6V,GAAgB,GAAQF,GAAgB,IAAQ5V,UAAY2V,EAAwC,8BAAzB,wBAA9F,qBAEJ,yBAAK3V,UAAU,yBACX,yBAAKA,UAAW6V,EAAe,iCAAmC,SAC9D,yBAAK7V,UAAU,uBACX,6BAAK,kBAAC,IAAD,CAAcyE,KAAK,OAAxB,QAAuC8D,EAASrK,UAChD,gDACA,yBAAK8B,UAAU,+BACX,uBAAGA,UAAU,gBAAb,uBACA,uBAAGA,UAAU,qBAAqBuI,EAASrK,WAE/C,yBAAK8B,UAAU,+BACX,uBAAGA,UAAU,gBAAb,WACA,uBAAGA,UAAU,qBAAqBuI,EAASwG,OAC3C,uBAAG5G,KAAK,gBAAR,cAEJ,yBAAKnI,UAAU,+BACX,uBAAGA,UAAU,gBAAb,yBACA,uBAAGA,UAAU,sBA/BvBoB,EA+ByDmH,EAASmH,IA9B7E,IAAI1M,KAAKC,aAAa,SAASC,OAAO9B,MAgCrB,yBAAKpB,UAAU,+BACX,uBAAGA,UAAU,gBAAb,uBACA,uBAAGA,UAAU,qBAAb,UAAqC,IAAI+R,KAAKxJ,EAAS6J,MAAMC,UAA7D,YAA0E,IAAIN,KAAKxJ,EAAS6J,MAAME,WAAa,EAA/G,YAAoH,IAAIP,KAAKxJ,EAAS6J,MAAMG,kBAIpJ,kBAAC,GAAD,CAAoB7S,IAAKA,EAAKzB,MAAOA,EAAOmC,cAAeA,IAE3D,kBAAC,GAAD,CAAiBV,IAAKA,EAAKzB,MAAOA,EAAOmC,cAAeA,IAExD,yBAAKJ,UAAU,6BACX,gCAAQ,kBAAC,IAAD,CAAkByE,KAAK,SAA/B,sBAKR,yBAAKzE,UAAW2V,EAAe,gCAAkC,SAC7D,kBAAC,GAAD,CAAcjW,IAAKA,EAAKzB,MAAOA,EAAOmC,cAAeA,EAAemI,SAAUA,EAAUqL,QAASrN,QA9C9F,WCahBwP,OA1Bf,WAAgB,IAENlY,EAAWkL,qBAAWzL,GAAtBO,OAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmY,KAAM,4BAA4BC,UAAWxF,KACpD,kBAAC,IAAD,CAAOyF,OAAK,EAACF,KAAM,IAAIC,UAAWzG,KAClC,kBAAC,IAAD,CAAO0G,OAAK,EAACF,KAAM,YAAYC,UAAWxM,IAC1C,kBAAC,IAAD,CAAOyM,OAAK,EAACF,KAAM,YAAYC,UAAWxM,IAExC5L,GACA,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOqY,OAAK,EAACF,KAAM,YAAYC,UAAWP,KAC1C,kBAAC,IAAD,CAAOQ,OAAK,EAACF,KAAM,YAAYC,UAAWtF,KAC1C,kBAAC,IAAD,CAAOuF,OAAK,EAACF,KAAM,SAASC,UAAWzK,IACvC,kBAAC,IAAD,CAAO0K,OAAK,EAACF,KAAM,iBAAiBC,UAAW/H,MAGnD,kBAAC,IAAD,CAAO+H,UAAWxM,O,OCxB1B3J,IAASqW,OACP,kBAAC,EAAD,KACE,kBAAC,GAAD,OAEF5W,SAASY,eAAe,S","file":"static/js/main.1a90bdad.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport Cookies from 'js-cookie'\r\n\r\nexport const Context = createContext()\r\n\r\nconst Provider = ({ children }) => {\r\n\r\n  const cookieToken = Cookies.get('token')\r\n\r\n  const [isAuth, setIsAuth] = useState(cookieToken)\r\n  \r\n  const value = {\r\n    isAuth,\r\n    toggleAuth: (token, userName) => {\r\n      setIsAuth(true)\r\n      Cookies.set('token', token, { expires: 1 })\r\n      Cookies.set('username', userName, { expires: 1 })\r\n    },\r\n    logout: () => { \r\n      setIsAuth(false)\r\n      Cookies.remove('token') \r\n      Cookies.remove('username') \r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={value}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default { Provider, Consumer: Context.Consumer }","export default __webpack_public_path__ + \"static/media/arbol.7dae7409.svg\";","import { useState, useEffect, useRef } from \"react\"\r\n\r\nexport function useComponentVisible(initialIsVisible) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n    document.addEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n      document.removeEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}","export const url = ''\r\n\r\n/* http://localhost:8080 */","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"../Styles/Modal.css\"\r\n\r\nfunction Modal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default Modal","import { useState } from 'react'\r\n\r\nexport const useFormValues = () => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (e) => setValue(e.target.value)\r\n\r\n  return { value, onChange }\r\n}\r\n","import React ,{ useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport '../Styles/JoinModal.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Modal from './Modal'\r\nimport axios from 'axios'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\n\r\nconst JoinModal = (props) => {\r\n\r\n    const [joinLoading, setJoinLoading] = useState(false)\r\n    const [radio1, setRadio1] = useState(true)\r\n    const [radio2, setRadio2] = useState(false)\r\n    const [parentInput, setParentInput] = useState(true)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    function handleRadio1(){\r\n        setRadio1(true)\r\n        setRadio2(false)\r\n        setParentInput(true)\r\n    }\r\n    function handleRadio2(){\r\n        setRadio1(false)\r\n        setRadio2(true)\r\n        setParentInput(false)\r\n    }\r\n\r\n    /* ----------------------------------------------------API---------------------------------------------------- */\r\n\r\n    const parentUser = useFormValues()\r\n\r\n    let joinData\r\n    let price = 0\r\n    let random = radio2 ? true : false\r\n    let salaName = ''\r\n\r\n    if(props.data){\r\n        joinData = {\r\n            salaId: props.data._id,\r\n            parentUser: `@${parentUser.value}`,\r\n            random: random\r\n        }\r\n        price = props.data.price\r\n        salaName = props.data.name\r\n    }\r\n \r\n    async function handleSubmit( e ){\r\n        e.preventDefault()\r\n\r\n        setJoinLoading(true)\r\n\r\n        await axios({\r\n            data: joinData,\r\n            method: 'post',\r\n            url: url+'/api/newUserInSala',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setJoinLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                props.history.push(`/sala/${res.data.id}`)\r\n                props.onClose()\r\n            }\r\n        }).catch(err => {\r\n            setJoinLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n     /* ----------------------------------------------------API---------------------------------------------------- */\r\n\r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <div className='join-modal'>\r\n                <h2>Estas Seguro?</h2>\r\n                <p>Nombre de sala: <span>{salaName}</span></p>\r\n                <p>Valor: <span>${formatNumber(price)}</span></p>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio1} onChange={handleRadio1} />\r\n                            <label onClick={handleRadio1}>Elegir usuario padre</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio2} onChange={handleRadio2} />\r\n                            <label onClick={handleRadio2}>Usuario padre aleatorio</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={parentInput ? 'form-group' : 'dNone'}>\r\n                        <p>Ingrese el usuario padre</p>\r\n                        <div className='d-flex'>\r\n                            <div className=\"pre-formS\">\r\n                                <div className=\"input-group-text invite-pre-form\">@</div>\r\n                            </div>\r\n                            <input className='join-input' {...parentUser} placeholder='Usuario' type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={!parentInput ? 'join-nota' : 'dNone'}>\r\n                        <p>\r\n                            <span>Nota:</span> \"Sera agregado como referido de algun usuario aleatorio con espacio disponible en esta sala.\"\r\n                        </p>\r\n                    </div>\r\n                    <button disabled={joinLoading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                        <div className={joinLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <p  className={joinLoading ? 'dNone' : ''}>Confirmar</p>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(JoinModal)","import React, { useState, useEffect } from 'react'\r\nimport '../Styles/Navbar.css'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport JoinModal from '../Modals/JoinModal'\r\nimport { MdInfo, MdSearch, MdKeyboardReturn } from \"react-icons/md\";\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\n\r\nconst NavbarForm = ({ ArbolImg, url, token, iconSet, useComponentVisible }) => {\r\n\r\n    const room1 = useFormValues()\r\n    const dropdownFilter = useComponentVisible(false)\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [searchLoading, setSearchLoading] = useState(false)\r\n    const [filterSala, setFilterSala] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(iconNone){iconSet(true)}else{iconSet(false)}\r\n    },[iconNone, iconSet])\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    function onOpen2Modal(){\r\n        setModal2Open(true)\r\n    }\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n\r\n    async function searchRoom1( e ){\r\n        e.preventDefault()\r\n        \r\n        setSearchLoading(true)\r\n\r\n        dropdownFilter.setIsComponentVisible(true)\r\n\r\n        try{\r\n            const response = await axios({\r\n                data: { name: room1.value },\r\n                method: 'post',\r\n                url: url+'/api/search/sala',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            })\r\n\r\n            setSearchLoading(false)\r\n            setFilterSala(response.data)\r\n\r\n        }catch(error){\r\n            setSearchLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        }\r\n    }\r\n\r\n    return <>\r\n\r\n        {/* ------------------------------------Section-Searcher hidden---------------------------------------------------------------------- */}      \r\n\r\n        <div className=\"section-searcher-hidden\">\r\n            <button onClick={()=> setIconNone(true)} className={!iconNone ? 'icon-navbar' : 'dNone'}><MdSearch size='23' /></button>\r\n                \r\n            <div className={iconNone  ? 'searcher-hidden' : 'dNone'}>\r\n                <form onSubmit={searchRoom1} >\r\n                    <button onClick={()=> setIconNone(false)} type='button' className='icon-navbar'><MdKeyboardReturn size='23' /></button>\r\n                    <input {...room1} type='text' placeholder='Nombre de sala' />\r\n                    <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n                </form>\r\n            </div>\r\n                \r\n        </div>\r\n\r\n{/* ------------------------------------/Section-Searcher hidden---------------------------------------------------------------------- */}\r\n\r\n        <div className=\"section-searcher\">\r\n\r\n            <form onSubmit={searchRoom1} >\r\n                <div>\r\n                    <input {...room1} type='text' placeholder='Nombre de sala'/>\r\n                </div>\r\n                <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n            </form>\r\n            \r\n            <div ref={dropdownFilter.ref} className={dropdownFilter.isComponentVisible ? 'dropdown-menu-navbar-filter isActive' : 'dNone'}>\r\n                { \r\n\r\n                    searchLoading ? <div className= \"spinner-border text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div> : \r\n                        \r\n                    filterSala.data ?\r\n\r\n                    <div>\r\n                        \r\n                    <div className={dropdownFilter.isComponentVisible ? 'filter-sala' : 'dNone'}>            \r\n                            <div onClick={onOpen2Modal} className=' filter-sala-wrap'>\r\n                                <img src={ArbolImg} className='' alt=\"...\" />\r\n                                <div className='filter-sala-description'>\r\n                                    <p> Nombre de sala:  <span> {filterSala.data.name}</span>  </p>\r\n                                    <p> Creador:  <span> {filterSala.data.creator}</span>  </p>\r\n                                    <p> Valor:  <span> ${formatNumber(filterSala.data.price)}</span>  </p>\r\n                                </div>\r\n                            </div>\r\n                        <button onClick={onOpen2Modal} className=''>Unirse</button>\r\n                    </div> \r\n                    <p className='aviso-filtro'><MdInfo />  Recuerda respetar mayusculas y minusculas</p>\r\n                    </div> : <div className='no-spaces'>{filterSala.error}! <p className='aviso-filtro'><MdInfo />   Recuerda respetar mayusculas y minusculas</p></div>\r\n                } \r\n            </div>\r\n\r\n        </div>\r\n        <JoinModal token={token} data={filterSala.data} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n    </>\r\n}\r\n\r\nexport default React.memo(NavbarForm)","export default __webpack_public_path__ + \"static/media/logo.a414eaaf.svg\";","export default __webpack_public_path__ + \"static/media/2WANTED.a816f074.svg\";","import React from 'react'\r\nimport logo from '../Images/logo.svg'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavbarLogo = ({iconNone}) => {\r\n    return (<div className={!iconNone ? \"section-logos\" : 'dNone'}>\r\n        <Link className=\"Link\" to=\"/home\">< img className='logo1' src={logo} alt='logo-img' /> <img className='logo2' src={logoletra} alt=\"logoletra\"/> </Link>\r\n    </div>)\r\n}\r\n\r\nexport default React.memo(NavbarLogo)","import React, { useState } from \"react\"\r\nimport Swal from 'sweetalert2'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../Styles/InvitationModal.css'\r\nimport Modal from \"./Modal\"\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nconst InvitationModal = (props) => {\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    const invitation = props.invitationData\r\n\r\n    const [invitationLoading, setInvitationLoading] = useState(false)\r\n\r\n    let joinData\r\n\r\n    if(invitation){\r\n        joinData = {\r\n            salaId: invitation.salaId,\r\n            parentUser: invitation.parentUsername\r\n        }\r\n    }\r\n\r\n    async function handleClick( e ){\r\n        e.preventDefault()\r\n\r\n        setInvitationLoading(true)\r\n\r\n        await axios({\r\n            data: joinData,\r\n            method: 'post',\r\n            url: url+'/api/newUserInSala',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setInvitationLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                props.onClose()\r\n                props.history.push(`/sala/${res.data.id}`)\r\n            }\r\n        }).catch(err => {\r\n            setInvitationLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Are you sure?</h3>\r\n\r\n            {\r\n                invitation && <div className='invitationModal'>\r\n                    <p>Invitado por: <span>{invitation.host}</span></p>\r\n                    <p>Nombre de sala: <span>{invitation.salaName}</span></p>\r\n                    <p>Valor: <span>${formatNumber(invitation.price)}</span></p>\r\n                    <p>Usuario padre: <span>{invitation.parentUsername}</span></p>\r\n                    <p>Mensaje: <span>{invitation.message ? invitation.message : 'Ninguno' }</span></p>\r\n                    <button disabled={invitationLoading ? true : false} className='btn btn-dark btn-block invitation-button' onClick={handleClick}>\r\n                        <div className={invitationLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <p  className={invitationLoading ? 'dNone' : ''}>Unirse</p>\r\n                    </button>\r\n                </div>\r\n            }\r\n           \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(InvitationModal)","import React, { useEffect, useState } from 'react'\r\nimport './Styles/Navbar.css'\r\nimport io from 'socket.io-client'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport  InvitationModal  from './Modals/InvitationModal'\r\nimport { MdNotificationsNone } from \"react-icons/md\";\r\n\r\nconst Navbar_navigation1 = ({ArbolImg, useComponentVisible, url, username, token}) => {\r\n\r\n    const toggle1 = useComponentVisible(false);\r\n    const [invitations, setInvitations] = useState([])\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [invitationData, setInvitationData] = useState(null)\r\n    let [countPages, setCountPages] = useState(1)\r\n    let [count, setCount] = useState(0) \r\n    let [notifications, setNotifications] = useState(0)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    function onOpenModal(invitationData){\r\n        setModalOpen(true)\r\n        setInvitationData(invitationData)\r\n    }\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        const socket = io(url)\r\n\r\n        socket.emit('user_online', username)\r\n        \r\n        socket.on('new_message', () => {\r\n            setCount(count + 1) \r\n        })\r\n\r\n        if(count > 0){\r\n            setCountPages(1)\r\n        }\r\n        \r\n        axios({\r\n            method: 'post',\r\n            data: {page: countPages},\r\n            url: url+'/api/invitations',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then(res => {\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                if(countPages === 1 || count > 0){\r\n                    setNotifications(res.data.countNotification)\r\n                    setTotalPages(res.data.totalPages)\r\n                    setInvitations(res.data.invitations)\r\n                    setCount(0)\r\n                }else{\r\n                    setInvitations( invitations => invitations.concat(res.data.invitations) )\r\n                    setNotifications(res.data.countNotification)\r\n                    setTotalPages(res.data.totalPages)\r\n                }\r\n            }\r\n        }).catch( error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n\r\n    },[token, countPages, count, username, url])\r\n\r\n    function notificationButton() {\r\n        \r\n        toggle1.setIsComponentVisible(true)\r\n\r\n        if(notifications > 0) {\r\n            axios({\r\n                method: 'post',\r\n                url: url+'/api/invitations-reset',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            })\r\n    \r\n            setNotifications(0)\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <div className='button-nav-1'>\r\n            <button className='icon-navbar' onClick={notificationButton}>\r\n                <div className={notifications > 0 ? 'notification' : 'dNone'}>{notifications}</div>\r\n                <MdNotificationsNone size='23' />\r\n            </button>\r\n            <div ref={toggle1.ref} className={toggle1.isComponentVisible ? 'dropdown-menu-navbar1 isActive' : 'dropdown-menu-navbar1'}>\r\n                {\r\n                    invitations.length === 0 && <p className='no-spaces'>No hay notificationes</p>\r\n                }\r\n                {\r\n                    invitations.map(invitation => {\r\n                        return (\r\n                            <li className={toggle1.isComponentVisible ? 'invitations-li isActive' : 'invitations-li'} key={invitation._id}>\r\n                                <button className='' onClick={()=> onOpenModal(invitation)}>\r\n                                    <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                    <div className='invitation-description'>\r\n                                        <p>Invitado por: <span> {invitation.host}</span></p>\r\n                                        <p>Nombre de sala: <span> {invitation.salaName}</span></p>\r\n                                        <p>valor: <span> ${formatNumber(invitation.price)}</span></p>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <button className={totalPages > countPages ? 'button-more-notifications' : 'dNone'} onClick={()=>{setCountPages(countPages + 1)}}>Ver mas ▼</button>\r\n            </div>\r\n            <InvitationModal token={token} invitationData={invitationData} isOpen={modalOpen} onClose={onCloseModal} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default React.memo(Navbar_navigation1)\r\n","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\nimport '../Styles/WithdrawModal.css'\r\n\r\nexport const WithdrawModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [confirm, setConfirm] = useState(false)\r\n\r\n    const amount = useFormValues()\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    async function handleWithdraw(e){\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {amount: amount.value},\r\n            method: 'post',\r\n            url: url+'/api/newWithdraw',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                props.onClose()\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <h4 className={props.wallet >= 20000 ? 'dNone' : ''}>\r\n                Retiros apartir de $20.000\r\n            </h4>\r\n            <form className={props.wallet >= 20000 ? 'withdraw-modal' : 'dNone'} onSubmit={handleWithdraw} >\r\n                <h2>Ingrese monto a retirar</h2>\r\n                <h4>Disponible ${formatNumber(props.wallet)}</h4>\r\n                <input {...amount} className='join-input' type=\"text\" placeholder='$'/>\r\n                <button onClick={()=>setConfirm(true)} className={!confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='button'>Retirar</button>\r\n                <button disabled={loading ? true : false} className={confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='submit'>\r\n                    <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={loading ? 'dNone' : ''}>Confirmar retiro por {formatNumber(amount.value)}</p>\r\n                </button>\r\n                <button className='btn btn-dark btn-block withdraw-modal-cancelar' onClick={props.onClose} type='button'>Cancelar</button>\r\n            </form>\r\n        </Modal>\r\n}","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport '../Styles/DepositModal.css'\r\nimport { url } from '../../urlServer'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\n\r\nexport const DepositModal = props => {\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    const amount = useFormValues()\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n    const [urlPay, setUrlPay] = useState('')\r\n    const [buttonPay, setButtonPay] = useState(false)\r\n\r\n    const onPay = async (e) => {\r\n\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            data: { price: amount.value },\r\n            url: url+'/api/payments',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setUrlPay(res.data)\r\n                setButtonPay(true)\r\n            }\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    function onCancel(){\r\n        setButtonPay(false)\r\n        props.onClose()\r\n    }\r\n    function onLinkPay(){\r\n        setButtonPay(false)\r\n        props.onClose()\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <form onSubmit={onPay} className='depositForm'>\r\n            <h2>Ingrese Monto a depositar</h2>\r\n\r\n            <input className={buttonPay ? 'dNone' : 'join-input'} type=\"text\" {...amount} placeholder='$'/>\r\n            <button className={buttonPay ? 'dNone' : 'next-depostit-modal btn btn-dark btn-block'} type='submit'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p className={loading ? 'dNone' : ''}>Continuar</p>\r\n            </button>\r\n\r\n            <a onClick={onLinkPay} className={buttonPay ? 'link-mercadopago btn btn-dark btn-block' : 'dNone'} href={urlPay} rel=\"noopener noreferrer\" target='_blank'>Confirmar pago por ${formatNumber(amount.value)}</a>\r\n\r\n            <button className='btn btn-dark btn-block withdraw-modal-cancelar' type='button' onClick={onCancel}>Cancelar</button>\r\n\r\n        </form>\r\n    </Modal>\r\n}","import { useState, useEffect } from 'react'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nexport const useUserData = (update) => {\r\n    \r\n    const token = Cookies.get('token')\r\n    \r\n    const [userData, setUserData] = useState({})\r\n    const [loadingUserData, setLoadingUserData] = useState(false)\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        setLoadingUserData(true)\r\n\r\n        async function getUserData(){\r\n\r\n            const response = await axios({\r\n                method: 'get',\r\n                url: url+'/api/me',\r\n                headers: {\r\n                    authorization: token\r\n                    }\r\n            })\r\n            if(response.data){\r\n                setUserData(response.data)\r\n                setLoadingUserData(false)\r\n            }\r\n        } \r\n\r\n    getUserData()\r\n    }, [token, update])\r\n  \r\n\r\n    return { userData, loadingUserData }\r\n}\r\n","import React, {useContext, useState } from 'react'\r\nimport './Styles/Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Context } from '../context'\r\nimport { WithdrawModal } from './Modals/WithdrawModal'\r\nimport { DepositModal } from './Modals/DepositModal'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport { IoMdSettings, IoIosContact } from 'react-icons/io'\r\nimport { MdRefresh, MdAccountCircle, MdAccountBalanceWallet, MdFileUpload, MdFileDownload, MdHelpOutline, MdChromeReaderMode, MdExitToApp } from \"react-icons/md\"\r\n\r\nconst Navbar_navigation2 = props => {\r\n    \r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const { userData, loadingUserData } = useUserData(countUserData)\r\n    const { logout } = useContext(Context)\r\n    \r\n    const [modal3Open, setModal3Open] = useState(null)\r\n    const [modal4Open, setModal4Open] = useState(null)\r\n\r\n    function onClose3Modal(){\r\n        setModal3Open(null)\r\n    }\r\n    function onClose4Modal(){\r\n        setModal4Open(null)\r\n    }\r\n\r\n    function handleLogout() {\r\n        props.push()\r\n        logout()\r\n    }\r\n\r\n    const toggle3 = props.useComponentVisible(false)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    return (\r\n        <div className='section-navIcons'>\r\n            <div className='button-nav-2'>\r\n\r\n                <button onClick={()=>toggle3.setIsComponentVisible(true)} className='icon-navbar'>\r\n                    <MdAccountCircle size='23' />\r\n                </button>\r\n\r\n                <div ref={toggle3.ref} className={toggle3.isComponentVisible ? 'dropdown-menu-navbar2 isActive' : 'dropdown-menu-navbar2'}>\r\n                    <div onClick={()=>toggle3.setIsComponentVisible(false)} className='button-close-nav'>X</div>\r\n                    <div  className=\"item-menu-right user\">\r\n                        < IoIosContact size='46'/>    <p> {userData.userName}</p>\r\n                    </div>\r\n                    <div className='item-menu-right-wallet-container'>\r\n                        <div><MdAccountBalanceWallet />&nbsp;Billetera</div>\r\n                        <p className='balance-refresh-container'>< MdRefresh size='35' className={loadingUserData ? 'refresh-balance-loading ' : 'refresh-balance'} onClick={()=> setCountUserData(countUserData + 1)} />  ${formatNumber(userData.wallet)}</p>\r\n                    </div>\r\n                    <div className='item-menu-right-cashier'>\r\n                        <div onClick={()=> setModal4Open(true)} to='/wallet' className='button-deposit'><MdFileUpload />Depositar</div>\r\n                        <div onClick={()=>setModal3Open(true)} className='button-withdraw'><MdFileDownload />Retirar</div>\r\n                    </div>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/balance/' className=\"item-menu-right\">\r\n                                <MdChromeReaderMode /><p>&nbsp;Historial de balance</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/profile/' className=\"item-menu-right\" >\r\n                    < IoMdSettings /><p>&nbsp;Configuracion de usuario</p> \r\n                    </Link>\r\n                    <div className=\"item-menu-right\">\r\n                        <MdHelpOutline /><p>&nbsp;Ayuda</p> \r\n                    </div>\r\n                    <div onClick={handleLogout} className=\"item-menu-right\">\r\n                        <MdExitToApp /><p>&nbsp;Cerrar Sesion</p>  \r\n                    </div>\r\n                </div> \r\n                \r\n            </div>  \r\n            <WithdrawModal token={props.token} wallet={userData.wallet} isOpen={modal3Open} onClose={onClose3Modal} />\r\n            <DepositModal token={props.token} isOpen={modal4Open} onClose={onClose4Modal} />        \r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default React.memo(Navbar_navigation2)\r\n","import React, { useState, useCallback } from 'react'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport './Styles/Navbar.css'\r\nimport { useComponentVisible } from '../hooks/useComponentVisible'\r\nimport { url } from '../urlServer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport NavbarForm from './Forms/NavbarForm'\r\nimport Logo from './NavbarLogo'\r\nimport ButtonNav1 from './Navbar_navigation1'\r\nimport ButtonNav2 from './Navbar_navigation2'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n    const token = Cookies.get('token')\r\n    const username = Cookies.get('username') \r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n\r\n    const push = useCallback(() => props.history.push('/'), [props.history])\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n\r\n    const iconSet = useCallback((state) => {\r\n        if(state){\r\n            setIconNone(true)\r\n        }else { setIconNone(false) }\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n        <nav>\r\n{/* ------------------------------------Section-Logos---------------------------------------------------------------------- */}       \r\n            <Logo iconNone={iconNone} />\r\n{/* ------------------------------------/Section-Logos---------------------------------------------------------------------- */}       \r\n            \r\n{/* ------------------------------------Section-Searcher---------------------------------------------------------------------- */}            \r\n            <NavbarForm useComponentVisible={useComponentVisible} iconSet={iconSet} ArbolImg={ArbolImg} url={url} token={token} />\r\n{/* ------------------------------------/Section-Searcher---------------------------------------------------------------------- */}       \r\n{/* ------------------------------------Section-NavIcons---------------------------------------------------------------------- */}       \r\n            \r\n            <div className={!iconNone ? 'navbar-buttons-left' : 'dNone'}>\r\n                <ButtonNav1 ArbolImg={ArbolImg} useComponentVisible={useComponentVisible} url={url} token={token} username={username} />\r\n                <ButtonNav2 push={push} useComponentVisible={useComponentVisible} token={token} />\r\n            </div>\r\n{/* ------------------------------------/Section-NavIcons--------------------------------------------------------------------- */}       \r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n\r\n\r\n","import React from \"react\"\r\nimport Navbar from \"./Navbar\"\r\n\r\nfunction Layout (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {props.children}\r\n            <Navbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {useEffect} from 'react'\r\n\r\nexport const Blank = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.history.push('/')\r\n    }, [props])\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport '../../Pages/Styles/Home.css'\r\nimport {MdHome, MdInfo} from \"react-icons/md\"\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport  { useUserData }  from '../../hooks/useUserData'\r\n\r\nconst NewSalaForm = props => {\r\n\r\n    const  {userData}  = useUserData()\r\n    const [roomValid, setRoomValid] = useState(true)\r\n    const [priceValid, setPriceValid] = useState(true)\r\n    const [createLoading, setCreateLoading] = useState(false)\r\n\r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const name = useFormValues()\r\n    const price = useFormValues()\r\n    \r\n    const newSalaData = {\r\n        users: [\r\n            {\r\n                user: userData.userName,\r\n                parentId: undefined,\r\n                childsId: {\r\n                    childId1: '',\r\n                    childId2: '',\r\n                }\r\n            }\r\n        ],\r\n        name: name.value,\r\n        price: price.value,\r\n        creator: userData.userName\r\n    }\r\n\r\n    async function newSala( e ){\r\n        e.preventDefault()\r\n\r\n        if( reg_whiteSpace.test(name.value) || name.value.length < 4 || name.value.length > 15){\r\n            return setRoomValid(false)\r\n        }else { setRoomValid(true)}\r\n        if(parseFloat(price.value) < 5000 || price.value ===  '' ){\r\n            return setPriceValid(false)\r\n        }else{ setPriceValid(true) }\r\n\r\n        setCreateLoading(true)\r\n\r\n        await axios({\r\n            data: newSalaData,\r\n            method: 'post',\r\n            url: props.url+'/api/new/sala',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setCreateLoading(false)\r\n            if (res.data.error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{ props.props.history.push(`/sala/${res.data.id}`)}\r\n        }).catch(err => {\r\n            setCreateLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"create-custom\">\r\n            <div className='create-form-container'>\r\n                <h3>Crear Sala</h3>    \r\n                <form onSubmit={newSala} >\r\n                    <div className={roomValid ? 'mb-3' : 'mb-2'}>\r\n                        <div className='d-flex'>\r\n                            <div>\r\n                                <div className=\"input-group-text input-guide\">< MdHome /></div>\r\n                            </div>\r\n                            <input type='text' {...name} placeholder='Nombre de sala' />\r\n                        </div>\r\n                        <label className={!roomValid ? 'new-room-valid' : 'dNone'}><MdInfo />Minimo 4 caracteres, maximo 15, no debe haber espacios</label>\r\n                    </div>\r\n                    <div className={priceValid ? 'mb-3' : 'mb-2'}>\r\n                        <div className='d-flex'>\r\n                            <div>\r\n                                <div className=\"input-group-text input-guide\">$</div>\r\n                            </div>\r\n                            <input  placeholder='Valor' type='text' {...price} />\r\n                        </div>\r\n                        <label className={!priceValid ? 'new-room-valid' : 'dNone'}><MdInfo />Valor Minimo de Sala $5.000 COP</label>\r\n                    </div>\r\n                    <button disabled={createLoading ? true : false}>\r\n                        <div className={createLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <p className={createLoading ? 'dNone' : ''}>Crear</p>\r\n                    </button>\r\n                </form>   \r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewSalaForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListRooms = ({ token, url }) => {\r\n\r\n    const [listRooms, setListRooms] = useState([])\r\n    const [activesData, setActivesData] = useState({})\r\n    const [activesLoading, setActivesLoading] = useState(false)\r\n    let [countActives, setCountActives] = useState(1) \r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    useEffect(() => { \r\n        setActivesLoading(true)\r\n        axios({\r\n            method: 'post',\r\n            data: {page: countActives},\r\n            url: url+'/api/search/listSalas',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        })\r\n        .then(res => {\r\n            setActivesLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setActivesLoading(false)\r\n                setListRooms(res.data.data)\r\n                const data = {total: res.data.total} \r\n                setActivesData(data)\r\n            }\r\n        }).catch( err => {\r\n            setActivesLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }, [token, countActives, url])\r\n\r\n    return(\r\n        <div className='actives-rooms'>\r\n            <h3>Tus Salas</h3>\r\n            <div className={activesData.total === 1 ? 'dNone' : 'pagination'}>\r\n                <button disabled={countActives === 1 ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives -= 1) } ><AiOutlineCaretLeft size='30'/></button> \r\n                    <p><span>{countActives}</span> - {activesData.total}</p> \r\n                <button disabled={countActives === activesData.total ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives += 1) }><AiOutlineCaretRight size='30' /></button>\r\n            </div>\r\n            {\r\n                activesLoading ? <div className=' text-center'>\r\n                    <div className=\"spinner-border spiner-actives text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div> : \r\n                <div>\r\n                    {\r\n                        listRooms.length === 0 ? <p className='no-salas-actives'>No hay salas creadas!</p>  :\r\n                        <div> \r\n                            <ul>\r\n                                {\r\n                                    listRooms.map((data) => {\r\n                                        return (\r\n                                            <li className='actives-li' key={data.salaId}>\r\n                                                <Link to={`/sala/${data.salaId}`} className='actives-links Link'>\r\n                                                    <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                                    <div className='actives-description'>\r\n                                                        <p>Nombre de sala: <span>{data.salaName}</span></p>\r\n                                                        <p>Valor: <span>${formatNumber(data.salaPrice)}</span></p>\r\n                                                        <p>Creador: <span>{data.salaCreator}</span></p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>        \r\n                        </div>\r\n                    }\r\n                </div> \r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListRooms","import React, { useState } from 'react'\r\nimport {MdHome, MdList, MdInfo} from \"react-icons/md\"\r\nimport { url } from '../urlServer'\r\nimport NewSalaForm from '../Components/Forms/NewSalaForm'\r\nimport ListRooms from '../Components/ListRooms'\r\nimport Swal from 'sweetalert2'\r\nimport './Styles/Home.css'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nexport const Home = (props) => {\r\n\r\n    const token = Cookies.get('token')\r\n    const [actives_560, setActives_560] = useState(false)\r\n    \r\n    return(\r\n        <div className='home-container'>\r\n\r\n            <div className={actives_560 ? 'home-left' : 'home-left home-left-560'}>\r\n\r\n                <ListRooms Swal={Swal} token={token} axios={axios} url={url} />\r\n                \r\n            </div>\r\n\r\n            <div className={!actives_560 ? 'home-right' : 'home-right home-right-560'}>\r\n\r\n                <NewSalaForm props={props} axios={axios} token={token} url={url} MdHome={MdHome} MdInfo={MdInfo}/>\r\n\r\n                <div className='section-video'>\r\n                    <div className='youtube-container'>\r\n                        <h3>Instrucciones</h3>\r\n                        <div className='youtube-wrap'>\r\n                            <iframe className='youtube-video' width=\"560\" height=\"315\" title='Instrucciones' src=\"https://www.youtube.com/embed/-XOuu1vd_fk\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <div className='navigation-container'>\r\n                <button onClick={()=> setActives_560(false) } className={!actives_560 ? 'navigation-button navigation-left' : 'navigation-button left-button' }><MdHome size='35' /></button>  \r\n                <button onClick={()=> setActives_560(true) } className={actives_560 ? 'navigation-button navigation-right' : 'navigation-button' }><MdList size='35' /></button>  \r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/abajo.780d3280.svg\";","import React, { useState } from 'react'\r\nimport abajo from '../Images/abajo.svg'\r\nimport './Styles/Tree.css'\r\n\r\nconst TreeData = ({price, username, arbolData, onOpenModal, onOpen2Modal}) => {\r\n\r\n    const [lineDropDown, setLineDropdown] = useState(false)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n    console.log(arbolData)\r\n    return(\r\n        <div className='tree-wrap'>\r\n            <div className='nivel'>\r\n                <div className='child'></div>\r\n            </div>\r\n            <p className='level-text'>Nivel 1</p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[0] ? ()=> onOpenModal(arbolData[0]) : ()=> onOpen2Modal(username)} className={arbolData[0] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[1] ? ()=> onOpenModal(arbolData[1]) : ()=> onOpen2Modal(username)} className={arbolData[1] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Nivel 2</p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[2] ? ()=> onOpenModal(arbolData[2]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[2] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[3] ? ()=> onOpenModal(arbolData[3]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[3] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[4] ? ()=> onOpenModal(arbolData[4]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[4] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[5] ? ()=> onOpenModal(arbolData[5]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[5] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Nivel 3 &nbsp; <span>${formatNumber(price / 2)} c/u</span></p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[6] ? ()=> onOpenModal(arbolData[6]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[6] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[7] ? ()=> onOpenModal(arbolData[7]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[7] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[8] ? ()=> onOpenModal(arbolData[8]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[8] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[9] ? ()=> onOpenModal(arbolData[9]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[9] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[10] ? ()=> onOpenModal(arbolData[10]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[10] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[11] ? ()=> onOpenModal(arbolData[11]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[11] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[12] ? ()=> onOpenModal(arbolData[12]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[12] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[13] ? ()=> onOpenModal(arbolData[13]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[13] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Nivel 4 &nbsp; <span>${formatNumber(price / 4)} c/u</span></p>\r\n            <div className='nivel displayNone1'>\r\n                <button onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <button className='btn-lineDropDown' onClick={()=> setLineDropdown(!lineDropDown)}> <img src={abajo} alt=\"abajo\"/> </button>\r\n            <div className={lineDropDown ? 'nivel2' : 'vNone'}>\r\n                <div className='lineDropDown-separator'>\r\n                    <div className=\"linePar-container\">\r\n                        <p>1</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>2</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>3</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>4</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n                <div className='lineDropDown-separator'>\r\n                    <div className=\"linePar-container\">\r\n                        <p>5</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>6</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>7</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>8</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(TreeData)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport '../Styles/MiniModal.css'\r\n\r\nfunction MiniModal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"MiniModal\">\r\n                <div className=\"MiniModal__container\">\r\n                    <button onClick={props.onClose} className=\"MiniModal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default MiniModal","import React from 'react'\r\nimport MiniModal from './MiniModal'\r\n\r\nexport const ChildModal = (props) =>{\r\n    return (\r\n        <MiniModal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <h3>User:</h3>\r\n            <br/>\r\n            <h4>{props.user}</h4>\r\n        </MiniModal>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Modal from \"./Modal\"\r\nimport Swal from 'sweetalert2'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { MdInfo } from \"react-icons/md\"\r\nimport axios from 'axios'\r\nimport '../Styles/Invite.css'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const InviteModal = (props) => {\r\n    \r\n    const user = useFormValues()\r\n    const message = useFormValues()\r\n\r\n    const [inviteLoading, setInviteLoading] = useState(false)\r\n\r\n    let data\r\n\r\n    if(props.data){\r\n        data = {\r\n            newUser: `@${user.value}`, parentUsername: props.data.parentUsername,\r\n            message: message.value, salaId: props.data.salaId,\r\n            price: props.data.price, salaName: props.data.salaName, host: props.data.host\r\n        }\r\n    }\r\n\r\n    const [msg_valid, setMsg_valid] = useState(true)\r\n\r\n    async function handleSubmit( e ){\r\n        e.preventDefault()\r\n\r\n        if(message.value.length > 50){\r\n            return setMsg_valid(false)\r\n        }else{setMsg_valid(true)}\r\n\r\n        setInviteLoading(true)\r\n        \r\n        await axios({\r\n            data: data,\r\n            method: 'post',\r\n            url: url+'/api/new-invitation',\r\n            headers: {\r\n                authorization: props.token\r\n            }\r\n        }).then(res => {\r\n            setInviteLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Invitacion enviada',\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setInviteLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n        props.onClose() \r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Invitar Usuario</h3>\r\n            <form className='invite-form' onSubmit={handleSubmit}>\r\n                <div className='d-flex'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">@</div>\r\n                    </div>\r\n                    <input {...user} type=\"text\" placeholder='Usuario'/>\r\n                </div>\r\n                <div className=\"form-group mt-4 mb-4\">\r\n                    <input {...message} type=\"text\" placeholder='Mensaje Opcional'/>\r\n                    <label className={msg_valid ? 'dNone' : 'warning-invite'}><MdInfo />&nbsp;Maximo 50 caracteres</label>\r\n                </div>\r\n                <button disabled={inviteLoading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                    <div className={inviteLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={inviteLoading ? 'dNone' : ''}>Invitar</p>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useCallback } from 'react'\r\nimport TreeData from './TreeData'\r\nimport './Styles/Tree.css'\r\nimport { ChildModal } from './Modals/childModal'\r\nimport { InviteModal } from './Modals/inviteModal'\r\n\r\nconst Tree = (props) => {\r\n\r\n    const arbolData =  props.arbolData\r\n    \r\n    /* ---------------------------------------------------Modales------------------------- */\r\n    \r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [userModal, setUserModal] = useState(null)\r\n    const [dataModal, setDataModal] = useState(null)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    const onOpenModal = useCallback( user => {\r\n        setModalOpen(true)\r\n        setUserModal(user)\r\n    },[])\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n    \r\n    const onOpen2Modal = useCallback( parent => {\r\n        const data = {\r\n            parentUsername: parent, salaId: props.salaId, price: props.price, salaName: props.salaName, host: props.userName\r\n        }\r\n        setModal2Open(true)\r\n        setDataModal(data)\r\n    },[props.price, props.salaId, props.salaName, props.userName])\r\n  \r\n    if(props.loading){\r\n        return <div className=\"spinner-border tree-spinner text-danger\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TreeData price={props.price} username={props.userName} arbolData={arbolData} onOpen2Modal={onOpen2Modal} onOpenModal={onOpenModal} />\r\n            \r\n            <ChildModal user={userModal} isOpen={modalOpen} onClose={onCloseModal}/>\r\n            <InviteModal token={props.token} data={dataModal} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tree","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { MdAccountBalanceWallet } from \"react-icons/md\";\r\n\r\nconst RomDetails = ({count, url, salaId, userName, token, arbolData, dataRoom, inBalance, parent}) => {\r\n\r\n    const [loadingToBalance, setLoadingToBalance] = useState(false)\r\n    const [countUserData, setCountUserData] = useState(0)\r\n\r\n    const price = dataRoom ? dataRoom.price : 0\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    async function handleToBalance(){\r\n        setLoadingToBalance(true)\r\n        await axios({\r\n            method: 'post',\r\n            data: {user: userName, toBalance: 'true'},\r\n            url: `${url}/api/in-sala?id=${salaId}`,\r\n            headers: {\r\n                 authorization: token\r\n            }\r\n        }).then(res => {\r\n            setCountUserData(countUserData + 1)\r\n            count(countUserData + 1)\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: res.data.msg,\r\n            })\r\n            setLoadingToBalance(false)\r\n        }).catch(error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n            setLoadingToBalance(false)\r\n        })\r\n    }\r\n\r\n    let acum3 = 0\r\n    let acum4 = 0   \r\n\r\n    for(let i = 6; i<=13; i++) {\r\n        let divide = price/2   \r\n        if(arbolData[i]){\r\n            acum3 = acum3 + divide\r\n        }\r\n    }\r\n    for(let i = 14; i<=29; i++){\r\n        let divide = price/4  \r\n        if(arbolData[i]){\r\n            acum4 = acum4 + divide\r\n        }\r\n    }\r\n\r\n    const tAcum = acum3 + acum4\r\n\r\n    return(\r\n        <div className='room-details'>\r\n            <p>Nombre de sala:</p>\r\n            <span>{dataRoom.name}</span>\r\n            <p>Valor de sala:</p>\r\n            <span>${formatNumber(dataRoom.price)}</span>\r\n            <p>Tu usuario padre:</p>\r\n            <span>{parent}</span>\r\n            <p>Creador:</p>\r\n            <span>{dataRoom.creator}</span>\r\n            <p>Acumulado en nivel 3:</p>\r\n            <span>${formatNumber(acum3)}</span>\r\n            <p>Acumulado en nivel 4:</p>\r\n            <span>${formatNumber(acum4)}</span>\r\n            <p>Total acumulado:</p>\r\n            <span>${formatNumber(tAcum)}</span>                   \r\n            <p>Acumulado retirado:</p>\r\n            <span>${formatNumber(inBalance)}</span>\r\n            <button disabled={tAcum > inBalance ? false : true} onClick={handleToBalance}>\r\n                <div className={!loadingToBalance ? '' : 'dNone'}>\r\n                    <p>Retirar a billetera</p>\r\n                    <label>${tAcum > inBalance ? formatNumber(tAcum - inBalance) : 0} ➜ <MdAccountBalanceWallet /></label>\r\n                </div>\r\n                <div className={loadingToBalance ? \"spinner-toBalance spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(RomDetails)\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Styles/Room.css'\r\nimport Tree  from '../Components/Tree'\r\nimport RomDetails from '../Components/RomDetails'\r\nimport { useChildsData }  from '../hooks/useChildsData'\r\nimport { useUserData }  from '../hooks/useUserData'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'js-cookie'\r\nimport { useCallback } from 'react'\r\n\r\nexport const Room = (props) => {\r\n    \r\n    const token = Cookies.get('token')\r\n    const salaId = props.match.params.salaId\r\n    const [parent, setParent] = useState('')\r\n    const [inBalance, setInBalance] = useState(0)\r\n    const [dataRoom, setDataRoom] = useState({})\r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const { userData: {userName} } = useUserData()\r\n    const { arbolData, loadingChildsData } = useChildsData(salaId, userName)\r\n    \r\n    const count = useCallback((data) => {\r\n        if(count){\r\n            setCountUserData(data)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        async function searchRoom(){\r\n            try {\r\n                if(userName){\r\n                    const response = await axios({\r\n                        data: { salaId: salaId, username: userName },\r\n                        method: 'post',\r\n                        url: url+'/api/search/sala',\r\n                        headers: {\r\n                            authorization: token\r\n                        }\r\n                    })\r\n                if(response.data.error){\r\n                    const error = response.data.error.name === 'CastError' ? 'Esta Sala no existe' : response.data.error.name\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: error,\r\n                    })\r\n                }else{\r\n                    setInBalance(response.data.inBalance)\r\n                    setParent(response.data.parentId)\r\n                    setDataRoom(response.data.data)  \r\n                }\r\n            }\r\n            }catch(error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            }\r\n        }\r\n        searchRoom()\r\n\r\n    },[userName, salaId, token, countUserData])\r\n\r\n    \r\n    if(!dataRoom || loadingChildsData){\r\n        return <div className='loading-room'>\r\n            <div className=\"spinner-border spiner-room text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    }\r\n    \r\n    return (\r\n        <div className='room'>\r\n            <div>\r\n                <div className='arbol-container'>\r\n                    <Tree loading={loadingChildsData} token={token} userName={userName} salaName={dataRoom.name} price={dataRoom.price} salaId={dataRoom._id} arbolData={arbolData} />\r\n                </div>\r\n            </div>    \r\n            <div>\r\n                <RomDetails count={count} url={url} parent={parent} inBalance={inBalance} dataRoom={dataRoom} arbolData={arbolData} token={token} userName={userName} salaId={salaId}  />\r\n            </div>    \r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nexport const useChildsData = (salaId, userName) => {\r\n\r\n    const token = Cookies.get('token')\r\n\r\n    const [arbolData, setArbolData] = useState([])\r\n\r\n    const [loadingChildsData, setLoadingChildsData] = useState(true)\r\n            \r\n    useEffect(()=>{\r\n\r\n        if(userName){\r\n            setLoadingChildsData(true)\r\n    \r\n            async function childsData(){\r\n    \r\n                const response = await axios({\r\n                    method: 'post',\r\n                    data: {user: userName},\r\n                    url: `${url}/api/in-sala?id=${salaId}`,\r\n                    headers: {\r\n                         authorization: token\r\n                    }\r\n                })       \r\n                \r\n                const data = await response.data\r\n    \r\n                await setArbolData(data)\r\n    \r\n                setLoadingChildsData(false)\r\n    \r\n            }  \r\n            childsData()\r\n        }\r\n    },[salaId, userName, token])\r\n\r\n    return {arbolData, loadingChildsData}\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport { MdRefresh } from 'react-icons/md'\r\nimport '../Styles/EmailVerificationModal.css'\r\n\r\nconst EmailVerificationModal2 = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleRefresh(){\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email},\r\n            method: 'post',\r\n            url: url+'/api/mailverificationRefresh'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div className='emailVerification'>\r\n            <h4>Este usuario no ha confirmado email de registro, para acceder dirigirse a link de correo y confirmar.</h4>\r\n            <label>Si no ha recibido ningun email o desea reenviar, pulse el boton reintentar</label>\r\n            <button onClick={handleRefresh} disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}><MdRefresh /> Reintentar</p>\r\n            </button>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default EmailVerificationModal2","import React, { useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport logo from '../Images/logo.svg'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { url } from '../urlServer'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport axios from 'axios'\r\nimport './Styles/NavbarLogin.css'\r\nimport EmailVerificationModal2 from './Modals/EmailVerificationModal2'\r\n\r\n const NavbarLogin = (props) => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const email = useFormValues()\r\n    const password = useFormValues()\r\n\r\n    const form = {\r\n        email: email.value,\r\n        password: password.value\r\n    }\r\n\r\n    const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        setLoginLoading(true)\r\n        axios.post(url+'/api/users/signin', form)\r\n        .then(res => {\r\n            setLoginLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data.isVerified === false){\r\n                setModalOpen(true)\r\n            }else{\r\n                props.toggleAuth(res.data.token, res.data.userName)\r\n                props.history.push(`/home`)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setLoginLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar-arbol-login\">\r\n            <Link className=\"logo\" to=\"/\"><img className='login-logo1' src={logo} alt='logo-img' /><img className='login-logo2' src={logoletra} alt=\"logoletra\"/></Link>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group login-inputs\">\r\n                    <input autoComplete=\"on\" type=\"email\" className='form-control' {...email} placeholder='Email'/>\r\n                </div>\r\n                <div className=\"form-group login-inputs\">\r\n                    <input autoComplete='on' className=\"form-control\" type=\"password\" {...password} placeholder=\"Contraseña\"/>\r\n                    <a href='https://www.youtube.com/' target='_blank' rel=\"noopener noreferrer\">Olvidaste tu cuenta?</a>\r\n                </div>\r\n                <button disabled={loginLoading ? true : false} type='submit' className=\"login-button\">\r\n                    <div className={loginLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                <p className={loginLoading ? 'dNone' : ''}>Entrar</p>\r\n                </button>\r\n            </form>\r\n            <EmailVerificationModal2 email={email.value} isOpen={modalOpen} onClose={onCloseModal}/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavbarLogin)","export default __webpack_public_path__ + \"static/media/ANDROID.064276a3.png\";","export default __webpack_public_path__ + \"static/media/IOS.890d2394.png\";","export default __webpack_public_path__ + \"static/media/esfinge.a414eaaf.svg\";","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport { MdRefresh } from 'react-icons/md'\r\nimport '../Styles/EmailVerificationModal.css'\r\n\r\nconst EmailVerificationModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    console.log(props.email)\r\n    async function handleRefresh(){\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email},\r\n            method: 'post',\r\n            url: url+'/api/mailverificationRefresh'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div className='emailVerification'>\r\n            <h4>Se ha enviado un link de verificacion a la direccion de email, confirme para acceder.</h4>\r\n            <label>Si, no ha recibido ningun email, pulse el boton reintentar</label>\r\n            <button onClick={handleRefresh} disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}><MdRefresh /> Reintentar</p>\r\n            </button>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default EmailVerificationModal","import React, { useContext, useState } from 'react'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport Swal from 'sweetalert2'\r\nimport NavbarLogin from '../Components/NavbarLogin'\r\nimport { MdCreditCard, MdInfo, MdLockOutline, MdMail } from \"react-icons/md\";\r\nimport { Context } from '../context'\r\nimport axios from 'axios'\r\nimport android from '../Images/ANDROID.png'\r\nimport ios from '../Images/IOS.png'\r\nimport IMG from '../Images/esfinge.svg'\r\nimport './Styles/Signup.css'\r\nimport { url } from '../urlServer'\r\nimport Cookies from 'js-cookie'\r\nimport EmailVerificationModal from '../Components/Modals/EmailVerificationModal';\r\n\r\nexport const Signup = (props) => {\r\n\r\n    const token = Cookies.get('token')\r\n\r\n    if(token){\r\n        props.history.push(`/home`)\r\n    }\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const { toggleAuth } = useContext(Context)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const userName = useFormValues()\r\n    const email = useFormValues()\r\n    const dni = useFormValues()\r\n    const password = useFormValues()\r\n    const confirm_password = useFormValues()\r\n\r\n    const form = {\r\n        userName: `@${userName.value}`,\r\n        email: email.value,\r\n        dni: dni.value,\r\n        password: password.value,\r\n        confirm_password: confirm_password.value,\r\n        bank: {\r\n            titular: ''\r\n        }\r\n    }\r\n\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    \r\n    const [userValid, setUserValid] = useState(true)\r\n    const [signupLoading, setSignupLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        \r\n        if(userName.value.length < 4 || userName.value.length > 16){\r\n            return setUserValid(false)\r\n        }else{setUserValid(true)}\r\n        if(reg_whiteSpace.test(userName.value)) {\r\n           return setUserValid(false)\r\n        }else{setUserValid(true)}\r\n        if(!reg_password.test(password.value)){\r\n           return setPassword_valid(false)\r\n        }else{setPassword_valid(true)}\r\n\r\n        setSignupLoading(true)\r\n\r\n        axios.post( url+'/api/users/signup', form)\r\n        .then(res => {\r\n            setSignupLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setModalOpen(true)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setSignupLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    \r\n    }\r\n        \r\n    return(\r\n        <>   \r\n\r\n        <NavbarLogin toggleAuth={toggleAuth} />\r\n\r\n        <div className='signup-container'>\r\n\r\n            <div className='signup-left'>\r\n\r\n                <div className='apps-button'>\r\n                    <div>\r\n                        <img className='android-button' alt='android' src={android} />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <img className='ios-button' alt='ios' src={ios} />\r\n                    </div>\r\n                </div>\r\n\r\n                <img className='logo-signup-p' src={IMG} alt=\"\"/>\r\n\r\n            </div>\r\n\r\n             <div className='signup-right'>\r\n                <div className='card-signup'>\r\n                            <h3 className=\"text-center text-white card-header pl-4\">\r\n                                Registrarse\r\n                            </h3>\r\n                            <div className=\"card-body form-body\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\">@</div>\r\n                                            </div>\r\n                                            <input type=\"text\" id=\"inlineFormInputGroupUsername2\" className='form-control' {...userName} placeholder='Nombre de usuario' required/>\r\n                                        </div>\r\n                                        <label className={!userValid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Minimo 8 caracteres, Maximo 16, sin espacios</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdMail /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"email\" className='form-control' {...email} placeholder='Email' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdCreditCard /></div>\r\n                                            </div>\r\n                                            <input type=\"text\" className='form-control' {...dni} placeholder='CC, DNI ETC...' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\"  className='form-control' {...password} placeholder='Contraseña' required/>\r\n                                        </div>\r\n                                        <label className={!password_valid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Debe contener mayuscula, minuscula y numero, minimo 8 caracteres</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                    <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\" suggested=\"new-password\" className='form-control' {...confirm_password} placeholder='Confirmar contraseña' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button disabled={signupLoading ? true : false} type='submit' className='button-signup'>\r\n                                        <div className={signupLoading ? \"spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={signupLoading ? 'dNone' : ''}>Registrarse</p>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        </div>    \r\n        <EmailVerificationModal email={email.value} isOpen={modalOpen} onClose={onCloseModal} />\r\n        </>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../urlServer'\r\nimport { Context } from '../context'\r\n\r\nconst MailVerification = (props) => {\r\n\r\n    const emailHash = props.match.params.token\r\n    const [ loading, setLoading ] = useState(false)\r\n    const { toggleAuth } = useContext(Context)\r\n\r\n    function mail(){\r\n        axios({\r\n            method: 'post',\r\n            data: { emailHash: emailHash },\r\n            url: url+'/api/mailverification',\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                toggleAuth(res.data.token, res.data.userName)\r\n                props.history.push(`/home`)\r\n            }\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })    \r\n\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        mail()\r\n    },[emailHash])\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default MailVerification","import React, { useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport axios from 'axios'\r\nimport { RiArrowDownSLine } from \"react-icons/ri\"\r\nimport { MdChromeReaderMode } from \"react-icons/md\"\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport './Styles/Balance.css'\r\nimport { url } from '../urlServer'\r\nimport Cookies from 'js-cookie'\r\n\r\nexport const Balance = () => {\r\n\r\n    const token = Cookies.get('token')\r\n\r\n    const { userData } = useUserData()\r\n\r\n    const [valueFecha1, setValueFecha1] = useState('') \r\n    const [valueFecha2, setValueFecha2] = useState('') \r\n\r\n    const [viewDates, setViewDates] = useState(false)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    \r\n    const [ balance, setBalance ] = useState([])\r\n\r\n    const [countPages, setCountPages] = useState(1)\r\n    \r\n    const [totalPages, setTotalPages] = useState(1)\r\n    \r\n    const [countLastestPages, setCountLastestPages] = useState(1)\r\n\r\n    const [amountPending, setAmountPending] = useState(0)\r\n\r\n    useEffect(() => { \r\n        \r\n        setLoading(true)\r\n            \r\n        axios({\r\n            method: 'post',\r\n            data: {page: countPages},\r\n            url: url+'/api/userbalance',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setTotalPages(res.data.totalPages)\r\n                setBalance(res.data.data)\r\n                if(res.data.pending){\r\n                    setAmountPending(res.data.amountPending)\r\n                }\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }, [token, countLastestPages])\r\n\r\n    const [activeDate, setActiveDate] = useState(false)\r\n\r\n    function handleDate(e){\r\n\r\n        if(e){\r\n            e.preventDefault()\r\n        }\r\n\r\n        setLoading(true)\r\n        \r\n        const splitDate = valueFecha1.split('-')\r\n\r\n        const fechaInicial = new Date(splitDate[0], splitDate[1]-1, splitDate[2])\r\n\r\n        const splitDate2 = valueFecha2.split('-')\r\n\r\n        const fechaFinal = new Date(splitDate2[0], splitDate2[1]-1, splitDate2[2], 24, 0, 0)\r\n\r\n        if(!activeDate) {\r\n            setCountPages(1)\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { getFechaInicial: fechaInicial, getFechaFinal: fechaFinal, page: countPages},\r\n            url: url+'/api/userbalance',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then(res => {\r\n            setActiveDate(true)\r\n            setBalance(res.data.data)\r\n            setTotalPages(res.data.totalPages)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return <div className='balance-container'>\r\n\r\n        <div className='balance-title'>\r\n            <h3><MdChromeReaderMode /> Historial de balance</h3>\r\n        </div>\r\n        <form className='date-form' onSubmit={handleDate}>\r\n            <div className='wallet-balance'>\r\n                <label>Billetera:</label><span>${formatNumber(userData.wallet)}</span>\r\n            </div>\r\n            <p onClick={()=>setViewDates(!viewDates)}>Busqueda por Fecha</p>\r\n            <div onClick={()=>setViewDates(!viewDates)} className='flecha-busqueda-balance'>< RiArrowDownSLine /></div>\r\n            <p className={viewDates ? '' : 'none-balance'}>Desde </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha1(e.target.value)}/>\r\n            <p className={viewDates ? '' : 'none-balance'}>Hasta </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha2(e.target.value)}/>\r\n            <button className={viewDates ? '' : 'none-balance'}>Buscar</button>\r\n        </form>\r\n        <div className={amountPending > 0 ? 'withdraw-pending-container' : 'dNone'}>\r\n            Retiro en proceso por el monto de ${formatNumber(amountPending)}\r\n        </div>\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n        {\r\n            loading ? <div>\r\n                <div className=\"spinner-balance spinner-border text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            </div> :\r\n            balance.length <= 0 ? <div>\r\n                <h3 className='no-events-balance'>No hay eventos</h3>\r\n            </div> :\r\n            <div className='balance-list'>       \r\n            {\r\n                balance.map((balance)=> {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Recibido en sala:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Billetera:</p>\r\n                                <p>${formatNumber(balance.wallet)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ ${formatNumber(balance.won)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Pago de sala:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Billetera:</p>\r\n                                <p>${formatNumber(balance.wallet)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- ${formatNumber(balance.salaPrice)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'deposit' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Deposito:</p>\r\n                                <p>${formatNumber(balance.depositAmount)}</p>\r\n                                <p className='balance-description-title'>Billetera:</p>\r\n                                <p>${formatNumber(balance.wallet)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ ${formatNumber(balance.depositAmount)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.state === 'completed' && <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Retiro:</p>\r\n                                <p>${formatNumber(balance.withdrawAmount)}</p>\r\n                                <p className='balance-description-title'>Billetera:</p>\r\n                                <p>${formatNumber(balance.wallet)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- ${formatNumber(balance.withdrawAmount)}</p>\r\n                            </div>\r\n                        </li>\r\n                    )   \r\n                })\r\n            }\r\n            </div>\r\n        }\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance-down'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import React, { useState } from 'react'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { MdInfo, MdLockOutline } from \"react-icons/md\"\r\n\r\nconst UpdatePasswordForm = ({useFormValues, url, token}) => {\r\n    \r\n    const [newPasswordError, setNewPasswordError] = useState(false)\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    const [passwordLoading, setPasswordLoading] = useState(false)\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const password = useFormValues()\r\n    const newPassword = useFormValues()\r\n    const confirmNewPassword = useFormValues()\r\n\r\n    function updatePassword(e){\r\n        e.preventDefault()  \r\n\r\n        if(!reg_password.test(newPassword.value)){\r\n            return setPassword_valid(false)\r\n         }else{setPassword_valid(true)}\r\n\r\n        if(newPassword.value === confirmNewPassword.value){\r\n\r\n            setPasswordLoading(true)\r\n\r\n            axios({\r\n                method: 'post',\r\n                data: { password: password.value, newPassword: newPassword.value },\r\n                url: url+'/edit/passwordemail',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            }).then( res => {\r\n                setPasswordLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: res.data.msg,\r\n                    })\r\n                }\r\n            }).catch( error => {\r\n                setPasswordLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n        }else{return setNewPasswordError(true)}\r\n    }\r\n\r\n    return(\r\n        <div className='password-configuration'>\r\n            <h4><MdLockOutline />&nbsp;Cambio de contraseña</h4>\r\n            <form onSubmit={updatePassword}>\r\n                <input {...password} autoComplete='true' required type=\"password\" placeholder='Contraseña actual'/>\r\n                <input {...newPassword} autoComplete='true' required type=\"password\" placeholder='Contraseña nueva'/>\r\n                <input {...confirmNewPassword} autoComplete='true' required type=\"password\" placeholder='Confirmar contraseña'/>\r\n                <p className={newPasswordError ? 'configuration-warning' : 'dNone'}><MdInfo /> La confirmacion no coincide</p>\r\n                <p className={!password_valid ? 'configuration-warning' : 'dNone'}><MdInfo />&nbsp;Debe contener mayuscula, minuscula y numero, minimo 8 caracteres</p>\r\n                <button disabled={passwordLoading ? true : false}>\r\n                    <div className={passwordLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={passwordLoading ? 'dNone' : '' }> Actualizar Contraseña </p>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePasswordForm","import React, { useState } from 'react'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport Swal from 'sweetalert2'\r\nimport { MdInfo, MdMail } from \"react-icons/md\"\r\nimport axios from 'axios'\r\n\r\nconst UpdateEmailForm = ({url, useFormValues, token}) => {\r\n\r\n    const [newEmailError, setNewEmailError] = useState(false)\r\n    const [emailLoading, setEmailLoading] = useState(false)\r\n    \r\n    const email = useFormValues()\r\n    const newEmail = useFormValues()\r\n    const confirmNewEmail = useFormValues()\r\n\r\n    function updateEmail(e){\r\n        e.preventDefault()\r\n\r\n        if(newEmail.value === confirmNewEmail.value){\r\n\r\n            setEmailLoading(true)\r\n\r\n            axios({\r\n                method: 'post',\r\n                data: { newEmail: newEmail.value, email: email.value },\r\n                url: url+'/edit/passwordemail',\r\n                headers: {\r\n                    authorization: token\r\n                }\r\n            }).then( res => {\r\n                setEmailLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: res.data.msg,\r\n                    })\r\n                }\r\n            }).catch( error => {\r\n                setEmailLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n            \r\n        }else{return  setNewEmailError(true)}\r\n    }\r\n\r\n    return(\r\n        <div className='email-configuration'>\r\n            <h4><MdMail />&nbsp;Cambio de Email</h4>\r\n            <form onSubmit={updateEmail}>\r\n                <input id='changeEmail' autoComplete='true' {...email} required type=\"email\" placeholder='Email actual'/>\r\n                <input {...newEmail} autoComplete='true' required type=\"email\" placeholder='Email nuevo'/>\r\n                <input {...confirmNewEmail} autoComplete='true' required type=\"email\" placeholder='Confirmar email'/>\r\n                <p className={newEmailError ? 'configuration-warning' : 'dNone'}><MdInfo /> La confirmacion no coincide</p>\r\n                <button disabled={emailLoading ? true : false}>\r\n                    <div className={emailLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={emailLoading ? 'dNone' : '' }> Actualizar email</p>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateEmailForm\r\n","import React, {useState, useEffect} from 'react'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { MdInfo, MdAddCircle, MdAccountBalanceWallet, MdCreate } from \"react-icons/md\"\r\nimport { IoIosCloseCircle } from 'react-icons/io'\r\n\r\nconst WithdrawBank = ({token, url, useFormValues, counter, userData}) => {\r\n    \r\n    const reg_numbers = /^([0-9])*$/\r\n    const [editBank, setEditBank] = useState(false)\r\n    const [editBankLoading, setEditBankLoading] = useState(false)\r\n    const [dni_valid, setDni_valid] = useState(true)\r\n    const [numeroCuenta_valid, setNumeroCuenta_valid] = useState(true)\r\n    const [tipo_valid, setTipo_valid] = useState(true)\r\n    const [bank_valid, setBank_valid] = useState(true)\r\n    const [tipoCuenta_valid, setTipoCuenta_valid] = useState(true)\r\n    const [typeCount, setTypeCount] = useState('')\r\n    const [count, setCount] = useState(0)\r\n    const [type, setType] = useState('')\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n    \r\n    const titular = useFormValues()\r\n    const dni = useFormValues()\r\n    const numeroCuenta = useFormValues()\r\n\r\n    async function handleEditBank(e) {\r\n        e.preventDefault()\r\n\r\n        if(type === 'Tipo' || type === ''){\r\n            return setTipo_valid(false)\r\n        }else{setTipo_valid(true)}\r\n        if(!reg_numbers.test(dni.value)) {\r\n            return setDni_valid(false)\r\n        }else{setDni_valid(true)}\r\n        if(Bank === 'Seleccionar Banco' || Bank === ''){\r\n            return setBank_valid(false)\r\n        }else{setBank_valid(true)}\r\n        if(!reg_numbers.test(numeroCuenta.value)) {\r\n            return setNumeroCuenta_valid(false)\r\n        }else{setNumeroCuenta_valid(true)}\r\n        if(typeCount === 'Tipo de Cuenta' || typeCount === ''){\r\n            return setTipoCuenta_valid(false)\r\n        }else{setTipoCuenta_valid(true)}\r\n\r\n        setEditBankLoading(true)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            data: editBankValues,\r\n            url: url+'/edit/bankAccount',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then( res => {\r\n            setEditBankLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: res.data.msg,\r\n                })\r\n                setCount(count + 1)\r\n                counter(count + 1)\r\n            }\r\n        }).catch( error => {\r\n            setEditBankLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(userData.bank){\r\n            if(userData.bank.titular){\r\n                setEditBank(true)\r\n            }\r\n        }  \r\n    }, [userData])\r\n\r\n    function handleRemoveBank(e){\r\n\r\n        e.preventDefault()\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: editBankValues,\r\n            url: url+'/remove/bankAccount',\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then( res => {\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: res.data.msg,\r\n                })\r\n                setEditBank(false)\r\n            }\r\n        }).catch( error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    const [cancelEditBank, setCancelEditBank] = useState(false)\r\n\r\n    const optionTypes = [\r\n        { value: 'CC' },\r\n        { value: 'NIT' },\r\n        { value: 'CE' }\r\n    ]\r\n\r\n    const handleSelectType = (e) => {\r\n        const type = e.target.value\r\n        setType(type)\r\n    }\r\n\r\n    const [Bank, setBank] = useState('')\r\n\r\n    const optionBanks = [\r\n        { value: 'Davivienda' },\r\n        { value: 'Bancolombia' },\r\n        { value: 'Nequi' },\r\n        { value: 'Citibank' },\r\n        { value: 'Banco Caja Social' },\r\n        { value: 'Banco Compartir S.A.' },\r\n        { value: 'AV Villas' },\r\n        { value: 'BBVA Colombia' },\r\n        { value: 'Banco Agrario' },\r\n        { value: 'Banco Popular' },\r\n        { value: 'Banco Finandina' },\r\n        { value: 'Banco Cooperativo Coopcentral' },\r\n        { value: 'Banco Mundo Mujer' },\r\n        { value: 'Banco de Bogotá' },\r\n        { value: 'Banco de Occidente' },\r\n        { value: 'Banco Falabella' },\r\n        { value: 'Banco ITAU' },\r\n        { value: 'Banco ITAU antes CorpBanca' },\r\n        { value: 'Banco GNB Sudameris' },\r\n        { value: 'Banco Santander de Negocios' },\r\n        { value: 'Banco Serfinanzas' },\r\n        { value: 'Banco Pichincha' },\r\n        { value: 'RappiPay' },\r\n        { value: 'Banco Procredit' },\r\n        { value: 'Bancoomeva' },\r\n        { value: 'Scotiabank Colpatria' }\r\n    ]\r\n\r\n    const handleSelectBank = (e) => {\r\n        const Bank = e.target.value\r\n        setBank(Bank)\r\n    }\r\n\r\n    const optionTypeCount = [\r\n        { value: 'Cuenta Nequi' },\r\n        { value: 'Cuenta de Ahorro' },\r\n        { value: 'Cuenta Corriente'}\r\n    ]\r\n\r\n    const handleSelectTypeCount = (e) => {\r\n        const TypeCount = e.target.value\r\n        setTypeCount(TypeCount)\r\n    }\r\n    \r\n    const editBankValues = {\r\n        titular: titular.value, tipo: type, dni: dni.value, banco: Bank, numeroCuenta: numeroCuenta.value, tipoCuenta: typeCount\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                !editBank ?    \r\n                <div className='debit-configuration-wrap'>\r\n                    <h4>Agregar Cuenta Bancaria</h4>\r\n                    <form onSubmit={handleEditBank}>\r\n                        <input {...titular} required type=\"text\" placeholder='Nombre y apellido del titular'/>\r\n                        <div className='d-flex'>\r\n                            <select required onClick={handleSelectType} className='select-type' name=\"Tipo\">\r\n                                <option className='optiion-none'>Tipo</option>\r\n                                {\r\n                                    optionTypes.map((item) => (\r\n                                        <option key={item.value} value={item.value}>{item.value}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                            <input {...dni} required type=\"text\" placeholder='Numero de identificacion'/>\r\n                        </div>\r\n                        <p className={!tipo_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Selecciona Tipo</p>\r\n                        <p className={!dni_valid? 'configuration-warning' : 'dNone'}><MdInfo /> Solo Numeros</p>\r\n                        <select onClick={handleSelectBank} required className='select-type largo' name=\"Banco\">\r\n                            <option className='optiion-none'>Seleccionar Banco</option>\r\n                            {\r\n                                optionBanks.map((item) => (\r\n                                    <option key={item.value} value={item.value}>{item.value}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                        <p className={!bank_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Selecciona Banco</p>\r\n                        <input {...numeroCuenta} required type=\"text\" placeholder='Numero de Cuenta' />\r\n                        <p className='configuration-warning'><MdInfo />En caso de Nequi colocar numero telefonico</p>\r\n                        <p className={!numeroCuenta_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Solo Numeros</p>\r\n                        <select onClick={handleSelectTypeCount} required className='select-type largo' name=\"Tipo de cuenta\">\r\n                            <option className='optiion-none'>Tipo de Cuenta</option>\r\n                            {\r\n                                optionTypeCount.map((item) => (\r\n                                    <option key={item.value} value={item.value}>{item.value}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                        <p className={!tipoCuenta_valid ? 'configuration-warning' : 'dNone'}><MdInfo /> Selecciona Tipo de cuenta</p>\r\n                        <button disabled={editBankLoading ? true : false} className='button-aggregate-count'>\r\n                            <div className={editBankLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                            <p className={editBankLoading ? 'dNone' : '' }><MdAddCircle />Agregar</p>\r\n                        </button>\r\n                        <button disabled={editBankLoading ? true : false} className={cancelEditBank ? 'cancelEditBank' : 'dNone' } onClick={()=>{setEditBank(true); setCancelEditBank(false)}} type='button'><IoIosCloseCircle />Cancelar</button>\r\n                    </form>\r\n                </div> :\r\n                <div className='datos-configuration'>\r\n                    <h4><MdAccountBalanceWallet />&nbsp;Cuenta Bancaria</h4>\r\n                    <div>\r\n                        <div className='datos-description-container'>\r\n                            <p className='datos-titles'>Titular:</p>\r\n                            <p className='datos-description'>{userData.bank.titular}</p>\r\n                        </div>\r\n                        <div className='datos-description-container'>\r\n                            <p className='datos-titles'>Numero Identificacion:</p>\r\n                            <p className='datos-description'>{userData.bank.tipo}.&nbsp; {formatNumber(userData.bank.dni)}</p>\r\n                        </div>\r\n                        <div className='datos-description-container'>\r\n                            <p className='datos-titles'>Banco:</p>\r\n                            <p className='datos-description'>{userData.bank.banco} - {userData.bank.tipoCuenta}</p>\r\n                        </div>\r\n                        <div className='datos-description-container'>\r\n                            <p className='datos-titles'>Numero de cuenta:</p>\r\n                            <p className='datos-description'>{userData.bank.numeroCuenta}</p>\r\n                        </div>\r\n                        <div className='buttons-delete-bank'>\r\n                            <button onClick={handleRemoveBank}><IoIosCloseCircle />Eliminar</button>\r\n                            <button onClick={()=>{setEditBank(false); setCancelEditBank(true) }}><MdCreate />Editar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </> \r\n    )\r\n}\r\n\r\nexport default React.memo(WithdrawBank)\r\n","import React, { useState, useCallback } from 'react'\r\nimport { IoMdSettings, IoIosContact, IoIosCloseCircle } from 'react-icons/io'\r\nimport { useUserData } from '../hooks/useUserData'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport Cookies from 'js-cookie'\r\nimport './Styles/Profile.css'\r\nimport UpdatePasswordForm from '../Components/Forms/UpdatePasswordForm'\r\nimport UpdateEmailForm from '../Components/Forms/UpdateEmailForm'\r\nimport WithdrawBank from '../Components/Forms/WithdrawBank'\r\n\r\nexport const Profile = () => {\r\n    \r\n    const token = Cookies.get('token')\r\n\r\n    const [buttonDebito, setButtonDebito] = useState(false)\r\n    const [buttonPerfil, setButtonPerfil] = useState(true)\r\n    const [count, setCount] = useState(0)\r\n\r\n    const { userData } = useUserData(count)\r\n    \r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat(\"de-DE\").format(number)\r\n    }\r\n\r\n    if(!userData.date) {return 'Loading'}\r\n    \r\n    return  <div className='configurations-container'>\r\n                <div className='profile-title-container'>\r\n                    <h2 className='profile-title'><IoMdSettings />&nbsp;Configuracion de usuario</h2>\r\n                </div>\r\n                <div className='configuration-wrap'>\r\n                    <div className='configuration-buttons'>\r\n                        <div onClick={()=>{setButtonPerfil(true); setButtonDebito(false)}} className={!buttonPerfil ? 'configuration-button' : 'configuration-button active'}>Perfil</div>\r\n                        <div onClick={()=>{setButtonPerfil(false); setButtonDebito(true)}} className={!buttonDebito ? 'configuration-button' : 'configuration-button active'}>Cuenta de retiro</div>\r\n                    </div>\r\n                    <div className='configuration-details'>\r\n                        <div className={buttonPerfil ? 'perfil-configuration-container' : 'dNone'}>\r\n                            <div className='datos-configuration'>\r\n                                <div><IoIosContact size='50' />&nbsp; {userData.userName}</div>\r\n                                <h4>Datos de usuario</h4>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Nombre de usuario: </p>\r\n                                    <p className='datos-description'>{userData.userName}</p>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Email: </p>\r\n                                    <p className='datos-description'>{userData.email}</p>\r\n                                    <a href=\"#changeEmail\">Editar...</a>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Numero de documento: </p>\r\n                                    <p className='datos-description'>{formatNumber(userData.dni)}</p>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Fecha de creacion: </p>\r\n                                    <p className='datos-description'>{`${new Date(userData.date).getDate()}/${new Date(userData.date).getMonth() + 1}/${new Date(userData.date).getFullYear()}`}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <UpdatePasswordForm url={url} token={token} useFormValues={useFormValues} />\r\n                            \r\n                            <UpdateEmailForm url={url} token={token} useFormValues={useFormValues} />\r\n                            \r\n                            <div className='user-delete-configuration'>\r\n                                <button><IoIosCloseCircle size='40px' />Eliminar usuario</button>\r\n                            </div>\r\n                        </div>\r\n\r\n{/* -------------------------------------------------------------------------------------------------------------  */}\r\n                        <div className={buttonDebito ? 'debit-configuration-container' : 'dNone'}>\r\n                            <WithdrawBank url={url} token={token} useFormValues={useFormValues} userData={userData} counter={setCount} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n}","import React, { useContext } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Layout from './Components/Layout'\r\nimport { Blank } from './Components/Blank'\r\nimport { Home } from './Pages/Home'\r\nimport { Room } from './Pages/Room'\r\nimport { Signup } from './Pages/Signup'\r\nimport MailVerification from './Pages/MailVerification'\r\nimport { Balance } from './Pages/Balance'\r\nimport { Context } from './context'\r\nimport { Profile } from './Pages/Profile';\r\n\r\nfunction App() {\r\n\r\n  const { isAuth } = useContext(Context)\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path ='/mailverification/:token/' component={MailVerification}/>\r\n        <Route exact path ='/' component={Signup}/>\r\n        <Route exact path ='/pending/' component={Blank}/>\r\n        <Route exact path ='/failure/' component={Blank}/>\r\n        {\r\n          isAuth && \r\n          <Layout>\r\n            <Route exact path ='/profile/' component={Profile}/>\r\n            <Route exact path ='/balance/' component={Balance}/>\r\n            <Route exact path ='/home/' component={Home}/>\r\n            <Route exact path ='/sala/:salaId/' component={Room}/>\r\n          </Layout>\r\n        }\r\n        <Route component={Blank}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Context from './context'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport './GlobalStyles.css'\r\n\r\nReactDOM.render(\r\n  <Context.Provider>\r\n    <App />\r\n  </Context.Provider>,\r\n  document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}