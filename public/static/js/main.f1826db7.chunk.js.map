{"version":3,"sources":["urlServer.js","context.js","Images/arbol.svg","hooks/useComponentVisible.js","Components/Modals/Modal.js","hooks/useFormValues.js","Components/Modals/Modal2.js","Components/Modals/PasswordVerificationNewRoom.js","Components/Modals/JoinModal.js","Components/Forms/NavbarForm.js","Images/logo.svg","Images/2WANTED.svg","Components/NavbarLogo.js","Components/Modals/InvitationModal.js","Components/Navbar_navigation1.js","Components/Modals/PasswordVerfication.js","Components/Modals/WithdrawModal.js","Components/Modals/DepositModal.js","Components/Modals/WithdrawToUserModal.js","Components/Navbar_navigation2.js","Components/Navbar.js","Components/Layout.js","Components/Blank.js","Components/Forms/NewSalaForm.js","Components/ListRooms.js","Pages/Home.js","Components/Modals/Withdraw2wantedModal.js","Components/Modals/ToExcelModal.js","Components/Modals/MailModal.js","Pages/AdminHome.js","hooks/useGeneralBalance.js","Images/abajo.svg","Components/TreeData.js","Components/Modals/MiniModal.js","Components/Modals/childModal.js","Components/Modals/inviteModal.js","Components/Tree.js","Components/RomDetails.js","Pages/Room.js","hooks/useChildsData.js","Components/Modals/EmailVerificationModal2.js","Components/Modals/ForgotPasswordModal.js","Components/NavbarLogin.js","Images/bigLogo.svg","Components/Modals/EmailVerificationModal.js","Pages/Signup.js","Pages/AdminSignin.js","Pages/Balance.js","Pages/UsersInSala.js","Images/help_Create.png","Images/invitation.png","Images/invitation_modal.png","Images/searchRoom.png","Images/searchRoom_modal.png","Images/help_listRooms.png","Images/room1.png","Images/room2.png","Images/room3.png","Images/room4.png","Images/room5.png","Images/room6.png","Images/room7.png","Images/depositImg.png","Images/lateralMenu.png","Images/help_withdraw.png","Images/help_sendToUser.png","Pages/Help.js","Pages/Contact_us.js","Pages/HistoryUsers.js","Pages/ChangePassword.js","Components/Forms/UpdatePasswordForm.js","Components/Forms/UpdateEmailForm.js","Pages/Profile.js","App.js","index.js"],"names":["url","socket","io","Context","createContext","contextExport","Provider","children","useState","Cookies","get","isAuth","setIsAuth","isAdminAuth","setIsAdminAuth","csrfToken","setCsrfToken","useEffect","a","axios","response","data","Swal","fire","icon","title","text","generateCsrf","userData","setUserData","loadingUserData","setLoadingUserData","usdBtc","setUsdBtc","update","setUpdate","method","headers","error","username","then","remove","window","location","replace","getUserData","value","onUpdate","toggleAuth","userName","set","expires","toggleAdminAuth","logout","emit","onLogout","autoLogout","onAutoLogout","Consumer","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","Modal","props","isOpen","ReactDOM","createPortal","className","onClick","onClose","getElementById","useFormValues","setValue","onChange","e","Modal2","PasswordVerificationNewRoom","useContext","createLoading","setCreateLoading","password","payload","onSubmit","preventDefault","res","onClose2","history","push","id","catch","err","type","disabled","role","withRouter","modalOpen","setModalOpen","radio1","setRadio1","radio2","setRadio2","parentInput","setParentInput","handleRadio1","handleRadio2","joinData","parentUser","price","random","salaName","salaId","_id","name","toString","slice","checked","placeholder","NavbarForm","ArbolImg","iconSet","room1","dropdownFilter","iconNone","setIconNone","modal2Open","setModal2Open","searchLoading","setSearchLoading","filterSala","setFilterSala","onOpen2Modal","searchRoom1","size","src","alt","creator","React","memo","NavbarLogo","to","logo","logoletra","invitation","invitationData","parentUsername","host","message","Navbar_navigation1","toggle1","invitations","setInvitations","totalPages","setTotalPages","setInvitationData","countPages","setCountPages","count","setCount","notifications","setNotifications","on","page","countNotification","concat","length","map","onOpenModal","PasswordVerification","loading","setLoading","msg","WithdrawModal","confirm","setConfirm","errorAmount","setErrorAmount","errorBalance","setErrorBalance","errorAdress","setErrorAddress","fee","amount","address","amountNumber","Number","amountWithFee","totalAmount","isNaN","wallet","required","DepositModal","copy","setCopy","addressWallet","onCopy","WithdrawToUserModal","errorUser","setErrorUser","user","Navbar_navigation2","countUserData","setCountUserData","interval","setInterval","pushLogout","clearInterval","modal3Open","setModal3Open","modal4Open","setModal4Open","number","toggle3","Intl","NumberFormat","format","useCallback","state","Layout","Fragment","Blank","NewSalaForm","roomValid","setRoomValid","priceValid","setPriceValid","reg_whiteSpace","inUsd","toFixed","newSalaData","test","parseFloat","ListRooms","listRooms","setListRooms","activesData","setActivesData","activesLoading","setActivesLoading","countActives","setCountActives","total","salaPrice","salaCreator","Home","actives_560","setActives_560","MdHome","MdInfo","Withdraw2wantedModal","form","available","used","refresh","ToExcelModal","MailModal","asunto","AdminHome","viewButton","setViewButton","viewList","setViewList","list","setList","general","setGeneral","reload","setReload","totalDeposit","totalDeposits","actualCuenta","actualEnCuenta","totalGanado","totalWon","moneyUsersRooms","userMoneyRooms","totalWallets","totalInWallets","actual2wanted","withdrawUsers","totalEgresoUsers","withdraw2wanted","totalEgreso2wanted","totalRetirado","egresos","generalLoading","verification","verification2","useGeneralBalance","retiradoTotalTotal","modal1Open","setModal1Open","setAvailable","setUsed","totalPages2wantedwithdraws","setTotalPages2wantedwithdraws","page2wantedwithdraws","setPage2wantedwithdraws","withdraw2wantedLoading","setWithdraw2wantedLoading","refresh2wanted","setRefresh2wanted","inicialDate","setInicialDate","finalDate","setFinalDate","userHistory","emailPersonalized","userEmailPersonalized","toAddress","txId","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","TreeData","arbolData","formatNumber","lineDropDown","setLineDropdown","level3","level4","abajo","MiniModal","ChildModal","split","InviteModal","inviteLoading","setInviteLoading","newUser","msg_valid","setMsg_valid","Tree","userModal","setUserModal","dataModal","setDataModal","parent","RomDetails","dataRoom","inBalance","loadingToBalance","setLoadingToBalance","toBalance","acum3","acum4","tAcum","newCash","i","divide","Decimal","div","toNumber","add","sub","Room","match","params","setParent","setInBalance","setDataRoom","loadingDetails","setLoadingDetails","setArbolData","loadingChildsData","setLoadingChildsData","childsData","useChildsData","parentId","searchRoom","EmailVerificationModal2","code","email","maxLength","ForgotPasswordModal","loginLoading","setLoginLoading","isVerified","autoComplete","EmailVerificationModal","Signup","reg_password","email2","confirm_password","validEmail","setValidEmail","password_valid","setPassword_valid","userValid","setUserValid","signupLoading","setSignupLoading","IMG","suggested","Signin","password2","Balance","valueFecha1","setValueFecha1","valueFecha2","setValueFecha2","viewDates","setViewDates","balance","setBalance","countLastestPages","setCountLastestPages","activeDate","setActiveDate","handleDate","splitDate","fechaInicial","splitDate2","fechaFinal","getFechaInicial","getFechaFinal","won","depositAmount","withdrawAmount","toUser","UsersInSalas","sala","actualPage","setActualPage","Help","href","createImg","invitatonImg","invitationModalImg","searchImg","searchModalImg","help_listRooms","room2","room3","room4","room5","room6","room7","lateralMenu","depositImg","rel","help_withdraw","help_sendToUser","Contact_us","HistoryUsers","modeList","setModeList","responseList","setResponseList","listLoading","setListLoading","fecha1","fecha2","fechaInicio","reference","ChangePassword","forgotHash","token","confirmPassword","UpdatePasswordForm","newPasswordError","setNewPasswordError","passwordLoading","setPasswordLoading","newPassword","confirmNewPassword","UpdateEmailForm","newEmailError","setNewEmailError","newEmail","confirmNewEmail","Profile","App","path","component","exact","render"],"mappings":"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","file":"static/js/main.f1826db7.chunk.js","sourcesContent":["export const url = ''\r\n\r\n/* http://localhost:8080 */","import React, { createContext, useState, useEffect } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\nimport { url } from './urlServer'\r\n\r\nconst socket = io(url)\r\n\r\nexport const Context = createContext()\r\n\r\nconst Provider = ({ children }) => {\r\n  \r\n  const [isAuth, setIsAuth] = useState(Cookies.get('conected'))\r\n  const [isAdminAuth, setIsAdminAuth] = useState(Cookies.get('conectedAdmin'))\r\n  const [csrfToken, setCsrfToken] = useState(null)\r\n\r\n  useEffect(() => {\r\n    async function generateCsrf(){\r\n\r\n      try{\r\n\r\n        const response = await axios.get(url+'/api/csrf')\r\n        setCsrfToken(response.data.csrfToken)\r\n  \r\n      }catch(error){\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    generateCsrf()\r\n\r\n  },[])\r\n\r\n  const [userData, setUserData] = useState({})\r\n  const [loadingUserData, setLoadingUserData] = useState(false)\r\n  const [usdBtc, setUsdBtc] = useState(0)\r\n  const [update, setUpdate] = useState(0)\r\n\r\n  async function onLogout(){\r\n    try {\r\n        const response = await axios({\r\n            method: 'post',\r\n            url: url+'/api/logout',\r\n            headers: { \r\n              'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        if(response.data.error){\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: response.data.error,\r\n          })\r\n        }\r\n    }catch(error){\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function onAutoLogout(){\r\n    try {\r\n        const response = await axios({\r\n            method: 'post',\r\n            data: {username: Cookies.get('username') },\r\n            url: url+'/api/autologout',\r\n            headers: { \r\n              'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        if(response.data.error){\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: response.data.error,\r\n          })\r\n        }\r\n    }catch(error){\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error,\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getUserData(){\r\n\r\n        setLoadingUserData(true)\r\n\r\n        const response = await axios({\r\n          method: 'post',\r\n          url: url+'/api/me',\r\n          headers: { \r\n              'X-CSRF-Token': csrfToken\r\n          }\r\n        })\r\n        if(response.data.error){ \r\n          axios({\r\n            method: 'post',\r\n            url: url+'/api/logout',\r\n            headers: { \r\n              'X-CSRF-Token': csrfToken\r\n            }\r\n          }).then(()=>{\r\n            Cookies.remove('conected') \r\n            Cookies.remove('username')\r\n            window.location.replace('/') \r\n          })\r\n        }\r\n        if(response.data){\r\n            setUserData(response.data.userData)\r\n            setUsdBtc(response.data.usdBtc)\r\n            setLoadingUserData(false)\r\n        }\r\n      }\r\n    \r\n     if(csrfToken && isAuth){getUserData()} \r\n\r\n  },[csrfToken, update, isAuth])\r\n  \r\n  const value = {\r\n    isAuth,\r\n    isAdminAuth,\r\n    csrfToken,\r\n    userData,\r\n    loadingUserData,\r\n    usdBtc,\r\n    onUpdate:(update)=>{setUpdate(update)},\r\n    toggleAuth:(userName)=>{\r\n      setIsAuth(true)\r\n      Cookies.set('username', userName)\r\n      Cookies.set('conected', true, { expires: 0.041660 })\r\n    },\r\n    toggleAdminAuth:()=>{\r\n      setIsAdminAuth(true)\r\n      Cookies.set('conectedAdmin', true, { expires: 0.00694444 })\r\n    },\r\n    logout: () => { \r\n      socket.emit('disconnectClient', Cookies.get('username'))\r\n      onLogout()\r\n      setIsAuth(false)\r\n      Cookies.remove('conected') \r\n      Cookies.remove('username') \r\n    },\r\n    autoLogout: () => { \r\n      socket.emit('disconnectClient', Cookies.get('username'))\r\n      onAutoLogout()\r\n      setIsAuth(false)\r\n      Cookies.remove('username') \r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={value}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst contextExport = { Provider, Consumer: Context.Consumer }\r\n\r\nexport default contextExport","export default __webpack_public_path__ + \"static/media/arbol.7dae7409.svg\";","import { useState, useEffect, useRef } from \"react\"\r\n\r\nexport function useComponentVisible(initialIsVisible) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n    document.addEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleHideDropdown, !isComponentVisible);\r\n      document.removeEventListener(\"click\", handleClickOutside, !isComponentVisible);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"../Styles/Modal.css\"\r\n\r\nfunction Modal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default Modal","import { useState } from 'react'\r\n\r\nexport const useFormValues = () => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (e) => setValue(e.target.value)\r\n\r\n  return { value, onChange }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"../Styles/Modal.css\"\r\n\r\nfunction Modal2(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal2\"))\r\n    )\r\n}\r\n\r\nexport default Modal2","import React, { useContext, useState } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport {  MdLockOutline } from \"react-icons/md\"\r\nimport { Context } from '../../context'\r\nimport Modal2 from './Modal2'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nconst PasswordVerificationNewRoom = props => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [createLoading, setCreateLoading] = useState(false)\r\n\r\n    const password = useFormValues()\r\n\r\n    const payload = {...props.data, password: password.value}\r\n\r\n    function onConfirm(e){\r\n        e.preventDefault()\r\n        setCreateLoading(true)\r\n        axios({\r\n            data: payload,\r\n            method: 'post',\r\n            url: props.url,\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setCreateLoading(false)\r\n            if (res.data.error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error\r\n                })\r\n            }else{ \r\n                if(props.onClose2){props.onClose2()}\r\n                if(props.onClose){props.onClose()}\r\n                props.history.push(`/sala/${res.data.id}`)\r\n            }\r\n        }).catch(err => {\r\n            setCreateLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <Modal2 isOpen={props.isOpen} onClose={props.onClose}>\r\n        <form onSubmit={onConfirm}>\r\n            <h4>Enter your password</h4>\r\n            <div className='mb-3 mt-1 d-flex'>\r\n                <div className=\"pre-formS\">\r\n                    <div className=\"input-group-text invite-pre-form\"><MdLockOutline /></div>\r\n                </div>\r\n                <input className='join-input' {...password} type=\"password\"/>\r\n            </div>\r\n            <button className='btn btn-dark btn-block invitation-button' disabled={createLoading ? true : false}>\r\n                <div className={createLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p className={createLoading ? 'dNone' : ''}>Confirm!</p>\r\n            </button>\r\n        </form>\r\n    </Modal2>\r\n}\r\n\r\nexport default PasswordVerificationNewRoom","import React ,{ useState } from 'react'\r\nimport '../Styles/JoinModal.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Modal from './Modal'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\nimport PasswordVerificationNewRoom from './PasswordVerificationNewRoom'\r\n\r\nconst JoinModal = props => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [radio1, setRadio1] = useState(true)\r\n    const [radio2, setRadio2] = useState(false)\r\n    const [parentInput, setParentInput] = useState(true)\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    function handleRadio1(){\r\n        setRadio1(true)\r\n        setRadio2(false)\r\n        setParentInput(true)\r\n    }\r\n    function handleRadio2(){\r\n        setRadio1(false)\r\n        setRadio2(true)\r\n        setParentInput(false)\r\n    }\r\n\r\n    /* ----------------------------------------------------API---------------------------------------------------- */\r\n\r\n    const parentUser = useFormValues()\r\n\r\n    let joinData\r\n    let price = 0\r\n    let random = radio2 ? true : false\r\n    let salaName = ''\r\n\r\n    if(props.data){\r\n        joinData = {\r\n            salaId: props.data._id,\r\n            parentUser: `@${parentUser.value}`,\r\n            random: random\r\n        }\r\n        price = props.data.price\r\n        salaName = props.data.name\r\n    }\r\n \r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n\r\n     /* ----------------------------------------------------API---------------------------------------------------- */\r\n\r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <div className='join-modal'>\r\n                <h2>Are you sure?</h2>\r\n                <p>Room name: <span>{salaName}</span></p>\r\n                <p>Price: <span>{price.toString().slice(0,9)} BTC</span></p>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio1} onChange={handleRadio1} />\r\n                            <label onClick={handleRadio1}>Choose parent user</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" checked={radio2} onChange={handleRadio2} />\r\n                            <label onClick={handleRadio2}>Random parent user</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={parentInput ? 'form-group' : 'dNone'}>\r\n                        <p>Put the parent user</p>\r\n                        <div className='d-flex'>\r\n                            <div className=\"pre-formS\">\r\n                                <div className=\"input-group-text invite-pre-form\">@</div>\r\n                            </div>\r\n                            <input className='join-input' {...parentUser} placeholder='User' type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={!parentInput ? 'join-nota' : 'dNone'}>\r\n                        <p>\r\n                            <span>Nota:</span> \"You will be added as a referral from some random user with available space in this room.\"\r\n                        </p>\r\n                    </div>\r\n                    <button className='btn btn-dark btn-block invitation-button'>\r\n                        <p>Confirm</p>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <PasswordVerificationNewRoom isOpen={modalOpen} onClose={onCloseModal} onClose2={props.onClose} data={joinData} history={props.history} url={url+'/api/newUserInSala'}/>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(JoinModal)","import React, { useContext, useState, useEffect } from 'react'\r\nimport '../Styles/Navbar.css'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport JoinModal from '../Modals/JoinModal'\r\nimport { Context } from '../../context'\r\nimport { MdInfo, MdSearch, MdKeyboardReturn } from \"react-icons/md\";\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\n\r\nconst NavbarForm = ({ ArbolImg, url, iconSet, useComponentVisible }) => {\r\n\r\n    const room1 = useFormValues()\r\n    const dropdownFilter = useComponentVisible(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [searchLoading, setSearchLoading] = useState(false)\r\n    const [filterSala, setFilterSala] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(iconNone){iconSet(true)}else{iconSet(false)}\r\n    },[iconNone, iconSet])\r\n\r\n    function onOpen2Modal(){\r\n        setModal2Open(true)\r\n    }\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n\r\n    async function searchRoom1( e ){\r\n        e.preventDefault()\r\n        \r\n        setSearchLoading(true)\r\n\r\n        dropdownFilter.setIsComponentVisible(true)\r\n\r\n        try{\r\n            const response = await axios({\r\n                data: { name: room1.value },\r\n                method: 'post',\r\n                url: url+'/api/search/sala',\r\n                headers:{ \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n\r\n            setSearchLoading(false)\r\n            setFilterSala(response.data)\r\n\r\n        }catch(error){\r\n            setSearchLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        }\r\n    }\r\n\r\n    return <>\r\n\r\n        {/* ------------------------------------Section-Searcher hidden---------------------------------------------------------------------- */}      \r\n\r\n        <div className=\"section-searcher-hidden\">\r\n            <button onClick={()=> setIconNone(true)} className={!iconNone ? 'icon-navbar' : 'dNone'}><MdSearch size='23' /></button>\r\n                \r\n            <div className={iconNone  ? 'searcher-hidden' : 'dNone'}>\r\n                <form onSubmit={searchRoom1} >\r\n                    <button onClick={()=> setIconNone(false)} type='button' className='icon-navbar'><MdKeyboardReturn size='23' /></button>\r\n                    <input {...room1} type='text' placeholder='Room Name' />\r\n                    <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n                </form>\r\n            </div>\r\n                \r\n        </div>\r\n\r\n{/* ------------------------------------/Section-Searcher hidden---------------------------------------------------------------------- */}\r\n\r\n        <div className=\"section-searcher\">\r\n\r\n            <form onSubmit={searchRoom1} >\r\n                <div>\r\n                    <input {...room1} type='text' placeholder='Room Name'/>\r\n                </div>\r\n                <button type='submit' className='icon-navbar'><MdSearch size='23' /></button>\r\n            </form>\r\n            \r\n            <div ref={dropdownFilter.ref} className={dropdownFilter.isComponentVisible ? 'dropdown-menu-navbar-filter isActive' : 'dNone'}>\r\n                { \r\n\r\n                    searchLoading ? <div className= \"spinner-border text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div> : \r\n                        \r\n                    filterSala.data ?\r\n\r\n                    <div>\r\n                        \r\n                    <div className={dropdownFilter.isComponentVisible ? 'filter-sala' : 'dNone'}>            \r\n                            <div onClick={onOpen2Modal} className=' filter-sala-wrap'>\r\n                                <img src={ArbolImg} className='' alt=\"...\" />\r\n                                <div className='filter-sala-description'>\r\n                                    <p> Room Name:  <span> {filterSala.data.name}</span>  </p>\r\n                                    <p> Creator:  <span> {filterSala.data.creator}</span>  </p>\r\n                                    <p> Price:  <span> {filterSala.data.price.toString().slice(0,9)} BTC</span>  </p>\r\n                                </div>\r\n                            </div>\r\n                        <button onClick={onOpen2Modal} className=''>Join</button>\r\n                    </div> \r\n                    <p className='aviso-filtro'><MdInfo />Remember to respect uppercase and lowercase letters</p>\r\n                    </div> : <div className='no-spaces'>{filterSala.error}! <p className='aviso-filtro'><MdInfo />Remember to respect uppercase and lowercase letters</p></div>\r\n                } \r\n            </div>\r\n\r\n        </div>\r\n        <JoinModal data={filterSala.data} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n    </>\r\n}\r\n\r\nexport default React.memo(NavbarForm)","export default __webpack_public_path__ + \"static/media/logo.a414eaaf.svg\";","export default __webpack_public_path__ + \"static/media/2WANTED.a816f074.svg\";","import React from 'react'\r\nimport logo from '../Images/logo.svg'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavbarLogo = ({iconNone}) => {\r\n    return (<div className={!iconNone ? \"section-logos\" : 'dNone'}>\r\n        <Link className=\"Link\" to=\"/home\">< img className='logo1' src={logo} alt='logo-img' /> <img className='logo2' src={logoletra} alt=\"logoletra\"/> </Link>\r\n    </div>)\r\n}\r\n\r\nexport default React.memo(NavbarLogo)","import React,{ useState } from \"react\"\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../Styles/InvitationModal.css'\r\nimport Modal from \"./Modal\"\r\nimport { url } from '../../urlServer'\r\nimport PasswordVerificationNewRoom from './PasswordVerificationNewRoom'\r\n\r\nconst InvitationModal = (props) => {\r\n\r\n    const invitation = props.invitationData\r\n\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n\r\n    let joinData\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    if(invitation){\r\n\r\n        let random = false\r\n\r\n        if(!invitation.parentUsername){ random = true }\r\n\r\n        joinData = {\r\n            salaId: invitation.salaId,\r\n            parentUser: invitation.parentUsername,\r\n            random: random\r\n        }\r\n    }\r\n\r\n    function handleClick( e ){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Are you sure?</h3>\r\n\r\n            {\r\n                invitation && <div className='invitationModal'>\r\n                    <p>Invited by: <span>{invitation.host}</span></p>\r\n                    <p>Room Name: <span>{invitation.salaName}</span></p>\r\n                    <p>Price: <span>{invitation.price.toString().slice(0,9)} BTC</span></p>\r\n                    <p>Parent user: <span>{invitation.parentUsername}</span></p>\r\n                    <p>Message: <span>{invitation.message ? invitation.message : 'Ninguno' }</span></p>\r\n                    <button className='btn btn-dark btn-block invitation-button' onClick={handleClick}>\r\n                        <p>Join</p>\r\n                    </button>\r\n                </div>\r\n            }\r\n        \r\n        <PasswordVerificationNewRoom isOpen={modalOpen} onClose={onCloseModal} onClose2={props.onClose} data={joinData} history={props.history} url={url+'/api/newUserInSala'}/>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(InvitationModal)","import React, { useEffect, useState, useContext } from 'react'\r\nimport './Styles/Navbar.css'\r\nimport io from 'socket.io-client'\r\nimport { Context } from '../context'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport  InvitationModal  from './Modals/InvitationModal'\r\nimport { MdNotificationsNone } from \"react-icons/md\";\r\n\r\nconst Navbar_navigation1 = ({ArbolImg, useComponentVisible, url, username}) => {\r\n\r\n    const toggle1 = useComponentVisible(false);\r\n    const [invitations, setInvitations] = useState([])\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [invitationData, setInvitationData] = useState(null)\r\n    let [countPages, setCountPages] = useState(1)\r\n    let [count, setCount] = useState(0) \r\n    let [notifications, setNotifications] = useState(0)\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    function onOpenModal(invitationData){\r\n        setModalOpen(true)\r\n        setInvitationData(invitationData)\r\n    }\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(csrfToken){\r\n\r\n            const socket = io('/')\r\n\r\n            socket.emit('user_online', username)\r\n            \r\n            socket.on('new_message', () => {\r\n                setCount(count => count + 1) \r\n            })\r\n\r\n            if(count > 0){\r\n                setCountPages(1)\r\n            }\r\n            \r\n            axios({\r\n                method: 'post',\r\n                data: {page: countPages},\r\n                url: url+'/api/invitations',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then(res => {\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    if(countPages === 1 || count > 0){\r\n                        setNotifications(res.data.countNotification)\r\n                        setTotalPages(res.data.totalPages)\r\n                        setInvitations(res.data.invitations)\r\n                        setCount(0)\r\n                    }else{\r\n                        setInvitations( invitations => invitations.concat(res.data.invitations))\r\n                        setNotifications(res.data.countNotification)\r\n                        setTotalPages(res.data.totalPages)\r\n                    }\r\n                }\r\n            }).catch( error => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n        }    \r\n    },[countPages, count, username, url, csrfToken])\r\n\r\n    function notificationButton() {\r\n        \r\n        toggle1.setIsComponentVisible(true)\r\n\r\n        if(notifications > 0) {\r\n            axios({\r\n                method: 'post',\r\n                url: url+'/api/invitations-reset',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n    \r\n            setNotifications(0)\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <div className='button-nav-1'>\r\n            <button className='icon-navbar' onClick={notificationButton}>\r\n                <div className={notifications > 0 ? 'notification' : 'dNone'}>{notifications}</div>\r\n                <MdNotificationsNone size='23' />\r\n            </button>\r\n            <div ref={toggle1.ref} className={toggle1.isComponentVisible ? 'dropdown-menu-navbar1 isActive' : 'dropdown-menu-navbar1'}>\r\n                {\r\n                    invitations.length === 0 && <p className='no-spaces'>No notifications</p>\r\n                }\r\n                {\r\n                    invitations.map(invitation => {\r\n                        return (\r\n                            <li className={toggle1.isComponentVisible ? 'invitations-li isActive' : 'invitations-li'} key={invitation._id}>\r\n                                <button className='' onClick={()=> onOpenModal(invitation)}>\r\n                                    <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                    <div className='invitation-description'>\r\n                                        <p>Invited by: <span> {invitation.host}</span></p>\r\n                                        <p>Room Name: <span> {invitation.salaName}</span></p>\r\n                                        <p>Price: <span> {invitation.price.toString().slice(0,9)} BTC</span></p>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <button className={totalPages > countPages ? 'button-more-notifications' : 'dNone'} onClick={()=>{setCountPages(countPages + 1)}}>More ▼</button>\r\n            </div>\r\n            <InvitationModal invitationData={invitationData} isOpen={modalOpen} onClose={onCloseModal} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default React.memo(Navbar_navigation1)\r\n","import React, { useContext, useState } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport {  MdLockOutline } from \"react-icons/md\"\r\nimport { Context } from '../../context'\r\nimport Modal2 from './Modal2'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nconst PasswordVerification = props => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const password = useFormValues()\r\n\r\n    const payload = {...props.data, password: password.value}\r\n\r\n    function onConfirm(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            data: payload,\r\n            method: 'post',\r\n            url: props.url,\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                if(props.onClose2){props.onClose2()}\r\n                if(props.onClose){props.onClose()}\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <Modal2 isOpen={props.isOpen} onClose={props.onClose2}>\r\n        <form onSubmit={onConfirm}>\r\n            <h4>Enter your password</h4>\r\n            <div className='mb-3 mt-1 d-flex'>\r\n                <div className=\"pre-formS\">\r\n                    <div className=\"input-group-text invite-pre-form\"><MdLockOutline /></div>\r\n                </div>\r\n                <input className='join-input' {...password} type=\"password\"/>\r\n            </div>\r\n            <button className='btn btn-dark btn-block invitation-button' disabled={loading ? true : false}>\r\n                <div className={loading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p className={loading ? 'dNone' : ''}>Confirm!</p>\r\n            </button>\r\n        </form>\r\n    </Modal2>\r\n}\r\n\r\nexport default PasswordVerification","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport PasswordVerification from './PasswordVerfication' \r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\nimport { MdInfo } from 'react-icons/md'\r\nimport '../Styles/WithdrawModal.css'\r\n\r\nexport const WithdrawModal = props => {\r\n\r\n    const [confirm, setConfirm] = useState(false)\r\n    const [errorAmount, setErrorAmount] = useState(false)\r\n    const [errorBalance, setErrorBalance] = useState(false)\r\n    const [errorAdress, setErrorAddress] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n\r\n    const fee = 0.00004\r\n    const amount = useFormValues()\r\n    const address = useFormValues()\r\n    const amountNumber = Number(amount.value)\r\n    const amountWithFee = amountNumber - fee\r\n\r\n    const data = {amount: amount.value, address: address.value}\r\n\r\n    let totalAmount = isNaN(amountNumber) ? 'Invalid value' : amountNumber === 0 ? 0 : amountWithFee.toString().slice(0,9)\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    function onClose(){\r\n        setConfirm(false)\r\n        props.onClose()\r\n    }\r\n\r\n    function onError(){ \r\n        if(totalAmount === 'Invalid value') { return }\r\n        if(address.value.length < 20 || address.value.length > 50){ \r\n            setErrorAddress(true)\r\n            return \r\n        }else{ setErrorAddress(false) }\r\n        if(amountNumber < 0.0002) { \r\n            setErrorAmount(true)\r\n            return\r\n        }else{ \r\n            setErrorAmount(false)\r\n        }\r\n        if(props.wallet < amountNumber) { setErrorBalance(true)}else{\r\n            setErrorBalance(false)\r\n            setConfirm(true)\r\n        }\r\n    }\r\n    \r\n    async function handleWithdraw(e){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n\r\n    const wallet = props.wallet ? props.wallet.toString().slice(0,9) : 0\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={onClose}>\r\n            <form className='withdraw-modal' onSubmit={handleWithdraw} >\r\n                <h2>Send Bitcoin to address</h2>\r\n                <h4>Wallet {wallet} BTC</h4>\r\n                <div className={confirm ? 'withdraw-confirm-address' : 'dNone'}>\r\n                    <h4>To Address:</h4>\r\n                    <p>{address.value}</p>\r\n                </div>\r\n                <div className={confirm ? 'dNone' : ''}>\r\n                    <div>\r\n                        <p className='p-withdrawModal'>Address</p>\r\n                        <input {...address} required={true} className='join-input' type=\"text\" placeholder='bc1qwyxy6s5zegv70ynz247qwyypnns4zy6ljz8tst'/>\r\n                        <p className={errorAdress ? 'minimun-withdraw-p minimunBtc' : 'dNone'}><MdInfo />  Invalid address.</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className='p-withdrawModal'>Amount</p>\r\n                        <input {...amount} required={true} className='join-input' type='number' placeholder='$ 0.01'/>\r\n                        <p className={errorBalance ? 'minimun-withdraw-p minimunBtc' : 'dNone'}><MdInfo />  The balance in the wallet is not enough.</p>\r\n                        <p className={errorAmount ? 'minimun-withdraw-p minimunBtc' : 'minimun-withdraw-p'}><MdInfo />  Minimum amount 0.0002 BTC.</p>\r\n                    </div>\r\n                </div>\r\n                <div className='total-receive-withdraw'>\r\n                    <p>Total to receive in address: <span className={totalAmount === 'Invalid value' ? 'total-receive-span' : ''}>{totalAmount}</span></p>\r\n                </div>\r\n                <div>\r\n                    <p><MdInfo />  Fee: {fee} BTC.</p>\r\n                    <p><MdInfo />  Bitcoin transactions usually take 20 minutes to 1 day to complete.</p>\r\n                </div>\r\n\r\n                <button onClick={onError} className={!confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='button'>Send</button>\r\n                <button className={confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='submit'>\r\n                    <p> Confirm withdrawal for {Number(amount.value).toString().slice(0,9)}</p>\r\n                </button>\r\n                <button className='btn btn-dark btn-block withdraw-modal-cancelar' onClick={onClose} type='button'>Cancel</button>\r\n            </form>\r\n\r\n            <PasswordVerification isOpen={modalOpen} onClose={onClose} onClose2={onCloseModal} data={data} url={url+'/api/sendbtc'} />\r\n        </Modal>\r\n}","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport QRCode from 'react-qr-code'\r\nimport '../Styles/DepositModal.css'\r\nimport { MdContentCopy } from \"react-icons/md\"\r\nimport { IoIosCheckmarkCircle } from \"react-icons/io\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nexport const DepositModal = props => {\r\n\r\n    const [ copy, setCopy ] = useState(false)\r\n\r\n    const userData  = props.userData\r\n\r\n    const address = userData.addressWallet\r\n\r\n    function onClose(){\r\n        setCopy(false)\r\n        props.onClose()\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={onClose}>\r\n\r\n        {\r\n            address ?\r\n\r\n            <form className='depositForm'>\r\n                <h2>Your Btc address</h2>\r\n\r\n                <div>\r\n\r\n                    <div className='qr-container'>\r\n                        <QRCode value={address} size={130} />\r\n                    </div>\r\n\r\n                    <p>{address}</p>\r\n                    \r\n                    <CopyToClipboard text={address} onCopy={()=>setCopy(true)}>\r\n                        <button type='button' className='button-copy-deposit'>\r\n                            {\r\n                                copy ? \r\n                                <div>\r\n                                Copied <IoIosCheckmarkCircle />     \r\n                                </div> : \r\n                                <div>\r\n                                    Copy <MdContentCopy />\r\n                                </div>\r\n                            } \r\n                        </button>\r\n                    </CopyToClipboard>\r\n\r\n                </div>\r\n\r\n                <button className='btn btn-dark btn-block withdraw-modal-cancelar' type='button' onClick={onClose}>Close</button>\r\n\r\n            </form> :\r\n\r\n            <div>Loading...</div>\r\n\r\n        }\r\n\r\n    </Modal>\r\n}","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport '../Styles/WithdrawToUserModal.css'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { MdInfo } from 'react-icons/md'\r\nimport { url } from '../../urlServer'\r\nimport PasswordVerification from './PasswordVerfication'\r\n\r\nconst WithdrawToUserModal = props => {\r\n\r\n    const [confirm, setConfirm] = useState(false)\r\n    const [errorAmount, setErrorAmount] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [errorBalance, setErrorBalance] = useState(false)\r\n    const [errorUser, setErrorUser] = useState(false)\r\n\r\n    const user = useFormValues()\r\n    const amount = useFormValues()\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const amountNumber = Number(amount.value)\r\n\r\n    function onError(){\r\n        if(!user.value){ \r\n            setErrorUser(true)\r\n            return\r\n        }else{ setErrorUser(false) }\r\n        if(amountNumber === 'Invalid value') { return }\r\n        if(amountNumber < 0.00005) { \r\n            setErrorAmount(true)\r\n            return\r\n        }else{ \r\n            setErrorAmount(false)\r\n        }\r\n        if(props.wallet < amountNumber) { setErrorBalance(true)}else{\r\n            setErrorBalance(false)\r\n            setConfirm(true)\r\n        }\r\n    }\r\n\r\n    function onClose(){\r\n        setConfirm(false)\r\n        props.onClose()\r\n    }\r\n\r\n    const data = {amount: amount.value, username: `@${user.value}`}\r\n\r\n    async function handleWithdraw(e){\r\n        e.preventDefault()\r\n        setModalOpen(true)\r\n    }\r\n    \r\n    const wallet = props.wallet ? props.wallet.toString().slice(0,9) : 0\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={onClose}>\r\n        <form onSubmit={handleWithdraw} className='withdraw-toUser-form'>\r\n            <h2>Send Bitcoin to user</h2>\r\n\r\n            <h4>Wallet {wallet} BTC</h4>\r\n\r\n            <div className={confirm ? 'withdraw-toUser-confirm' : 'dNone'}>\r\n                <h4>\r\n                    To user:\r\n                </h4>\r\n                <p>@{user.value}</p>\r\n            </div>\r\n\r\n            <div className={confirm ? 'dNone' : ''}>\r\n                <div className='toUser-div1'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">@</div>\r\n                    </div>\r\n                    <input {...user} required={true} className='join-input' type=\"text\" placeholder='User'/>\r\n                </div>\r\n                <p className={errorUser ? 'redLetters' : ''}><MdInfo />  The user must respect uppercase and lowercase letters.</p>\r\n                <div className='toUser-div1'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">$</div>\r\n                    </div>\r\n                    <input {...amount} required={true} className='join-input' type='number' placeholder='Amount'/>\r\n                </div>\r\n                <p className={errorBalance ? 'redLetters' : 'dNone'}><MdInfo />  The balance in the wallet is not enough.</p>\r\n                <p className={errorAmount ? 'redLetters' : ''}><MdInfo />  Minimum to send: 0.00005 BTC.</p>\r\n            </div>\r\n            \r\n            <p className='toUser-info'>This transaction is instantaneous and free.</p>\r\n\r\n            <button onClick={onError} className={!confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='button'>Send</button>\r\n            <button className={confirm ? 'btn btn-dark btn-block invitation-button' : 'dNone'} type='submit'>\r\n                <p> Confirm withdrawal for {amount.value} BTC</p>\r\n            </button>\r\n            <button className='btn btn-dark btn-block toUser-cancelar' onClick={onClose} type='button'>Cancel</button>\r\n\r\n        </form>\r\n        <PasswordVerification isOpen={modalOpen} onClose={onClose} onClose2={onCloseModal} data={data} url={url+'/api/sendinternalbtc'} />\r\n    </Modal>\r\n}\r\n\r\nexport default WithdrawToUserModal","import React, {useContext, useState, useEffect } from 'react'\r\nimport './Styles/Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport { Context } from '../context'\r\nimport { WithdrawModal } from './Modals/WithdrawModal'\r\nimport { DepositModal } from './Modals/DepositModal'\r\nimport { IoMdSettings, IoIosContact } from 'react-icons/io'\r\nimport { MdRefresh, MdAccountCircle, MdKeyboardTab, MdAccountBalanceWallet, MdFileUpload, MdFileDownload, MdHelpOutline, MdChromeReaderMode, MdExitToApp, MdMail } from \"react-icons/md\"\r\nimport WithdrawToUserModal from './Modals/WithdrawToUserModal'\r\n\r\nconst Navbar_navigation2 = props => {\r\n\r\n    const [countUserData, setCountUserData] = useState(0)\r\n\r\n    const { logout, autoLogout, userData, loadingUserData, usdBtc, onUpdate } = useContext(Context)\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat('en-US').format(number)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const cookie = Cookies.get('conected')\r\n            if(!cookie){ \r\n                props.pushLogout()\r\n                autoLogout()\r\n            }\r\n        }, 300000)\r\n        return () => clearInterval(interval)\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(countUserData > 0){onUpdate(countUserData)}\r\n    },[countUserData, onUpdate])\r\n    \r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [modal3Open, setModal3Open] = useState(null)\r\n    const [modal4Open, setModal4Open] = useState(null)\r\n\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n    function onClose3Modal(){\r\n        setModal3Open(null)\r\n    }\r\n    function onClose4Modal(){\r\n        setModal4Open(null)\r\n    }\r\n\r\n    function handleLogout() {\r\n        props.pushLogout()\r\n        logout()\r\n    }\r\n\r\n    const toggle3 = props.useComponentVisible(false)\r\n\r\n    const wallet = userData.wallet ? userData.wallet.toString().slice(0,9) : 0\r\n\r\n    return (\r\n        <div className='section-navIcons'>\r\n            <div className='button-nav-2'>\r\n\r\n                <button onClick={()=>toggle3.setIsComponentVisible(true)} className='icon-navbar'>\r\n                    <MdAccountCircle size='23' />\r\n                </button>\r\n\r\n                <div ref={toggle3.ref} className={toggle3.isComponentVisible ? 'dropdown-menu-navbar2 isActive' : 'dropdown-menu-navbar2'}>\r\n                    <div onClick={()=>toggle3.setIsComponentVisible(false)} className='button-close-nav'>X</div>\r\n                    <div  className=\"item-menu-right user\">\r\n                        < IoIosContact size='46'/>    <p> {userData.userName}</p>\r\n                    </div>\r\n                    <div className='item-menu-right-wallet-container'>\r\n                        <div><MdAccountBalanceWallet />&nbsp;Wallet</div>\r\n                        <div>\r\n                            <div className='d-flex balance-refresh-container'>< MdRefresh size='35' className={loadingUserData ? 'refresh-balance-loading ' : 'refresh-balance'} onClick={()=> setCountUserData(countUserData + 1)} />  {wallet} <p>&nbsp;BTC</p></div>\r\n                            <div className='d-flex justify-content-center'><p>&nbsp;&nbsp;(&nbsp;</p><p>  {!usdBtc ? '' : userData.wallet < usdBtc ? 0 : formatNumber(userData.wallet / usdBtc)}</p><p>&nbsp; Dollar)</p></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='item-menu-right-cashier'>\r\n                        <div onClick={()=> setModal4Open(true)} to='/wallet' className='button-deposit'><MdFileUpload />Deposit</div>\r\n                        <div onClick={()=>setModal3Open(true)} className='button-withdraw'><MdFileDownload />Withdraw</div>\r\n                    </div>\r\n                    <div onClick={()=> setModal2Open(true)} className=\"item-menu-right-withdrawToUser\">\r\n                        <MdKeyboardTab /> &nbsp;&nbsp; Send BTC to 2wanted User (free)\r\n                    </div>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/balance/' className=\"item-menu-right\">\r\n                        <MdChromeReaderMode /><p>&nbsp;Balance history</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/profile/' className=\"item-menu-right\" >\r\n                    < IoMdSettings /><p>&nbsp;User settings</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/help/' className=\"item-menu-right\">\r\n                        <MdHelpOutline /><p>&nbsp;Instructions</p> \r\n                    </Link>\r\n                    <Link onClick={()=> toggle3.setIsComponentVisible(false)} to='/contact_us/' className=\"item-menu-right\">\r\n                        <MdMail /><p>&nbsp;Contact us</p> \r\n                    </Link>\r\n                    <div onClick={handleLogout} className=\"item-menu-right\">\r\n                        <MdExitToApp /><p>&nbsp;Logout</p>  \r\n                    </div>\r\n                </div> \r\n                \r\n            </div>  \r\n            <WithdrawToUserModal wallet={userData.wallet} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n            <WithdrawModal  wallet={userData.wallet} isOpen={modal3Open} onClose={onClose3Modal} />\r\n            <DepositModal userData={userData} isOpen={modal4Open} onClose={onClose4Modal} />        \r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default React.memo(Navbar_navigation2)\r\n","import React, { useState, useCallback } from 'react'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport './Styles/Navbar.css'\r\nimport { useComponentVisible } from '../hooks/useComponentVisible'\r\nimport { url } from '../urlServer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport NavbarForm from './Forms/NavbarForm'\r\nimport Logo from './NavbarLogo'\r\nimport ButtonNav1 from './Navbar_navigation1'\r\nimport ButtonNav2 from './Navbar_navigation2'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n    \r\n    const username = Cookies.get('username') \r\n\r\n    /* -----------------------------Busqueda---------------------------------------------------------------- */\r\n\r\n    const pushLogout = useCallback(() => props.history.push('/'), [props.history])\r\n\r\n    const [iconNone, setIconNone] = useState(false)\r\n\r\n    const iconSet = useCallback((state) => {\r\n        if(state){\r\n            setIconNone(true)\r\n        }else { setIconNone(false) }\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n        <nav className='principal-navbar'>\r\n          \r\n{/* ------------------------------------Section-Logos---------------------------------------------------------------------- */}       \r\n            <Logo iconNone={iconNone} />\r\n{/* ------------------------------------/Section-Logos---------------------------------------------------------------------- */}       \r\n            \r\n{/* ------------------------------------Section-Searcher---------------------------------------------------------------------- */}            \r\n            <NavbarForm useComponentVisible={useComponentVisible} iconSet={iconSet} ArbolImg={ArbolImg} url={url} />\r\n{/* ------------------------------------/Section-Searcher---------------------------------------------------------------------- */}       \r\n{/* ------------------------------------Section-NavIcons---------------------------------------------------------------------- */}       \r\n            \r\n            <div className={!iconNone ? 'navbar-buttons-left' : 'dNone'}>\r\n                <ButtonNav1 ArbolImg={ArbolImg} useComponentVisible={useComponentVisible} url={url} username={username} />\r\n                <ButtonNav2 pushLogout={pushLogout} useComponentVisible={useComponentVisible} />\r\n            </div>\r\n{/* ------------------------------------/Section-NavIcons--------------------------------------------------------------------- */}       \r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n\r\n\r\n","import React from \"react\"\r\nimport Navbar from \"./Navbar\"\r\n\r\nfunction Layout (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {props.children}\r\n            <Navbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {useEffect} from 'react'\r\n\r\nexport const Blank = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.history.push('/')\r\n    }, [props])\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport PasswordVerificationNewRoom from '../Modals/PasswordVerificationNewRoom'\r\nimport '../../Pages/Styles/Home.css'\r\nimport { MdHome, MdInfo } from \"react-icons/md\"\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { url } from '../../urlServer'\r\n\r\nconst NewSalaForm = props => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n\r\n    const [roomValid, setRoomValid] = useState(true)\r\n    const [priceValid, setPriceValid] = useState(true)\r\n    \r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const { usdBtc } = useContext(Context)\r\n\r\n    const name = useFormValues()\r\n    const price = useFormValues()\r\n\r\n    const inUsd = (price.value / usdBtc).toFixed(2)\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    \r\n    const newSalaData = {\r\n        name: name.value,\r\n        price: price.value,\r\n    }\r\n\r\n    function newSala( e ){\r\n        e.preventDefault()\r\n\r\n        if( reg_whiteSpace.test(name.value) || name.value.length < 4 || name.value.length > 15){\r\n            return setRoomValid(false)\r\n        }else { setRoomValid(true)}\r\n        if(parseFloat(price.value) < 0.00005 || price.value === '' ){\r\n            return setPriceValid(false)\r\n        }else{ setPriceValid(true) }\r\n\r\n        setModalOpen(true)\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"create-custom\">\r\n            <div className='create-form-container'>\r\n                <h3>Create Room</h3>    \r\n                <form onSubmit={newSala} >\r\n                    <div className={roomValid ? 'mb-3' : 'mb-2'}>\r\n                        <div className='d-flex'>\r\n                            <div>\r\n                                <div className=\"input-group-text input-guide\">< MdHome /></div>\r\n                            </div>\r\n                            <input type='text' {...name} placeholder='Room Name' />\r\n                        </div>\r\n                        <label className={!roomValid ? 'new-room-valid' : 'dNone'}><MdInfo />Minimum 4 characters, maximum 15, must not contain spaces</label>\r\n                    </div>\r\n                    <div className={priceValid ? 'mb-3' : 'mb-2'}>\r\n                        <div className='d-flex'>\r\n                            <div>\r\n                                <div className=\"input-group-text input-guide\">$</div>\r\n                            </div>\r\n                            <input  placeholder='Price in bitcoin' type='number' {...price} />\r\n                        </div>\r\n                        <p className={inUsd > 0 ? 'salaPriceInUsd' : 'dNone'}>={inUsd} USD</p>\r\n                        <label className={!priceValid ? 'new-room-valid' : 'dNone'}><MdInfo />Minimum room value 0.00005 BTC</label>\r\n                    </div>\r\n                    <button>\r\n                        <p>Create!</p>\r\n                    </button>\r\n                </form>   \r\n            </div>       \r\n\r\n            <PasswordVerificationNewRoom isOpen={modalOpen} onClose={onCloseModal} data={newSalaData} history={props.props.history} url={url+'/api/new/sala'}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewSalaForm\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport ArbolImg from '../Images/arbol.svg'\r\nimport { Context } from '../context'\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListRooms = ({ url }) => {\r\n\r\n    const [listRooms, setListRooms] = useState([])\r\n    const [activesData, setActivesData] = useState({})\r\n    const [activesLoading, setActivesLoading] = useState(false)\r\n    let [countActives, setCountActives] = useState(1) \r\n    const { csrfToken } = useContext(Context)\r\n\r\n    useEffect(() => { \r\n        if(csrfToken){\r\n            setActivesLoading(true)\r\n            axios({\r\n                method: 'post',\r\n                data: {page: countActives},\r\n                url: url+'/api/search/listSalas',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setActivesLoading(false)\r\n                if(res.data.error) {\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setActivesLoading(false)\r\n                    setListRooms(res.data.data)\r\n                    const data = {total: res.data.total} \r\n                    setActivesData(data)\r\n                }\r\n            }).catch( err => {\r\n                setActivesLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }    \r\n    }, [countActives, url, csrfToken])\r\n\r\n    return(\r\n        <div className='actives-rooms'>\r\n            <h3>Your Rooms</h3>\r\n            <div className={activesData.total === 1 ? 'dNone' : 'pagination'}>\r\n                <button disabled={countActives === 1 ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives -= 1) } ><AiOutlineCaretLeft size='30'/></button> \r\n                    <p><span>{countActives}</span> - {activesData.total}</p> \r\n                <button disabled={countActives === activesData.total ? true : false} className='pagination-button' onClick={()=> setCountActives(countActives += 1) }><AiOutlineCaretRight size='30' /></button>\r\n            </div>\r\n            {\r\n                activesLoading ? <div className=' text-center'>\r\n                    <div className=\"spinner-border spiner-actives text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div> : \r\n                <div>\r\n                    {\r\n                        listRooms.length === 0 ? <p className='no-salas-actives'>No rooms created!</p>  :\r\n                        <div> \r\n                            <ul>\r\n                                {\r\n                                    listRooms.map((data) => {\r\n                                        return (\r\n                                            <li className='actives-li' key={data.salaId}>\r\n                                                <Link to={`/sala/${data.salaId}`} className='actives-links Link'>\r\n                                                    <img src={ArbolImg} alt=\"ArbolImg\"/>\r\n                                                    <div className='actives-description'>\r\n                                                        <p>Room Name: <span>{data.salaName}</span></p>\r\n                                                        <p>Price: <span>{data.salaPrice.toString().slice(0,9)} BTC</span></p>\r\n                                                        <p>Creator: <span>{data.salaCreator}</span></p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>        \r\n                        </div>\r\n                    }\r\n                </div> \r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListRooms","import React, { useState } from 'react'\r\nimport {MdHome, MdList, MdInfo} from \"react-icons/md\"\r\nimport { url } from '../urlServer'\r\nimport NewSalaForm from '../Components/Forms/NewSalaForm'\r\nimport ListRooms from '../Components/ListRooms'\r\nimport Swal from 'sweetalert2'\r\nimport './Styles/Home.css'\r\nimport axios from 'axios'\r\n\r\nexport const Home = (props) => {\r\n\r\n    const [actives_560, setActives_560] = useState(false)\r\n    \r\n    return(\r\n        <div className='home-container'>\r\n            <div className='wrap-1100'>\r\n            <div className={actives_560 ? 'home-left' : 'home-left home-left-560'}>\r\n\r\n                <ListRooms Swal={Swal} axios={axios} url={url} />\r\n                \r\n            </div>\r\n\r\n            <div className={!actives_560 ? 'home-right' : 'home-right home-right-560'}>\r\n\r\n                <NewSalaForm props={props} axios={axios} url={url} MdHome={MdHome} MdInfo={MdInfo}/>\r\n\r\n                <div className='section-video'>\r\n                    <div className='youtube-container'>\r\n                        <button className='instruction_home' onClick={()=>props.history.push('/help')}>Instructions</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <div className='navigation-container'>\r\n                <button onClick={()=> setActives_560(false) } className={!actives_560 ? 'navigation-button navigation-left' : 'navigation-button left-button' }><MdHome size='35' /></button>  \r\n                <button onClick={()=> setActives_560(true) } className={actives_560 ? 'navigation-button navigation-right' : 'navigation-button' }><MdList size='35' /></button>  \r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport '../Styles/Withdraw2wantedModal.css'\r\n\r\nexport const Withdraw2wantedModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const amount = useFormValues()\r\n    const address = useFormValues()\r\n\r\n    const form = {\r\n        user: props.user, \r\n        amount: amount.value,\r\n        address: address.value\r\n    }\r\n\r\n    function handleWithdraw(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/admin/user2wanted_withdraw',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                props.refresh()\r\n                props.onClose()\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\r\n        <div className='withdraw2wanted-modal-container'>\r\n            <h1>Estas seguro?</h1>\r\n\r\n            <div>\r\n                <p>Registrar retiro de cuenta de 2Wanted con el usuario:</p>\r\n                <h4>{props.user}</h4>\r\n            </div>\r\n            <div>\r\n                <p>Disponible:</p>\r\n                <h4>{props.available}</h4>\r\n            </div>\r\n            <div>\r\n                <p>Usado:</p>\r\n                <h4>{props.used}</h4>\r\n            </div>\r\n            <div>\r\n                <p>Monto:</p>\r\n                <input {...amount} placeholder='Monto' required type=\"number\"/>\r\n            </div>\r\n            <div>\r\n                <p>Direccion Btc</p>\r\n                <input {...address} placeholder='Direccion' required type=\"text\"/>\r\n            </div>\r\n            <div className='withdraw2wanted-modal-buttons'>\r\n                <button onClick={props.onClose}>Cancelar</button>\r\n                <button onClick={handleWithdraw}>{loading ? 'CARGANDO........' : 'Confirmar'}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </Modal>\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const ToExcelModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    function handleBalanceExcel(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url+'/api/admin/balanceToExcel',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Succes',\r\n                text: res.data.msg,\r\n            })\r\n            props.onClose()\r\n            \r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\r\n        <h1>Estas seguro?</h1>\r\n        <br/>\r\n        <h2>Se descargara un balance el formato excel</h2>\r\n\r\n        <div className='withdraw2wanted-modal-buttons'>\r\n            <button onClick={props.onClose}>Cancelar</button>\r\n            <button onClick={handleBalanceExcel}>{loading ? 'CARGANDO......' : 'Confirmar'}</button>\r\n        </div>\r\n\r\n    </Modal>\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const MailModal = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    function handleEmailPersonalized(){\r\n\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { msg: props.msg, asunto: props.asunto, user: `@${props.user}` },\r\n            url: url+'/api/admin/mailpersonalized',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n                props.onClose()\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\r\n        <h1>Estas seguro?</h1>\r\n\r\n        <p>Enviar Email al usuario:</p>\r\n        <h2> {props.user} </h2>\r\n        <p>Con el asunto:</p>\r\n        <h2> {props.asunto} </h2>\r\n\r\n        <div className='withdraw2wanted-modal-buttons'>\r\n            <button onClick={props.onClose}>Cancelar</button>\r\n            <button onClick={handleEmailPersonalized}>{loading ? 'CARGANDO........' : 'Confirmar'}</button>\r\n        </div>\r\n    </Modal>\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { useGeneralBalance } from '../hooks/useGeneralBalance'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport { Withdraw2wantedModal } from '../Components/Modals/Withdraw2wantedModal'\r\nimport { ToExcelModal } from '../Components/Modals/ToExcelModal'\r\nimport { MailModal } from '../Components/Modals/MailModal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/AdminHome.css'\r\n\r\nexport const AdminHome = (props) => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [viewButton, setViewButton] = useState(false)\r\n    const [viewList, setViewList] = useState(false)\r\n    const [list, setList] = useState([])\r\n\r\n    const { reload, totalDeposit, actualCuenta, totalGanado, moneyUsersRooms, totalWallets, actual2wanted, withdrawUsers, withdraw2wanted, totalRetirado, generalLoading, verification, verification2 } = useGeneralBalance()\r\n\r\n    const retiradoTotalTotal = totalRetirado ? totalRetirado : 0\r\n\r\n    const user = useFormValues()\r\n\r\n    const [ modal1Open, setModal1Open ] = useState(false)\r\n    const [ modal2Open, setModal2Open ] = useState(false)\r\n    const [ modal4Open, setModal4Open ] = useState(false)\r\n    const [ available, setAvailable ] = useState(0)\r\n    const [ used, setUsed ] = useState(0)\r\n\r\n    function onCloseModal1(){\r\n        setModal1Open(false)\r\n    }\r\n    function onCloseModal2(){\r\n        setModal2Open(false)\r\n    }\r\n    function onCloseModal4(){\r\n        setModal4Open(false)\r\n    }\r\n\r\n    function refresh(){\r\n        reload()\r\n    }\r\n\r\n    function handleWithdraw(e){\r\n        e.preventDefault()\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: {user: user.value, verification: true},\r\n            url: url+'/api/admin/user2wanted_withdraw',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setAvailable(res.data.available)\r\n                setUsed(res.data.used)\r\n                setModal1Open(true)\r\n            }\r\n        }).catch( err => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    const [ totalPages2wantedwithdraws, setTotalPages2wantedwithdraws ] = useState(1)\r\n    const [ page2wantedwithdraws, setPage2wantedwithdraws ] = useState(1)\r\n    \r\n    const [ withdraw2wantedLoading, setWithdraw2wantedLoading ] = useState(false)\r\n    const [refresh2wanted, setRefresh2wanted] = useState(false)\r\n\r\n    useEffect(()=>{\r\n\r\n        setWithdraw2wantedLoading(true)\r\n        \r\n        if(csrfToken){\r\n    \r\n            axios({\r\n                method: 'post',\r\n                data: {page: page2wantedwithdraws},\r\n                url: url+'/api/admin/withdraw2wantedlist',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res.data.error) {\r\n                    setWithdraw2wantedLoading(false)\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setList(res.data.list)\r\n                    setTotalPages2wantedwithdraws(res.data.totalPages)\r\n                    setWithdraw2wantedLoading(false)\r\n                }\r\n            }).catch( err => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n                setWithdraw2wantedLoading(false)\r\n            })\r\n        }\r\n\r\n    },[page2wantedwithdraws, refresh2wanted, csrfToken])\r\n\r\n    const [inicialDate, setInicialDate] = useState('')\r\n    const [finalDate, setFinalDate] = useState('')\r\n\r\n    const userHistory = useFormValues()\r\n\r\n    function handleHistoryUsers(e){\r\n\r\n        e.preventDefault()\r\n\r\n        if(inicialDate && finalDate){\r\n            props.history.push(`/historyUsers/${inicialDate}/${finalDate}/@${userHistory.value}`)\r\n        }else{ props.history.push(`/historyUsers/@${userHistory.value}`)}\r\n\r\n    }\r\n\r\n    const salaName = useFormValues()\r\n\r\n    function handleUsersInSala(e){\r\n\r\n        e.preventDefault()\r\n\r\n        props.history.push(`/historyUsers/@${userHistory.value}/${salaName.value}`)\r\n        \r\n    }\r\n\r\n    const emailPersonalized = useFormValues()\r\n    const asunto = useFormValues()\r\n    const userEmailPersonalized = useFormValues()\r\n\r\n    function handleEmailPersonalized(e){\r\n        e.preventDefault()\r\n        setModal4Open(true)\r\n    }\r\n\r\n    if(generalLoading){\r\n        return <div>LOADING...</div>\r\n    }\r\n\r\n    return <div className='balance-container'>\r\n        <div className='section-title'>\r\n            <h1>Administracion</h1>\r\n        </div>\r\n        <div className='balance-section-buttons'>\r\n            <div onClick={()=>setViewButton(false)} className={viewButton ? 'balance-button-top' : 'balance-button-top balance-button-top-active'}>General</div>\r\n            <div onClick={()=>setViewButton(true)} className={!viewButton ? 'balance-button-top' : 'balance-button-top balance-button-top-active'}>Usuarios</div>\r\n        </div>\r\n        <div className={viewButton ? 'dNone' : 'section-general-container'}>\r\n            <div className={!viewList ? '' : 'dNone'}>\r\n                <h1 className={generalLoading ? '' : 'dNone'}>Cargando...</h1>\r\n                <p>Total Depositado: <span>  {totalDeposit.toString().slice(0,9)}</span> </p>\r\n                <p>Actual en cuenta: <span> {actualCuenta.toString().slice(0,9)} </span> </p>\r\n                <p>Total obtenido por 2wanted: <span>{totalGanado.toString().slice(0,9)}</span></p>\r\n                <p>dinero de Usuarios en salas: <span> {moneyUsersRooms.toString().slice(0,9)} </span> </p>\r\n                <p>dinero actual en wallet de Usuarios: <span> {totalWallets.toString().slice(0,9)} </span> </p>\r\n                <p>dinero actual de 2wanted: <span> {actual2wanted.toString().slice(0,9)} </span> </p>\r\n                <p>dinero retirado de usuarios: <span> {withdrawUsers.toString().slice(0,9)} </span></p>\r\n                <p>dinero retirado de 2wanted: <span> {withdraw2wanted.toString().slice(0,9)} </span> </p>\r\n                <p>Total dinero retirado: <span> ${`${parseFloat(retiradoTotalTotal).toString().slice(0,9)}`} </span></p>\r\n                <p>Verificacion: <span>--{verification}--</span><span>{`( ${actualCuenta.toString().slice(0,9)} - ${verification2.toString().slice(0,9)} )`}</span> </p>\r\n                <div>\r\n                    <form className='withdrawform' onSubmit={handleWithdraw}>\r\n                        <h2>Regitrar Retiro 2wanted</h2>\r\n                        <input required {...user} type=\"text\" placeholder='Usuario'/>\r\n                        <button>Registrar</button>\r\n                    </form>\r\n                </div>\r\n                <h2>Ir a lista de Retiros</h2>\r\n                <button className='general-inferiorButtons' onClick={()=>{\r\n                    setViewList(true)\r\n                    setRefresh2wanted(!refresh2wanted)\r\n                }}>Lista de retiros por 2wanted</button>\r\n                <h2>Descargar Balance en Excel</h2>\r\n                <button className='general-inferiorButtons' onClick={()=>setModal2Open(true)}>Balance a excel</button>\r\n            </div>\r\n            <div className={viewList ? 'listCards-withdraw2wanted' : 'dNone'}>\r\n            <button className='navigation-back-button' onClick={()=>setViewList(false)}>🢀  Atras</button>  \r\n            <div className='container-paginations-buttons'>\r\n                <button onClick={()=>setPage2wantedwithdraws(page2wantedwithdraws - 1)} disabled={page2wantedwithdraws === 1 ? true : false}>🢀</button>\r\n                    <p>{page2wantedwithdraws} </p><p>&nbsp;&nbsp;-&nbsp;&nbsp;</p><p> {totalPages2wantedwithdraws}</p>\r\n                <button onClick={()=>setPage2wantedwithdraws(page2wantedwithdraws + 1)} disabled={page2wantedwithdraws === totalPages2wantedwithdraws ? true : false}>🢂</button>\r\n                <p className={withdraw2wantedLoading ? 'CARGANDO_P' : 'dNone'}> CARGANDO..... </p>\r\n            </div>           \r\n                {\r\n                    list.map( data => {\r\n                        return (\r\n                            <li key={data._id}>\r\n                                <p className='balance-description-title'>Retirado por: <span>{data.user}</span></p> \r\n                                <p className='balance-description-title'>Monto: <span>${data.amount}</span></p>  \r\n                                <p className='balance-description-title'>A direccion: <span>${data.toAddress}</span></p>  \r\n                                <p className='balance-description-title'>txId: <span>${data.txId}</span></p>  \r\n                                <p className='balance-description-title'>Fecha: <span>{new Date(data.date).getDate()}</span>/<span>{new Date(data.date).getMonth() + 1}</span>/<span>{new Date(data.date).getFullYear()}</span>&nbsp;&nbsp;<span>{new Date(data.date).getHours()}</span>:<span>{new Date(data.date).getMinutes()}</span></p>    \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={!viewButton ? 'dNone' : 'section-usuarios-container'}>\r\n            <div className='container-info-users'>\r\n                <form onSubmit={handleHistoryUsers} className='container-historial-users'>\r\n                    <h2>Busqueda de historial de Usuarios</h2>\r\n                    <div className='historial-fechas'>\r\n                        <p>Desde</p>&nbsp;&nbsp;\r\n                        <input onChange={(e)=>setInicialDate(e.target.value)} type=\"date\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>Hasta</p>&nbsp;&nbsp;\r\n                        <input onChange={(e)=>setFinalDate(e.target.value)} type=\"date\"/>\r\n                    </div>\r\n                        <input required {...userHistory} type=\"text\" placeholder='Usuario'/>\r\n                    <button>Buscar</button>\r\n                </form>\r\n                <form onSubmit={handleUsersInSala}>\r\n                    <h2>Busqueda de historial de usuarios en salas especificas</h2>\r\n                    <input required {...userHistory} type=\"text\" placeholder='Usuario'/>\r\n                    <input required {...salaName} type=\"text\" placeholder='Sala'/>\r\n                    <button>Buscar</button>\r\n                </form>\r\n                <form onSubmit={handleEmailPersonalized}>\r\n                    <h2> Enviar correo personalizado a usuario</h2>\r\n                    <input required {...userEmailPersonalized} type=\"text\" placeholder='Usuario'/>\r\n                    <input required {...asunto} type=\"text\" placeholder='Asunto'/>\r\n                    <textarea required {...emailPersonalized} placeholder='Mensaje'/>\r\n                    <button>Enviar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <Withdraw2wantedModal available={available} used={used} refresh={refresh} user={user.value} isOpen={modal1Open} onClose={onCloseModal1} />    \r\n        <ToExcelModal isOpen={modal2Open} onClose={onCloseModal2} />      \r\n        <MailModal msg={emailPersonalized.value} asunto={asunto.value} user={userEmailPersonalized.value} isOpen={modal4Open} onClose={onCloseModal4} />    \r\n    </div>\r\n}","import { useState, useEffect, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nexport const useGeneralBalance = () => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n    \r\n    const [general, setGeneral] = useState({}) \r\n    const [loading, setLoading] = useState(true) \r\n    const [reload, setReload] = useState(false) \r\n    \r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n\r\n        if(csrfToken){\r\n            axios({\r\n                method: 'post',\r\n                url: url+'/api/admin/generalTotalBalance',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res.data.error) {\r\n                    setLoading(false)\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setGeneral(res.data)\r\n                    setLoading(false)\r\n                }\r\n            }).catch( err => {\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }\r\n    \r\n    \r\n    },[reload, csrfToken])\r\n\r\n    function refresh(){\r\n        setReload(!reload)\r\n    }\r\n\r\n    return {reload: refresh, totalDeposit: general.totalDeposits, actualCuenta: general.actualEnCuenta, totalGanado: general.totalWon, moneyUsersRooms: general.userMoneyRooms, totalWallets: general.totalInWallets, actual2wanted: general.actual2wanted, withdrawUsers: general.totalEgresoUsers, withdraw2wanted: general.totalEgreso2wanted, totalRetirado: general.egresos, generalLoading: loading, verification: general.verification, verification2: general.verification2}\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/abajo.780d3280.svg\";","import React, { useState, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport abajo from '../Images/abajo.svg'\r\nimport './Styles/Tree.css'\r\n\r\nconst TreeData = ({price, username, arbolData, onOpenModal, onOpen2Modal}) => {\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat('en-US').format(number)\r\n    }\r\n\r\n    const [lineDropDown, setLineDropdown] = useState(false)\r\n\r\n    const { usdBtc } = useContext(Context)\r\n\r\n    const level3 = (price/2) / usdBtc\r\n    const level4 = (price/4) / usdBtc\r\n\r\n    return(\r\n        <div className='tree-wrap'>\r\n            <div className='nivel'>\r\n                <div className='child'></div>\r\n            </div>\r\n            <p className='level-text'>Level 1</p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[0] ? ()=> onOpenModal(arbolData[0]) : ()=> onOpen2Modal(username)} className={arbolData[0] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[1] ? ()=> onOpenModal(arbolData[1]) : ()=> onOpen2Modal(username)} className={arbolData[1] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Level 2</p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[2] ? ()=> onOpenModal(arbolData[2]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[2] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[3] ? ()=> onOpenModal(arbolData[3]) : ()=> onOpen2Modal(arbolData[0])} className={arbolData[3] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[4] ? ()=> onOpenModal(arbolData[4]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[4] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[5] ? ()=> onOpenModal(arbolData[5]) : ()=> onOpen2Modal(arbolData[1])} className={arbolData[5] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Level 3 &nbsp; <span>{formatNumber(level3)} USD c/u</span></p>\r\n            <div className='nivel'>\r\n                <button onClick={arbolData[6] ? ()=> onOpenModal(arbolData[6]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[6] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[7] ? ()=> onOpenModal(arbolData[7]) : ()=> onOpen2Modal(arbolData[2])} className={arbolData[7] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[8] ? ()=> onOpenModal(arbolData[8]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[8] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[9] ? ()=> onOpenModal(arbolData[9]) : ()=> onOpen2Modal(arbolData[3])} className={arbolData[9] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[10] ? ()=> onOpenModal(arbolData[10]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[10] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[11] ? ()=> onOpenModal(arbolData[11]) : ()=> onOpen2Modal(arbolData[4])} className={arbolData[11] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[12] ? ()=> onOpenModal(arbolData[12]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[12] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[13] ? ()=> onOpenModal(arbolData[13]) : ()=> onOpen2Modal(arbolData[5])} className={arbolData[13] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <p className='level-text'>Level 4 &nbsp; <span>{formatNumber(level4)} USD c/u</span></p>\r\n            <div className='nivel displayNone1'>\r\n                <button onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>+</button>\r\n                <button onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>+</button>\r\n            </div>\r\n            <button className='btn-lineDropDown' onClick={()=> setLineDropdown(!lineDropDown)}> <img src={abajo} alt=\"abajo\"/> </button>\r\n            <div className={lineDropDown ? 'nivel2' : 'vNone'}>\r\n                <div className='lineDropDown-separator'>\r\n                    <div className=\"linePar-container\">\r\n                        <p>1</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[14] ? ()=> onOpenModal(arbolData[14]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[14] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[15] ? ()=> onOpenModal(arbolData[15]) : ()=> onOpen2Modal(arbolData[6])} className={arbolData[15] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>2</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[16] ? ()=> onOpenModal(arbolData[16]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[16] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[17] ? ()=> onOpenModal(arbolData[17]) : ()=> onOpen2Modal(arbolData[7])} className={arbolData[17] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>3</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[18] ? ()=> onOpenModal(arbolData[18]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[18] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[19] ? ()=> onOpenModal(arbolData[19]) : ()=> onOpen2Modal(arbolData[8])} className={arbolData[19] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>4</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[20] ? ()=> onOpenModal(arbolData[20]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[20] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[21] ? ()=> onOpenModal(arbolData[21]) : ()=> onOpen2Modal(arbolData[9])} className={arbolData[21] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n                <div className='lineDropDown-separator'>\r\n                    <div className=\"linePar-container\">\r\n                        <p>5</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[22] ? ()=> onOpenModal(arbolData[22]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[22] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[23] ? ()=> onOpenModal(arbolData[23]) : ()=> onOpen2Modal(arbolData[10])} className={arbolData[23] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>6</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[24] ? ()=> onOpenModal(arbolData[24]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[24] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[25] ? ()=> onOpenModal(arbolData[25]) : ()=> onOpen2Modal(arbolData[11])} className={arbolData[25] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>7</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[26] ? ()=> onOpenModal(arbolData[26]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[26] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[27] ? ()=> onOpenModal(arbolData[27]) : ()=> onOpen2Modal(arbolData[12])} className={arbolData[27] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"linePar-container\">\r\n                        <p>8</p>\r\n                        <div className=\"linePar\">\r\n                            <button onClick={arbolData[28] ? ()=> onOpenModal(arbolData[28]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[28] ? 'child' : 'noChild'}>+</button>\r\n                            <button onClick={arbolData[29] ? ()=> onOpenModal(arbolData[29]) : ()=> onOpen2Modal(arbolData[13])} className={arbolData[29] ? 'child' : 'noChild'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(TreeData)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport '../Styles/MiniModal.css'\r\n\r\nfunction MiniModal(props) {\r\n    \r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return(\r\n        ReactDOM.createPortal(\r\n            <div className=\"MiniModal\">\r\n                <div className=\"MiniModal__container\">\r\n                    <button onClick={props.onClose} className=\"MiniModal__close-button\">X</button>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            \r\n        , document.getElementById(\"modal\"))\r\n    )\r\n}\r\n\r\nexport default MiniModal","import React from 'react'\r\nimport MiniModal from './MiniModal'\r\n\r\nexport const ChildModal = (props) =>{\r\n\r\n    let user = ''\r\n\r\n    if(props.user){\r\n        user = props.user.split(\" \")[0]\r\n    }\r\n\r\n    return (\r\n        <MiniModal isOpen={props.isOpen} onClose={props.onClose}>\r\n            <h3>User:</h3>\r\n            <br/>\r\n            <h4>{user}</h4>\r\n        </MiniModal>\r\n    )\r\n}\r\n","import React, { useState, useContext } from \"react\"\r\nimport Modal from \"./Modal\"\r\nimport Swal from 'sweetalert2'\r\nimport { Context } from '../../context'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { MdInfo } from \"react-icons/md\"\r\nimport axios from 'axios'\r\nimport '../Styles/Invite.css'\r\nimport { url } from '../../urlServer'\r\n\r\nexport const InviteModal = (props) => {\r\n    \r\n    const user = useFormValues()\r\n    const message = useFormValues()\r\n    const { csrfToken } = useContext(Context)\r\n    const [inviteLoading, setInviteLoading] = useState(false)\r\n\r\n    let data\r\n    let parentUser = props.data.parentUsername ? props.data.parentUsername.split(\" \")[0] : ''\r\n\r\n    if(props.data){\r\n        data = {\r\n            newUser: `@${user.value}`, parentUsername: parentUser,\r\n            message: message.value, salaId: props.data.salaId,\r\n            price: props.data.price, salaName: props.data.salaName, host: props.data.host\r\n        }\r\n    }\r\n\r\n    const [msg_valid, setMsg_valid] = useState(true)\r\n\r\n    async function handleSubmit( e ){\r\n        e.preventDefault()\r\n\r\n        if(message.value.length > 50){\r\n            return setMsg_valid(false)\r\n        }else{setMsg_valid(true)}\r\n\r\n        setInviteLoading(true)\r\n        \r\n        await axios({\r\n            data: data,\r\n            method: 'post',\r\n            url: url+'/api/new-invitation',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setInviteLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Invitation sent',\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setInviteLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n        props.onClose() \r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n           <h3>Invite user</h3>\r\n            <form className='invite-form' onSubmit={handleSubmit}>\r\n                <div className='d-flex'>\r\n                    <div className=\"pre-formS\">\r\n                        <div className=\"input-group-text invite-pre-form\">@</div>\r\n                    </div>\r\n                    <input {...user} type=\"text\" placeholder='User'/>\r\n                </div>\r\n                <div className=\"form-group mt-4 mb-4\">\r\n                    <input {...message} type=\"text\" placeholder='Optional message'/>\r\n                    <label className={msg_valid ? 'dNone' : 'warning-invite'}><MdInfo />&nbsp;Maximum 50 characters</label>\r\n                </div>\r\n                <button disabled={inviteLoading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                    <div className={inviteLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={inviteLoading ? 'dNone' : ''}>Invite</p>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useCallback } from 'react'\r\nimport TreeData from './TreeData'\r\nimport './Styles/Tree.css'\r\nimport { ChildModal } from './Modals/childModal'\r\nimport { InviteModal } from './Modals/inviteModal'\r\n\r\nconst Tree = (props) => {\r\n\r\n    const arbolData =  props.arbolData\r\n    \r\n    /* ---------------------------------------------------Modales------------------------- */\r\n    \r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const [modal2Open, setModal2Open] = useState(null)\r\n    const [userModal, setUserModal] = useState(null)\r\n    const [dataModal, setDataModal] = useState(null)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    const onOpenModal = useCallback( user => {\r\n        setModalOpen(true)\r\n        setUserModal(user)\r\n    },[])\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n    \r\n    const onOpen2Modal = useCallback( parent => {\r\n        const data = {\r\n            parentUsername: parent, salaId: props.salaId, price: props.price, salaName: props.salaName\r\n        }\r\n        setModal2Open(true)\r\n        setDataModal(data)\r\n    },[props.price, props.salaId, props.salaName])\r\n  \r\n    if(props.loading){\r\n        return <div className=\"spinner-border tree-spinner text-danger\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TreeData price={props.price} username={props.userName} arbolData={arbolData} onOpen2Modal={onOpen2Modal} onOpenModal={onOpenModal} />\r\n            \r\n            <ChildModal user={userModal} isOpen={modalOpen} onClose={onCloseModal}/>\r\n            <InviteModal data={dataModal} isOpen={modal2Open} onClose={onClose2Modal}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tree","import React, { useState, useContext } from 'react'\r\nimport Decimal from 'decimal.js-light'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { Context } from '../context'\r\nimport { MdAccountBalanceWallet } from \"react-icons/md\";\r\n\r\nconst RomDetails = ({loading, usdBtc, count, url, salaId, arbolData, dataRoom, inBalance, parent}) => {\r\n\r\n    const [loadingToBalance, setLoadingToBalance] = useState(false)\r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const { csrfToken } = useContext(Context)\r\n    const price = dataRoom ? dataRoom.price : 0\r\n\r\n    function formatNumber(number){\r\n        return new Intl.NumberFormat('en-US').format(number)\r\n    }\r\n\r\n    async function handleToBalance(){\r\n        setLoadingToBalance(true)\r\n        await axios({\r\n            method: 'post',\r\n            data: {toBalance: 'true'},\r\n            url: `${url}/api/in-sala?id=${salaId}`,\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoadingToBalance(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setCountUserData(countUserData + 1)\r\n                count(countUserData + 1)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n            setLoadingToBalance(false)\r\n        })\r\n    }\r\n\r\n    let acum3 = 0\r\n    let acum4 = 0   \r\n    let tAcum = 0   \r\n    let newCash = 0\r\n\r\n    if(arbolData && dataRoom && loading === false) {\r\n\r\n        for(let i = 6; i<=13; i++) {\r\n            let divide = new Decimal(price).div(2).toNumber()   \r\n            if(arbolData[i]){\r\n                acum3 = new Decimal(acum3).add(divide).toNumber()\r\n            }\r\n        }\r\n        for(let i = 14; i<=29; i++){\r\n            let divide = new Decimal(price).div(4).toNumber()\r\n            if(arbolData[i]){\r\n                acum4 = new Decimal(acum4).add(divide).toNumber()\r\n            }\r\n        }\r\n    \r\n        tAcum = new Decimal(acum3).add(acum4).toNumber()\r\n        newCash= new Decimal(tAcum).sub(inBalance).toNumber()\r\n\r\n    }\r\n\r\n\r\n    if(loading){ return <div className='room-details'>Loading...</div>}\r\n\r\n    return(\r\n        <div className='room-details'>\r\n            <p>Room Name:</p>\r\n            <span>{dataRoom.name}</span>\r\n            <p>Room Price:</p>\r\n            <span>{`${dataRoom.price.toString().slice(0,9)} BTC  (${formatNumber(dataRoom.price / usdBtc)} USD)`}</span>\r\n            <p>Parent User:</p>\r\n            <span>{parent}</span>\r\n            <p>Creator:</p>\r\n            <span>{`${dataRoom.creator}`}</span>\r\n            <p>accumulated level 3:</p>\r\n            <span>{`${acum3 > 0 ? acum3.toString().slice(0,9) : 0}  (${formatNumber(acum3 / usdBtc)} USD)`}</span>\r\n            <p>accumulated level 4:</p>\r\n            <span>{`${acum4 > 0 ? acum4.toString().slice(0,9) : 0}  (${formatNumber(acum4 / usdBtc)} USD)`}</span>\r\n            <p>Total accumulated:</p>\r\n            <span>{`${tAcum > 0 ? tAcum.toString().slice(0,9) : 0}  (${formatNumber(tAcum / usdBtc)} USD)`}</span>                   \r\n            <p>accumulated paid:</p>\r\n            <span>{`${inBalance > 0 ? inBalance.toString().slice(0,9) : 0}  (${formatNumber(inBalance / usdBtc)} USD)`}</span>\r\n            <button disabled={tAcum > inBalance ? false : true} onClick={handleToBalance}>\r\n                <div className={!loadingToBalance ? '' : 'dNone'}>\r\n                    <p>Withdraw to wallet</p>\r\n                    <label>{tAcum > inBalance ? newCash.toString().slice(0,9) : 0} BTC ➜ <MdAccountBalanceWallet /></label>\r\n                </div>\r\n                <div className={loadingToBalance ? \"spinner-toBalance spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(RomDetails)\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport './Styles/Room.css'\r\nimport Tree  from '../Components/Tree'\r\nimport RomDetails from '../Components/RomDetails'\r\nimport { useChildsData }  from '../hooks/useChildsData'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport Cookies from 'js-cookie'\r\nimport { useCallback } from 'react'\r\n\r\nexport const Room = (props) => {\r\n\r\n    const { usdBtc, csrfToken } = useContext(Context)\r\n    const userName = Cookies.get('username')\r\n    \r\n    const salaId = props.match.params.salaId\r\n    const [parent, setParent] = useState('')\r\n    const [inBalance, setInBalance] = useState(0)\r\n    const [dataRoom, setDataRoom] = useState({})\r\n\r\n    const [loadingDetails, setLoadingDetails] = useState(false)\r\n     \r\n    const [countUserData, setCountUserData] = useState(0)\r\n    const { arbolData, loadingChildsData } = useChildsData(salaId, userName)\r\n\r\n    \r\n    const count = useCallback((data) => {\r\n        if(count){\r\n            setCountUserData(data)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        async function searchRoom(){\r\n            try {\r\n                setLoadingDetails(true)\r\n                const response = await axios({\r\n                    data: { salaId: salaId },\r\n                    method: 'post',\r\n                    url: url+'/api/search/sala',\r\n                    headers: { \r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })\r\n                if(response.data.error){\r\n                    setLoadingDetails(false)\r\n                    props.history.push('/home')\r\n                }else{\r\n                    setInBalance(response.data.inBalance)\r\n                    setParent(response.data.parentId)\r\n                    setDataRoom(response.data.data)  \r\n                    setLoadingDetails(false)\r\n                }\r\n            \r\n            }catch(error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            }\r\n        }\r\n\r\n        if(csrfToken){\r\n            searchRoom()\r\n        }\r\n\r\n    },[userName, salaId, countUserData, props.history, csrfToken])\r\n\r\n    \r\n    if(!dataRoom || loadingChildsData){\r\n        return <div className='loading-room'>\r\n            <div className=\"spinner-border spiner-room text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    }\r\n    \r\n    return (\r\n        <div className='room'>\r\n            <div>\r\n                <div className='arbol-container'>\r\n                    <Tree loading={loadingChildsData} userName={userName} salaName={dataRoom.name} price={dataRoom.price} salaId={dataRoom._id} arbolData={arbolData} />\r\n                </div>\r\n            </div>    \r\n            <div>\r\n                <RomDetails loading={loadingDetails} usdBtc={usdBtc} count={count} url={url} parent={parent} inBalance={inBalance} dataRoom={dataRoom} arbolData={arbolData} salaId={salaId}  />\r\n            </div>    \r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react'\r\nimport { url } from '../urlServer'\r\nimport { Context } from '../context'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const useChildsData = (salaId, userName) => {\r\n\r\n    const [arbolData, setArbolData] = useState([])\r\n    const { csrfToken } = useContext(Context)\r\n    const [loadingChildsData, setLoadingChildsData] = useState(true)\r\n            \r\n    useEffect(()=>{\r\n\r\n        if(userName && csrfToken){\r\n            setLoadingChildsData(true)\r\n    \r\n            async function childsData(){\r\n    \r\n                const response = await axios({\r\n                    method: 'post',\r\n                    url: `${url}/api/in-sala?id=${salaId}`,\r\n                    headers: { \r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })       \r\n                \r\n                const data = await response.data\r\n\r\n                if(data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: data.error,\r\n                    })\r\n                }\r\n    \r\n                await setArbolData(data)\r\n    \r\n                setLoadingChildsData(false)\r\n    \r\n            }  \r\n            childsData()\r\n        }\r\n    },[salaId, userName, csrfToken])\r\n\r\n    return {arbolData, loadingChildsData}\r\n\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport { Context } from '../../context'\r\nimport { MdRefresh } from 'react-icons/md'\r\nimport '../Styles/EmailVerificationModal.css'\r\n\r\nconst EmailVerificationModal2 = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { toggleAuth, csrfToken } = useContext(Context)\r\n\r\n    const code = useFormValues()\r\n\r\n    async function onConfirm(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email, code: code.value},\r\n            method: 'post',\r\n            url: url+'/api/mailverification',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                toggleAuth(res.data.userName)\r\n                props.props.history.push(`/home`)\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    async function handleRefresh(){\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email},\r\n            method: 'post',\r\n            url: url+'/api/mailverificationRefresh'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div className='emailVerification'>\r\n\r\n            <h4>Enter the six-digit code sent to your email.</h4>\r\n            \r\n            <form onSubmit={onConfirm} className='input-verificationemail'> \r\n                <input maxLength='6' className='join-input' {...code} type=\"text\" placeholder='Code'/>\r\n                <button> Confirm </button>\r\n            </form>\r\n\r\n            <label>If you have not received any email or want to resend, press the retry button</label>\r\n            <button onClick={handleRefresh} disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}><MdRefresh />Retry</p>\r\n            </button>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default EmailVerificationModal2","import React, { useState, useContext } from 'react'\r\nimport Modal from './Modal'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { Context } from '../../context'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\n\r\nconst ForgotPasswordModal = props => {\r\n    \r\n    const [ loading, setLoading ] = useState(false) \r\n    const [ count, setCount ] = useState(0)\r\n    const { csrfToken } = useContext(Context)\r\n    const email = useFormValues()\r\n\r\n    async function handleForgotPassword(e){\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            data: { email: email.value },\r\n            url: url+'/api/forgotpassword',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setCount(count + 1)\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div>\r\n            <h4>Forgot password?</h4>\r\n            <form onSubmit={handleForgotPassword}>\r\n                <p>Write your access email and you will receive a password recovery link in the email.</p>\r\n                <input required className='join-input forgotModalInput' {...email} placeholder='Email' type='email'/>\r\n                <button disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                    <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p  className={loading ? 'dNone' : ''}>{count > 0 ? 'Retry' : 'Send'}</p>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default ForgotPasswordModal","import React, { useState, useContext } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport logo from '../Images/logo.svg'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { Context } from '../context'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { url } from '../urlServer'\r\nimport logoletra from '../Images/2WANTED.svg'\r\nimport axios from 'axios'\r\nimport './Styles/NavbarLogin.css'\r\nimport EmailVerificationModal2 from './Modals/EmailVerificationModal2'\r\nimport ForgotPasswordModal from './Modals/ForgotPasswordModal'\r\n\r\n const NavbarLogin = (props) => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [modal2Open, setModal2Open] = useState(false)\r\n    const { csrfToken } = useContext(Context)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n    function onClose2Modal(){\r\n        setModal2Open(null)\r\n    }\r\n\r\n    const email = useFormValues()\r\n    const password = useFormValues()\r\n\r\n    const form = {\r\n        email: email.value,\r\n        password: password.value\r\n    }\r\n\r\n    const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        setLoginLoading(true)\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/users/signin',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoginLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data.isVerified === false){\r\n                setModalOpen(true)\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                props.toggleAuth(res.data.userName)\r\n                props.history.push(`/home`)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setLoginLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar-arbol-login\">\r\n            <div className='wrap-1100'>\r\n            <Link className=\"logo\" to=\"/\"><img className='login-logo1' src={logo} alt='logo-img' /><img className='login-logo2' src={logoletra} alt=\"logoletra\"/></Link>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group login-inputs\">\r\n                    <input autoComplete=\"on\" type=\"email\" className='form-control' {...email} placeholder='Email'/>\r\n                </div>\r\n                <div className=\"form-group login-inputs\">\r\n                    <input autoComplete='on' className=\"form-control\" type=\"password\" {...password} placeholder=\"Password\"/>\r\n                    <label className='forgotPassworLogin' onClick={()=>setModal2Open(true)}>Forgot password?</label>\r\n                </div>\r\n                <button disabled={loginLoading ? true : false} type='submit' className=\"login-button\">\r\n                    <div className={loginLoading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                <p className={loginLoading ? 'dNone' : ''}>Signin</p>\r\n                </button>\r\n            </form>\r\n            <EmailVerificationModal2 props={props} email={email.value} isOpen={modalOpen} onClose={onCloseModal}/>\r\n            <ForgotPasswordModal isOpen={modal2Open} onClose={onClose2Modal}/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavbarLogin)","export default __webpack_public_path__ + \"static/media/bigLogo.a414eaaf.svg\";","import React, { useState, useContext } from 'react'\r\nimport { useFormValues } from '../../hooks/useFormValues'\r\nimport { Context } from '../../context'\r\nimport Modal from './Modal'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../../urlServer'\r\nimport { MdRefresh } from 'react-icons/md'\r\nimport '../Styles/EmailVerificationModal.css'\r\n\r\nconst EmailVerificationModal = props => {\r\n    \r\n    const { toggleAuth, csrfToken } = useContext(Context)\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const code = useFormValues()\r\n\r\n    async function onConfirm(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email, code: code.value},\r\n            method: 'post',\r\n            url: url+'/api/mailverification',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                toggleAuth(res.data.userName)\r\n                props.props.history.push(`/home`)\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n    \r\n    async function handleRefresh(){\r\n        \r\n        setLoading(true)\r\n\r\n        await axios({\r\n            data: {email: props.email},\r\n            method: 'post',\r\n            url: url+'/api/mailverificationRefresh'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n        <div className='emailVerification'>\r\n            <h4>Enter the six-digit code sent to your email.</h4>\r\n            \r\n            <form onSubmit={onConfirm} className='input-verificationemail'> \r\n                <input required={true} maxLength='6' className='join-input' {...code} type=\"text\" placeholder='Code'/>\r\n                <button> Confirm </button>\r\n            </form>\r\n\r\n            <label>If you have not received your code, press resend</label>\r\n            <label>The code expires in 5 minutes</label>\r\n            <button onClick={handleRefresh} disabled={loading ? true : false} className='btn btn-dark btn-block invitation-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}><MdRefresh /> Resend </p>\r\n            </button>\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default EmailVerificationModal","import React, { useContext, useState } from 'react'\r\nimport { MdInfo, MdLockOutline, MdMail } from \"react-icons/md\"\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport NavbarLogin from '../Components/NavbarLogin'\r\nimport { Context } from '../context'\r\nimport axios from 'axios'\r\nimport IMG from '../Images/bigLogo.svg'\r\nimport './Styles/Signup.css'\r\nimport Cookies from 'js-cookie'\r\nimport EmailVerificationModal from '../Components/Modals/EmailVerificationModal';\r\n\r\nexport const Signup = (props) => {\r\n\r\n    const conected = Cookies.get('conected')\r\n\r\n    if(conected){\r\n        props.history.push(`/home`)\r\n    }\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const reg_whiteSpace = /^$|\\s+/\r\n\r\n    const { toggleAuth, csrfToken } = useContext(Context)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    \r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const userName = useFormValues()\r\n    const email = useFormValues()\r\n    const email2 = useFormValues()\r\n    const password = useFormValues()\r\n    const confirm_password = useFormValues()\r\n\r\n    const form = {\r\n        userName: `@${userName.value}`,\r\n        email: email.value,\r\n        password: password.value,\r\n        confirm_password: confirm_password.value,\r\n    }\r\n\r\n    const [validEmail, setValidEmail] = useState(true)\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    const [userValid, setUserValid] = useState(true)\r\n\r\n    const [signupLoading, setSignupLoading] = useState(false)\r\n\r\n    function handleSubmit( e ){\r\n        e.preventDefault()\r\n        if(userName.value.length < 4 || userName.value.length > 16){return setUserValid(false)}else{setUserValid(true)}\r\n        if(email2.value === email.value){ setValidEmail(true)}else{ return setValidEmail(false)}\r\n        if(reg_whiteSpace.test(userName.value)){return setUserValid(false)}else{setUserValid(true)}\r\n        if(!reg_password.test(password.value)){return setPassword_valid(false)}else{setPassword_valid(true)}\r\n\r\n        setSignupLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/users/signup',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setSignupLoading(false)\r\n            if(res.data.error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else if(res.data === 'has exceeded the number of attempts, try again in 10 minutes'){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data,\r\n                })\r\n            }else{\r\n                setModalOpen(true)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setSignupLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        }) \r\n    }\r\n        \r\n    return <div>   \r\n\r\n        <NavbarLogin toggleAuth={toggleAuth} />\r\n\r\n        <div className='signup-container'>\r\n            <div className='wrap-1100'>\r\n            <div className='signup-left'>\r\n\r\n                <img className='logo-signup-p' src={IMG} alt=\"\"/>\r\n\r\n            </div>\r\n\r\n             <div className='signup-right'>\r\n                <div className='card-signup'>\r\n                            <h3 className=\"text-center text-white card-header pl-4\">\r\n                                Signup\r\n                            </h3>\r\n                            <div className=\"card-body form-body\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\">@</div>\r\n                                            </div>\r\n                                            <input type=\"text\" id=\"inlineFormInputGroupUsername2\" className='form-control' {...userName} placeholder='Username' required/>\r\n                                        </div>\r\n                                        <label className={!userValid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Minimum 8 characters without spaces, upper and lower case</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdMail /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"email\" className='form-control' {...email} placeholder='Email' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdMail /></div>\r\n                                            </div>\r\n                                            <input type=\"text\" className='form-control' {...email2} placeholder='Repeat Email' required/>\r\n                                        </div>\r\n                                        <label className={!validEmail ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Emails do not match</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                        <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\"  className='form-control' {...password} placeholder='Password' required/>\r\n                                        </div>\r\n                                        <label className={!password_valid ? 'password-valid' : 'dNone'}><MdInfo />&nbsp;Minimum 8 characters without spaces, upper and lower case</label>\r\n                                    </div>\r\n                                    <div className=\"form-group form-inputs\">\r\n                                    <div className='d-flex'>\r\n                                            <div className=\"input-group- pre-formS\">\r\n                                                <div className=\"input-group-text pre-form\"><MdLockOutline /></div>\r\n                                            </div>\r\n                                            <input autoComplete='true' type=\"password\" suggested=\"new-password\" className='form-control' {...confirm_password} placeholder='Confirm Password' required/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button disabled={signupLoading ? true : false} type='submit' className='button-signup'>\r\n                                        <div className={signupLoading ? \"spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                        <p className={signupLoading ? 'dNone' : ''}>Signup</p>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n        </div>    \r\n        <EmailVerificationModal props={props} email={email.value} isOpen={modalOpen} onClose={onCloseModal} />\r\n        </div>\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/Signin.css'\r\n\r\nexport const Signin = (props) => {\r\n\r\n    const { toggleAdminAuth, csrfToken } = useContext(Context)\r\n\r\n    const [loginLoading, setLoginLoading] = useState(false)\r\n\r\n    const id = useFormValues()\r\n    const password = useFormValues()\r\n    const password2 = useFormValues()\r\n\r\n    const form = {\r\n        id: id.value,\r\n        password: password.value,\r\n        password2: password2.value\r\n    }\r\n\r\n    function handleSubmit( e ){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoginLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: url+'/api/admin/signin',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            if(res.data.error){\r\n                setLoginLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setLoginLoading(false)\r\n                toggleAdminAuth()\r\n                props.history.push(`/adminHome`)\r\n            }\r\n        })\r\n        .catch( err => {\r\n            setLoginLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return <div className='signin'>\r\n        <form onSubmit={handleSubmit}>\r\n            <input { ...id } type=\"text\" placeholder='ID'/>\r\n            <input { ...password } type=\"password\" placeholder='PASSWORD'/>\r\n            <input { ...password2 } type=\"password\" placeholder='REPEAT PASSWORD'/>\r\n            <button>{loginLoading ? 'CARGANDO......' : 'Entrar'}</button>\r\n        </form>\r\n    </div>\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { Context } from '../context'\r\nimport { RiArrowDownSLine } from \"react-icons/ri\"\r\nimport { MdChromeReaderMode } from \"react-icons/md\"\r\nimport { AiOutlineCaretRight, AiOutlineCaretLeft } from 'react-icons/ai'\r\nimport './Styles/Balance.css'\r\nimport { url } from '../urlServer'\r\n\r\nexport const Balance = () => {\r\n\r\n    const { userData, csrfToken } = useContext(Context)\r\n\r\n    const [valueFecha1, setValueFecha1] = useState('') \r\n    const [valueFecha2, setValueFecha2] = useState('') \r\n\r\n    const [viewDates, setViewDates] = useState(false)\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    \r\n    const [ balance, setBalance ] = useState([])\r\n\r\n    const [countPages, setCountPages] = useState(1)\r\n    \r\n    const [totalPages, setTotalPages] = useState(1)\r\n    \r\n    const [countLastestPages, setCountLastestPages] = useState(1)\r\n\r\n    useEffect(() => { \r\n        \r\n        if(csrfToken){\r\n\r\n            setLoading(true)\r\n                \r\n            axios({\r\n                method: 'post',\r\n                data: {page: countPages},\r\n                url: url+'/api/userbalance',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setLoading(false)\r\n                if(res.data.error) {\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    setTotalPages(res.data.totalPages)\r\n                    setBalance(res.data.data)\r\n                }\r\n            }).catch( err => {\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [countLastestPages, csrfToken])\r\n\r\n    const [activeDate, setActiveDate] = useState(false)\r\n\r\n    function handleDate(e){\r\n\r\n        if(e){\r\n            e.preventDefault()\r\n        }\r\n\r\n        setLoading(true)\r\n        \r\n        const splitDate = valueFecha1.split('-')\r\n\r\n        const fechaInicial = new Date(splitDate[0], splitDate[1]-1, splitDate[2])\r\n\r\n        const splitDate2 = valueFecha2.split('-')\r\n\r\n        const fechaFinal = new Date(splitDate2[0], splitDate2[1]-1, splitDate2[2], 24, 0, 0)\r\n\r\n        if(!activeDate) {\r\n            setCountPages(1)\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { getFechaInicial: fechaInicial, getFechaFinal: fechaFinal, page: countPages},\r\n            url: url+'/api/userbalance',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        }).then(res => {\r\n            setActiveDate(true)\r\n            setBalance(res.data.data)\r\n            setTotalPages(res.data.totalPages)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const wallet = userData.wallet ? userData.wallet.toString().slice(0,9) : 0\r\n\r\n    return <div className='balance-container'>\r\n\r\n        <div className='balance-title'>\r\n            <h3><MdChromeReaderMode />Balance History</h3>\r\n        </div>\r\n        <form className='date-form' onSubmit={handleDate}>\r\n            <div className='wallet-balance'>\r\n                <label>Wallet:</label><span>{wallet} BTC</span>\r\n            </div>\r\n            <p onClick={()=>setViewDates(!viewDates)}>Search by date</p>\r\n            <div onClick={()=>setViewDates(!viewDates)} className='flecha-busqueda-balance'>< RiArrowDownSLine /></div>\r\n            <p className={viewDates ? '' : 'none-balance'}>From </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha1(e.target.value)}/>\r\n            <p className={viewDates ? '' : 'none-balance'}>To </p>\r\n            <input className={viewDates ? '' : 'none-balance'} type=\"date\" required={true} onChange={(e)=>setValueFecha2(e.target.value)}/>\r\n            <button className={viewDates ? '' : 'none-balance'}>Search</button>\r\n        </form>\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n        {\r\n            loading ? <div>\r\n                <div className=\"spinner-balance spinner-border text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            </div> :\r\n            balance.length <= 0 ? <div>\r\n                <h3 className='no-events-balance'>Empty</h3>\r\n            </div> :\r\n            <div className='balance-list'>       \r\n            {\r\n                balance.map((balance)=> {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${ new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Won in room:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ {balance.won.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Room payment:</p>\r\n                                <p>{balance.salaName}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- {balance.salaPrice}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'deposit' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Deposit:</p>\r\n                                <p>{balance.depositAmount.toString().slice(0,9)}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+ {balance.depositAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawToUser' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Withdraw:</p>\r\n                                <p>{balance.withdrawAmount.toString().slice(0,9)}</p>\r\n                                <p className='balance-description-title'>To user:</p>\r\n                                <p>{balance.toUser}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- {balance.withdrawAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawBtc' && <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()} / ${ ('0' + (new Date(balance.date).getMonth() + 1)).slice(-2)} / ${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${ ('0' + new Date(balance.date).getMinutes()).slice(-2)}`}</div>\r\n                            <div>\r\n                                <p className='balance-description-title'>Withdraw:</p>\r\n                                <p>{balance.withdrawAmount.toString().slice(0,9)} + Fee</p>\r\n                                <p className='balance-description-title'>Fee:</p>\r\n                                <p>{balance.fee}</p>\r\n                                <p className='balance-description-title'>To Address:</p>\r\n                                <p>{balance.toAddress}</p>\r\n                                <p className='balance-description-title'>Wallet:</p>\r\n                                <p>{balance.wallet.toString().slice(0,9)}</p>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-buy-amount'>- {balance.totalAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li>\r\n                    )   \r\n                })\r\n            }\r\n            </div>\r\n        }\r\n        <div className={totalPages === 1 ? 'dNone' : 'pagination pages-balance-down'}>\r\n            <button disabled={countPages === 1 ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages - 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n                }} ><AiOutlineCaretLeft size='30'/>\r\n            </button> \r\n                <p><span>{countPages}</span> - {totalPages}</p> \r\n            <button disabled={countPages === totalPages ? true : false} className='pagination-button' onClick={()=> {\r\n                setCountPages(countPages + 1)\r\n                if(activeDate){\r\n                    handleDate()\r\n                }else{setCountLastestPages(countLastestPages + 1)}\r\n            }}><AiOutlineCaretRight size='30' />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\nexport const UsersInSalas = (props) => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const user = props.match.params.user\r\n    const sala = props.match.params.sala\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    const [ totalPages, setTotalPages ] = useState(1)\r\n    const [ actualPage, setActualPage ] = useState(1)\r\n    const [list, setList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        \r\n        setList([])\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: { user, sala, page: actualPage },\r\n            url: url+'/api/admin/BalanceUserInSala',\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                setList(res.data.list)\r\n                setTotalPages(res.data.totalPages)\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n\r\n    }, [ user, sala, actualPage, csrfToken])\r\n\r\n    return <div className='balance-container'>\r\n        <div className='section-title'>\r\n            <h1>Historial de Usuario</h1>\r\n        </div>\r\n        <div className='container-paginations-buttons'>\r\n            <button onClick={()=>setActualPage(actualPage - 1)} disabled={actualPage === 1 ? true : false}>🢀</button>\r\n                <p>{actualPage} </p><p>&nbsp;&nbsp;-&nbsp;&nbsp;</p><p> {totalPages}</p>\r\n            <button onClick={()=>setActualPage(actualPage + 1)} disabled={actualPage === totalPages ? true : false}>🢂</button>\r\n            <div className={loading ? 'CARGANDO_P' : 'dNone'}>CARGANDO.......</div>\r\n        </div>\r\n        <div className='historyCards-container'>\r\n            {\r\n                list.map( balance => {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Recibido en sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p className='balance-won-amount'>+ ${balance.won.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' && <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Compra de sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>- ${balance.salaPrice.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/help_Create.6b7511fe.png\";","export default __webpack_public_path__ + \"static/media/invitation.63541d44.png\";","export default __webpack_public_path__ + \"static/media/invitation_modal.19e6345b.png\";","export default __webpack_public_path__ + \"static/media/searchRoom.04d1fd99.png\";","export default __webpack_public_path__ + \"static/media/searchRoom_modal.e5ed9a27.png\";","export default __webpack_public_path__ + \"static/media/help_listRooms.bcf9cc2f.png\";","export default __webpack_public_path__ + \"static/media/room1.137414b5.png\";","export default __webpack_public_path__ + \"static/media/room2.823b890e.png\";","export default __webpack_public_path__ + \"static/media/room3.61290cc0.png\";","export default __webpack_public_path__ + \"static/media/room4.4f5ca05f.png\";","export default __webpack_public_path__ + \"static/media/room5.9c8ea450.png\";","export default __webpack_public_path__ + \"static/media/room6.31933602.png\";","export default __webpack_public_path__ + \"static/media/room7.df5da44d.png\";","export default __webpack_public_path__ + \"static/media/depositImg.0ad7da31.png\";","export default __webpack_public_path__ + \"static/media/lateralMenu.4b081f24.png\";","export default __webpack_public_path__ + \"static/media/help_withdraw.f77ba4d8.png\";","export default __webpack_public_path__ + \"static/media/help_sendToUser.eb225397.png\";","import React from 'react'\r\n\r\nimport createImg from '../Images/help_Create.png'\r\nimport invitatonImg from '../Images/invitation.png'\r\nimport invitationModalImg from '../Images/invitation_modal.png'\r\nimport searchImg from '../Images/searchRoom.png'\r\nimport searchModalImg from '../Images/searchRoom_modal.png'\r\nimport help_listRooms from '../Images/help_listRooms.png'\r\nimport room1 from '../Images/room1.png'\r\nimport room2 from '../Images/room2.png'\r\nimport room3 from '../Images/room3.png'\r\nimport room4 from '../Images/room4.png'\r\nimport room5 from '../Images/room5.png'\r\nimport room6 from '../Images/room6.png'\r\nimport room7 from '../Images/room7.png'\r\nimport depositImg from '../Images/depositImg.png'\r\nimport lateralMenu from '../Images/lateralMenu.png'\r\nimport help_withdraw from '../Images/help_withdraw.png'\r\nimport help_sendToUser from '../Images/help_sendToUser.png'\r\n\r\nimport './Styles/Help.css'\r\n\r\nexport const Help = () => {\r\n    return <div className='balance-container'>\r\n            <h1 className='help_h1'>Instructions</h1>\r\n            <div>\r\n                <p>\r\n                    Para iniciar el algoritmo de 2wanted primeramente se debe ingresar a una  “sala”, la cual se puede crear desde cero en la opción “Create Room” en el menú principal, colocando un nombre único y un valor mínimo de 0.00005 BTC, con una billetera cargada previamente.  \r\n                    <a className='help_a' href='#walletInstruction'> Click Aquí para instrucciones de deposito y retiro en la billetera.</a>\r\n                </p>\r\n                <div className='help_imgContainer'> <img className='help_create' src={createImg} alt=\"create\"/> </div>\r\n                <p>También puede unirse a una sala con una invitación recibida en la bandeja de notificaciones por usuarios pertenecientes a una sala ya creada anteriormente.</p>\r\n                <div className='help_imgContainer'>\r\n                    <img className='help_img help_medium' src={invitatonImg} alt=\"\"/>\r\n                    <img className='help_img help_medium' src={invitationModalImg} alt=\"\"/>\r\n                </div>\r\n                <p>o ingresar a una sala creada con anterioridad por otra persona, ya que toda sala creada quedará publica, y puede ingresar a ella por su nombre a través del buscador, con este método se le pedirá especificar si va a entrar como referido de un usuario perteneciente a la sala o desea beneficiar a un usuario aleatorio en ella.</p>\r\n                <div className='help_imgContainer '>\r\n                    <img className='help_img help_medium' src={searchImg} alt=\"\"/>\r\n                    <img className='help_img help_medium' src={searchModalImg} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Por cualquier método de ingreso a una sala se tendrá que pagar el coste de valor estipulado en ella la cual representa la única inversión que se realizará para ganar. <br></br><br></br>\r\n                    Después de haber ingresado a una sala correctamente ya podrá visualizarla desde la lista de salas activas e ingresar para ver su estado.\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <img className='help_listRoom' src={help_listRooms} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Una vez dentro de la sala el objetivo será completar una estructura piramidal limitada con 4 niveles, al comenzar serás siempre el usuario que encabeza dicha pirámide, los usuarios activos se representan con círculos amarillos encendidos, la idea es llegar al tercer y cuarto nivel, ya que por cada usuario activo en tercer nivel se pagara un valor del 50% del valor de la sala, y por cada usuario activo en el cuarto nivel se pagara un valor de 25%  del valor de la sala, con solo dos usuarios en el tercer nivel ya se recuperaría la inversión ya que sumaría un 100% y el resto de usuarios serian ganancia, dichos usuarios ingresados tienen la opción de ganar haciendo lo mismo como se mostrara a continuación con la siguiente dinámica de ingresos. <br></br><br></br>\r\n                    Al empezar este user1 tendrá su sala vacía como se muestra en la imagen, solo estando este como participante en la cima\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <img src={room1} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Para empezar a llenar su sala, invitará a un user2 haciendo Click en el botón + y escribiendo el nombre de usuario al que se desea invitar, este usuario recibirá una invitación en su bandeja de notificaciones para unirse y tendrá que pagar el importe del costo de la sala, luego de unirse se vería de esta manera\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <img className='help_img' src={room2} alt=\"\"/>\r\n                    <img className='help_img' src={room3} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Nótese que el user2 invitado empieza solo desde la cima para obtener el también sus ganancias completando el proceso, pero desde el user1 ya tiene su primer integrante, cuando el user2 invite un nuevo usuario que en este ejemplo llamaremos user3 se vería de esta manera\r\n                </p>\r\n                <div className='help_imgContainer'>\r\n                    <img className='help_img' src={room4} alt=\"\"/>\r\n                    <img className='help_img' src={room5} alt=\"\"/>\r\n                </div>\r\n                <div className='help_imgContainer'>\r\n                    <img src={room6} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    Viendo los ejemplos, El objetivo es buscar a 2 usuarios que estén interesados en ganar, que ellos hagan su trabajo, para rellenar tu sala de manera que puedas empezar a ganar en el tercer nivel, si cada usuario hace su trabajo de buscar dos usuarios para su sala, esta se llenara sola, sino esta la opción de llenarla tu mismo invitando todas las personas que puedas para ganar y a la ves los estas ayudando a ellos a llenar su sala. <br></br><br></br>\r\n                </p>\r\n                <h5>Ejemplo de sala con usuarios en tercer y cuarto nivel:</h5>\r\n                <div className='help_imgContainer'>\r\n                    <img src={room7} alt=\"\"/>\r\n                </div>\r\n                <p>\r\n                    En esta sala con un valor de ejemplo de 1 BTC se puede observar que lleva 3 usuarios en el tercer nivel y 2 en el cuarto nivel, cada usuario en tercera línea producirá 50% del valor de la sala en ganancia, ya que el valor de sala es de 1BTC, cada uno esta produciendo 0.5 BTC, los 3 usuarios actuales en tercer nivel sumarian 1.5 BTC, los usuarios en el cuarto nivel producen un 25% del valor de la sala por cada uno, los dos usuarios actuales en cuarto nivel estarían produciendo 0.25 BTC cada uno, sumando 0.5 BTC en cuarta línea. Sumando lo producido actualmente por tercer y cuarto nivel se estaría generando 2 BTC de ganancia, en una sala donde su única inversión fue de 1 BTC y todavía quedan muchos puestos por llenar. <br></br><br></br>\r\n                    Una sala llena de 2Wanted devuelve un 800% del valor de la inversión, en la tabla derecha podrás ver los detalles de ganancias e información de la sala y retirar ganancias a la billetera en cualquier momento. Luego de haber llenado la sala, esta desaparecerá de sus salas activas. Puedes crear y unirte a cuantas salas quieras al mismo tiempo y aprovechar este algoritmo fijo puesto para ti… <br></br><br></br>\r\n                </p>\r\n            </div>\r\n            <div id='walletInstruction'>\r\n                <h1 className='help_h1'>Instrucciones de deposito y retiro de la billetra 2Wanted</h1><br></br>\r\n                <div>\r\n                    <h4>Depositar btc en la billetera de 2wanted</h4>\r\n                    <p>\r\n                        El Bitcoin es la moneda es con que manejamos todos los depósitos, retiros y transferencias entre usuarios. <br></br><br></br>\r\n                        Para depositar dinero en 2WANTED deberás enviar Bitcoin (BTC) desde una billetera externa hacia tu billetera en 2Wanted <br></br><br></br>\r\n                        Oprimiendo Click en el icono se desplegará el menú lateral donde harás click en el botón deposit, el cual desplegara una ventana con una dirección asignada a tu cuenta de usuario y el código QR con los que podrás depositar a tu billetera en 2WANTED. \r\n                    </p>\r\n                    <div className='help_imgContainer'>\r\n                        <img className='help_img help_medium' src={lateralMenu} alt=\"\"/>\r\n                        <img className='help_img help_medium' src={depositImg} alt=\"\"/>\r\n                    </div>\r\n                    <p>\r\n                        Los tiempos en verificarse las transferencias de billeteras externas en BTC a tu cuenta 2Wanted dependen de varios factores, ver link <a className='help_a' href='https://es.cointelegraph.com/explained/how-long-does-a-cryptocurrency-transaction-take' rel='noreferrer' target='_blank'>https://es.cointelegraph.com/explained/how-long-does-a-cryptocurrency-transaction-take</a><br></br><br></br>\r\n                    </p>\r\n                    <h4>Retirar btc de la billetera de 2wanted hacia billeteras externas</h4>\r\n                    <p>\r\n                        Para el retiro hacia billeteras externas, hacer click en el botón se desplegará el menú lateral donde harás click en el botón retirar el cual desplegará un formato donde deberás redactar la dirección que va a recibir el retiro, el monto y a su vez tendrás información automática del fee de descuento y el total que recibiría la billetera receptora.\r\n                    </p>\r\n                    <div className='help_imgContainer'>\r\n                        <img className='help_img help_medium' src={lateralMenu} alt=\"\"/>\r\n                        <img className='help_img help_medium' src={help_withdraw} alt=\"\"/>\r\n                    </div>\r\n                    <h4>Transferir btc entre usuarios de 2wanted(Gratis sin comisiones)</h4>\r\n                    <p>\r\n                        Para transferir BTC entre usuarios dar click en el botón se desplegará el menú lateral donde harás click en el botón Send BTC to 2Wanted User (free) el cual desplegará un formato donde deberás redactar el nombre de usuario, el monto y click en enviar. <br></br>\r\n                        Las transferencias entre usuarios son gratuitas.\r\n                    </p>\r\n                    <div className='help_imgContainer'>\r\n                        <img className='help_img help_medium' src={lateralMenu} alt=\"\"/>\r\n                        <img className='help_img help_medium' src={help_sendToUser} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n}","import React, { useContext, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Context } from '../context' \r\nimport { MdMail } from \"react-icons/md\"\r\nimport { url } from '../urlServer'\r\nimport './Styles/Contact_us.css'\r\n\r\nexport const Contact_us = () => {\r\n\r\n    const { csrfToken } = useContext(Context)\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n\r\n    const asunto = useFormValues()\r\n    const emailPersonalized = useFormValues()\r\n\r\n    const data = {\r\n        asunto: asunto.value,\r\n        msg: emailPersonalized.value\r\n    }\r\n\r\n    function handleSubmit(e){\r\n\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            data: data,\r\n            url: url+'/api/contact_us_email',\r\n            headers: { \r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false)\r\n            if(res.data.error) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.error,\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: res.data.msg,\r\n                })\r\n            }\r\n        }).catch( err => {\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err,\r\n            })\r\n        })\r\n    }\r\n\r\n    return<div className='balance-container'>\r\n            <h1 className='text-center'>Contact us</h1>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='contact_text'>\r\n                    <p>Send a request and it will be answered as soon as possible to your email</p>\r\n                    <p>Or send email to our email &nbsp; <MdMail /> support@2wanted.com</p>\r\n                </div>\r\n                <div>\r\n                    <input className='contact_asunto' required {...asunto} type=\"text\" placeholder='Asunto'/>\r\n                    <textarea className='contact_msg' required {...emailPersonalized} placeholder='Mensaje'/>\r\n                </div>\r\n                <button disabled={loading ? true : false} className='contact_send'>\r\n                    <div className={loading ? \"spinner-border loading-login text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={loading ? 'dNone' : ''}>Send</p>\r\n                </button>\r\n            </form>\r\n        \r\n        </div>\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { Context } from '../context'\r\nimport { url } from '../urlServer'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport './Styles/HistoryUsers.css'\r\n\r\nexport const HistoryUsers = (props) => {\r\n    \r\n    const user = props.match.params.user\r\n\r\n    const { csrfToken } = useContext(Context)\r\n    \r\n    const [ modeList, setModeList ] = useState('normal')\r\n\r\n    const [ responseList, setResponseList ] = useState([])\r\n    const [ totalPages, setTotalPages ] = useState(1)\r\n    const [ actualPage, setActualPage ] = useState(1)\r\n    const [ listLoading, setListLoading ] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n\r\n        setResponseList([])\r\n        setListLoading(true)\r\n\r\n        if(modeList === 'normal'){\r\n            if(props.match.params.fecha1 && props.match.params.fecha2){\r\n    \r\n                const inicialDate = props.match.params.fecha1\r\n                const finalDate = props.match.params.fecha2\r\n                \r\n                const splitDate = inicialDate.split('-')\r\n            \r\n                const fechaInicio = new Date(splitDate[0], splitDate[1]-1, splitDate[2])\r\n                    \r\n                const splitDate2 = finalDate.split('-')\r\n                \r\n                const fechaFinal = new Date(splitDate2[0], splitDate2[1]-1, splitDate2[2], 24, 0, 0)\r\n    \r\n                axios({\r\n                    method: 'post',\r\n                    data: { getFechaInicial: fechaInicio, getFechaFinal: fechaFinal, user: user, page: actualPage },\r\n                    url: url+'/api/admin/userhistorialbalance',\r\n                    headers: {\r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    if(res.data.error) {\r\n                        setListLoading(false)\r\n                        return Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: res.data.error,\r\n                        })\r\n                    }else{\r\n                        setResponseList(res.data.data)\r\n                        setTotalPages(res.data.totalPages)\r\n                        setListLoading(false)\r\n                    }\r\n                }).catch( err => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: err,\r\n                    })\r\n                    setListLoading(false)\r\n                })\r\n                \r\n            }else if(modeList === 'normal'){\r\n    \r\n                axios({\r\n                    method: 'post',\r\n                    data: { user: user, page: actualPage },\r\n                    url: url+'/api/admin/userhistorialbalance',\r\n                    headers: {\r\n                        'X-CSRF-Token': csrfToken\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    if(res.data.error) {\r\n                        setListLoading(false)\r\n                        return Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: res.data.error,\r\n                        })\r\n                    }else{\r\n                        setResponseList(res.data.data)\r\n                        setTotalPages(res.data.totalPages)\r\n                        setListLoading(false)\r\n                    }\r\n                }).catch( err => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: err,\r\n                    })\r\n                    setListLoading(false)\r\n                })\r\n            }\r\n        }else if(modeList === 'deposit'){\r\n            axios({\r\n                method: 'post',\r\n                data: { user: user, page: actualPage },\r\n                url: url+'/api/admin/depositUsersList',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setResponseList(res.data.list)\r\n                setListLoading(false)\r\n            }).catch( err => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n                setListLoading(false)\r\n            })\r\n        }else if(modeList === 'withdraw'){\r\n            axios({\r\n                method: 'post',\r\n                data: { user: user, page: actualPage },\r\n                url: url+'/api/admin/withdrawUsersList',\r\n                headers: {\r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            })\r\n            .then(res => {\r\n                setResponseList(res.data.list)\r\n                setListLoading(false)\r\n            }).catch( err => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n                setListLoading(false)\r\n            })\r\n        }\r\n\r\n    },[user, props.match.params.fecha1, props.match.params.fecha2, actualPage, modeList, csrfToken])\r\n\r\n    function handleDeposits(){\r\n        setActualPage(1)\r\n        setModeList('deposit')\r\n    }\r\n\r\n    function handleWithdraws(){\r\n        setActualPage(1)\r\n        setModeList('withdraw')\r\n    }\r\n    \r\n    return <div className='balance-container'>\r\n        <div className='section-title'>\r\n            <h1>Historial de Usuario</h1>\r\n        </div>\r\n        <div className={props.match.params.fecha1 ? 'section-title' : 'dNone'}>\r\n            {\r\n                <h2>Desde {props.match.params.fecha1} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hasta {props.match.params.fecha2}</h2>\r\n            }\r\n        </div>\r\n        <div className='historyUsers-buttonsTop'>\r\n            <button onClick={handleDeposits} className='historyUsers-buttonTop'>Buscar Depositos</button>\r\n            <button onClick={handleWithdraws} className='historyUsers-buttonTop'>Buscar Retiros</button>\r\n        </div>\r\n        <div className='container-paginations-buttons'>\r\n            <button onClick={()=>setActualPage(actualPage - 1)} disabled={actualPage === 1 ? true : false}>🢀</button>\r\n                <p>{actualPage} </p><p>&nbsp;&nbsp;-&nbsp;&nbsp;</p><p> {totalPages}</p>\r\n            <button onClick={()=>setActualPage(actualPage + 1)} disabled={actualPage === totalPages ? true : false}>🢂</button>\r\n            <div className={listLoading ? 'CARGANDO_P' : 'dNone'}>CARGANDO.........</div>    \r\n        </div>\r\n        <div className='historyCards-container'>\r\n            {\r\n                responseList.map( balance => {\r\n                    return (\r\n                        balance.type === 'won' ?  <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Recibido en sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className='historyCards-group'>\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p className='balance-won-amount'>+ ${balance.won.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'buy' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Compra de sala:</p>\r\n                                    <p>{balance.salaName}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>${balance.wallet.toString().slice(0,9)}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>- ${balance.salaPrice.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'deposit' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <p className='balance-description-title'>Deposito</p>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+${balance.depositAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawBtc' ? <li key={balance._id} >\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Retiro a direccion:</p>\r\n                                    <p>{balance.toAddress}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>txId:</p>\r\n                                    <p>{balance.txId}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>{balance.wallet}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>+${balance.withdrawAmount.toString().slice(0,9)}</p>\r\n                            </div>\r\n                        </li> :\r\n                        balance.type === 'withdrawToUser' && <li key={balance._id}>\r\n                            <div className='balance-date-card'>{`${new Date(balance.date).getDate()}/${new Date(balance.date).getMonth() + 1}/${new Date(balance.date).getFullYear()}  -  ${new Date(balance.date).getHours()}:${new Date(balance.date).getMinutes()}`}</div>\r\n                            <div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Retiro a usuario:</p>\r\n                                    <p>{balance.toUser}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Reference:</p>\r\n                                    <p>{balance.reference}</p>\r\n                                </div>\r\n                                <div className=\"historyCards-group\">\r\n                                    <p className='balance-description-title'>Billetera:</p>\r\n                                    <p>{balance.wallet}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='balance-won-amount-container'>\r\n                                <p className='balance-won-amount'>-${balance.withdrawAmount}</p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}","import React, { useState, useContext } from 'react'\r\nimport './Styles/ChangePassword.css'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { Context } from '../context'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\nimport { url } from '../urlServer'\r\n\r\nexport const ChangePassword= props => {\r\n\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const forgotHash = props.match.params.token\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    const { csrfToken } = useContext(Context)\r\n    const password = useFormValues()\r\n    const confirmPassword = useFormValues()\r\n\r\n    async function handleChange(e){\r\n\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n\r\n        if(!reg_password.test(password.value)){\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'It must contain uppercase, lowercase and number, minimum 8 characters',\r\n            })\r\n        }\r\n        if(password.value === confirmPassword.value){\r\n            await axios({\r\n                data: {forgotHash, password: password.value, confirmPassword: confirmPassword.value },\r\n                method: 'post',\r\n                url: url+'/api/changeForgotPassword',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then(res => {\r\n                setLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success',\r\n                        text: res.data.msg,\r\n                    })\r\n                    props.history.push(`/`)\r\n                }\r\n            }).catch(err => {\r\n                setLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err,\r\n                })\r\n            })\r\n        }else{\r\n            setLoading(false)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Passwords do not match',\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div className='changePasswordEmail'>\r\n        <form onSubmit={handleChange}>\r\n            <h1>Change of password</h1>\r\n            <p>Enter new password</p>\r\n            <input  {...password} type=\"password\"/>\r\n            <p>Confirm new password</p>\r\n            <input  {...confirmPassword} type=\"password\"/>\r\n            <button disabled={loading ? true : false} className='btn btn-dark btn-block changepasswordemail-button'>\r\n                <div className={loading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p  className={loading ? 'dNone' : ''}>Change</p>\r\n            </button>\r\n        </form>\r\n    </div>\r\n}","import React, { useState, useContext } from 'react'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { Context } from '../../context'\r\nimport { MdInfo, MdLockOutline } from \"react-icons/md\"\r\n\r\nconst UpdatePasswordForm = ({useFormValues, url}) => {\r\n    \r\n    const [newPasswordError, setNewPasswordError] = useState(false)\r\n    const [password_valid, setPassword_valid] = useState(true)\r\n    const [passwordLoading, setPasswordLoading] = useState(false)\r\n    const { csrfToken } = useContext(Context)\r\n    const reg_password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/\r\n    const password = useFormValues()\r\n    const newPassword = useFormValues()\r\n    const confirmNewPassword = useFormValues()\r\n\r\n    function updatePassword(e){\r\n        e.preventDefault()  \r\n\r\n        if(!reg_password.test(newPassword.value)){\r\n            return setPassword_valid(false)\r\n         }else{setPassword_valid(true)}\r\n\r\n        if(newPassword.value === confirmNewPassword.value){\r\n\r\n            setPasswordLoading(true)\r\n\r\n            axios({\r\n                method: 'post',\r\n                data: { password: password.value, newPassword: newPassword.value },\r\n                url: url+'/edit/passwordemail',\r\n                headers: { \r\n                    'X-CSRF-Token': csrfToken\r\n                }\r\n            }).then( res => {\r\n                setPasswordLoading(false)\r\n                if(res.data.error){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: res.data.error,\r\n                    })\r\n                }else{\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: res.data.msg,\r\n                    })\r\n                }\r\n            }).catch( error => {\r\n                setPasswordLoading(false)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: error,\r\n                })\r\n            })\r\n        }else{return setNewPasswordError(true)}\r\n    }\r\n\r\n    return(\r\n        <div className='password-configuration'>\r\n            <h4><MdLockOutline />&nbsp;Change password</h4>\r\n            <form onSubmit={updatePassword}>\r\n                <input {...password} autoComplete='true' required type=\"password\" placeholder='Password'/>\r\n                <input {...newPassword} autoComplete='true' required type=\"password\" placeholder='New password'/>\r\n                <input {...confirmNewPassword} autoComplete='true' required type=\"password\" placeholder='Confirm new password'/>\r\n                <p className={newPasswordError ? 'configuration-warning' : 'dNone'}><MdInfo />the confirmation does not match</p>\r\n                <p className={!password_valid ? 'configuration-warning' : 'dNone'}><MdInfo />&nbsp;Minimum 8 characters without spaces, upper and lower case</p>\r\n                <button disabled={passwordLoading ? true : false}>\r\n                    <div className={passwordLoading ? \"spinner-conf spinner-border text-danger\" : 'dNone'} role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <p className={passwordLoading ? 'dNone' : '' }> Update password </p>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePasswordForm","import React, { useState } from 'react'\r\nimport PasswordVerification from '../Modals/PasswordVerfication'\r\nimport '../../Pages/Styles/Profile.css'\r\nimport { MdInfo, MdMail } from \"react-icons/md\"\r\n\r\nconst UpdateEmailForm = ({url, useFormValues}) => {\r\n\r\n    const [newEmailError, setNewEmailError] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(null)\r\n    const email = useFormValues()\r\n    const newEmail = useFormValues()\r\n    const confirmNewEmail = useFormValues()\r\n\r\n    function onCloseModal(){\r\n        setModalOpen(null)\r\n    }\r\n\r\n    const data = { newEmail: newEmail.value, email: email.value }\r\n\r\n    function updateEmail(e){\r\n\r\n        e.preventDefault()\r\n\r\n        if(newEmail.value === confirmNewEmail.value){\r\n\r\n            setModalOpen(true)\r\n            \r\n        }else{return  setNewEmailError(true)}\r\n    }\r\n\r\n    return(\r\n        <div className='email-configuration'>\r\n            <h4><MdMail />&nbsp;Change Email</h4>\r\n            <form onSubmit={updateEmail}>\r\n                <input id='changeEmail' autoComplete='true' {...email} required type=\"email\" placeholder='Email'/>\r\n                <input {...newEmail} autoComplete='true' required type=\"email\" placeholder='New email'/>\r\n                <input {...confirmNewEmail} autoComplete='true' required type=\"email\" placeholder='Confirm new email'/>\r\n                <p className={newEmailError ? 'configuration-warning' : 'dNone'}><MdInfo />The confirmation does not match</p>\r\n                <button>\r\n                    <p>Update email</p>\r\n                </button>\r\n            </form>\r\n            <PasswordVerification isOpen={modalOpen} onClose2={onCloseModal} data={data} url={url+'/edit/passwordemail'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateEmailForm\r\n","import React, { useContext } from 'react'\r\nimport { IoMdSettings, IoIosContact } from 'react-icons/io'\r\nimport { Context } from '../context'\r\nimport { useFormValues } from '../hooks/useFormValues'\r\nimport { url } from '../urlServer'\r\nimport './Styles/Profile.css'\r\nimport UpdatePasswordForm from '../Components/Forms/UpdatePasswordForm'\r\nimport UpdateEmailForm from '../Components/Forms/UpdateEmailForm'\r\n\r\nexport const Profile = () => {\r\n\r\n    const { userData } = useContext(Context)\r\n\r\n    if(!userData.date) {return 'Loading'}\r\n    \r\n    return  <div className='configurations-container'>\r\n                <div className='profile-title-container'>\r\n                    <h2 className='profile-title'><IoMdSettings />&nbsp;User configuration</h2>\r\n                </div>\r\n                <div className='configuration-wrap'>\r\n                    <div className='configuration-buttons'>\r\n                        <div className='configuration-button active'>Profile</div>\r\n                    </div>\r\n                    <div className='configuration-details'>\r\n                        <div className='perfil-configuration-container'>\r\n                            <div className='datos-configuration'>\r\n                                <div><IoIosContact size='50' />&nbsp; {userData.userName}</div>\r\n                                <h4>User data</h4>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Username: </p>\r\n                                    <p className='datos-description'>{userData.userName}</p>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Email: </p>\r\n                                    <p className='datos-description'>{userData.email}</p>\r\n                                    <a href=\"#changeEmail\">Edit...</a>\r\n                                </div>\r\n                                <div className='datos-description-container'>\r\n                                    <p className='datos-titles'>Created from: </p>\r\n                                    <p className='datos-description'>{`${new Date(userData.date).getDate()}/${new Date(userData.date).getMonth() + 1}/${new Date(userData.date).getFullYear()}`}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <UpdatePasswordForm url={url} useFormValues={useFormValues} />\r\n                            \r\n                            <UpdateEmailForm url={url} useFormValues={useFormValues} />\r\n\r\n                        </div>\r\n\r\n{/* -------------------------------------------------------------------------------------------------------------  */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n}","import React, { useContext } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Layout from './Components/Layout'\r\nimport { Blank } from './Components/Blank'\r\nimport { Home } from './Pages/Home'\r\nimport { AdminHome } from './Pages/AdminHome'\r\nimport { Room } from './Pages/Room'\r\nimport { Signup } from './Pages/Signup'\r\nimport { Signin } from './Pages/AdminSignin'\r\nimport { Balance } from './Pages/Balance'\r\nimport { UsersInSalas } from './Pages/UsersInSala'\r\nimport { Help } from './Pages/Help'\r\nimport { Contact_us } from './Pages/Contact_us'\r\nimport { HistoryUsers } from './Pages/HistoryUsers'\r\nimport { ChangePassword } from './Pages/ChangePassword'\r\nimport { Context } from './context'\r\nimport { Profile } from './Pages/Profile';\r\n\r\nfunction App() {\r\n\r\n  const { isAuth, isAdminAuth } = useContext(Context)\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path ='/changepasswordemail/:token/' component={ChangePassword}/>\r\n        <Route exact path ='/' component={Signup}/>\r\n        <Route path ='/K9N1820/to/access' component={Signin}/>\r\n        <Route exact path ='/pending/' component={Blank}/>\r\n        <Route exact path ='/failure/' component={Blank}/>\r\n        {\r\n          isAuth ? <Layout>\r\n            <Route exact path ='/help/' component={Help}/>\r\n            <Route exact path ='/home/' component={Home}/>\r\n            <Route exact path ='/profile/' component={Profile}/>\r\n            <Route exact path ='/contact_us/' component={Contact_us}/>\r\n            <Route exact path ='/balance/' component={Balance}/>\r\n            <Route exact path ='/sala/:salaId/' component={Room}/>\r\n          </Layout> :\r\n          isAdminAuth && <>\r\n            <Route exact path ='/adminHome/' component={AdminHome}/>\r\n            <Route exact path ='/historyUsers/:fecha1/:fecha2/:user' component={HistoryUsers}/>\r\n            <Route exact path ='/historyUsers/:user' component={HistoryUsers}/>\r\n            <Route exact path ='/historyUsers/:user/:sala' component={UsersInSalas}/>\r\n          </>\r\n        }\r\n        <Route component={Blank}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Context from './context'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport './GlobalStyles.css'\r\n\r\nReactDOM.render(\r\n  <Context.Provider>\r\n    <App />\r\n  </Context.Provider>,\r\n  document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}